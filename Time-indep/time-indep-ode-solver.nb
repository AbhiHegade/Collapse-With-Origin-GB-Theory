(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1692540,      32045]
NotebookOptionsPosition[   1680885,      31878]
NotebookOutlinePosition[   1681280,      31894]
CellTagsIndexPosition[   1681237,      31891]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Time Independent Equations ESGB", "Section",
 CellChangeTimes->{{3.8683965998339148`*^9, 
  3.868396612985517*^9}},ExpressionUUID->"f7e013f5-5357-48e7-8900-\
4e5a90e67106"],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesys", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["ss", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["Q", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
       RowBox[{"4", " ", 
        RowBox[{"ss", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{"4", " ", 
           RowBox[{"Q", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["nn", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"nn", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["Q", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{"4", " ", 
           RowBox[{"Q", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["Q", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"12", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Q", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["r", "4"]}], "-", 
            RowBox[{
             SuperscriptBox["r", "4"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            RowBox[{"24", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"4", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"12", " ", 
             SuperscriptBox["r", "2"]}], "-", 
            RowBox[{"25", " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
            RowBox[{"12", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "2"], "+", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"r", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "4"]}], "-", 
            RowBox[{"1024", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
            RowBox[{"2880", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "-", 
            RowBox[{"48", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"128", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["r", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "4"], "+", 
               RowBox[{"4352", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
               RowBox[{"32", " ", 
                SuperscriptBox["r", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "4"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"12", " ", 
                SuperscriptBox["r", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["r", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"7", " ", 
                   SuperscriptBox["r", "2"]}], "+", 
                  RowBox[{"8", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "5"], "-", 
           RowBox[{"96", " ", "r", " ", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"96", " ", 
            SuperscriptBox["r", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"5", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{"32", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
              RowBox[{"39", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
              RowBox[{"15", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "3"]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Q", "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], " ", 
               SuperscriptBox["r", "4"]}], "+", 
              RowBox[{"7", " ", 
               SuperscriptBox["r", "4"], " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
              RowBox[{"192", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "-", 
              RowBox[{"192", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}]}], 
             ")"}]}]}], ")"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Q", "[", "r", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8683966941143436`*^9, 3.868396700475195*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a395ccca-f8f0-445c-ac46-355ac1dddfb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"odedecoupled", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["Q", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"12", " ", 
          SuperscriptBox["r", "3"], " ", 
          SuperscriptBox["rh", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Q", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "7"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "r"}], "-", "rh"}], ")"}]}], "-", 
            RowBox[{"96", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}], " ", 
             SuperscriptBox["rh", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"r", "-", "rh"}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "4"], "+", 
            RowBox[{"24", " ", 
             SuperscriptBox["rh", "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"12", " ", 
                SuperscriptBox["r", "2"]}], "-", 
               RowBox[{"25", " ", "r", " ", "rh"}], "+", 
               RowBox[{"12", " ", 
                SuperscriptBox["rh", "2"]}]}], ")"}]}], "+", 
            RowBox[{"24", " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}], " ", 
             SuperscriptBox["rh", "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"r", "-", "rh"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}]}], "+", 
            RowBox[{"64", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", "r"}], "-", 
               RowBox[{"5", " ", "rh"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r"}], "-", 
                RowBox[{"3", " ", "rh"}]}], ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
            RowBox[{"16", " ", 
             SuperscriptBox["r", "3"], " ", "rh", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "r"}], "+", 
               RowBox[{"3", " ", "rh"}]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"r", "-", "rh"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "6"], " ", "rh", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["r", "3"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"12", " ", 
                   SuperscriptBox["r", "2"]}], "-", 
                  RowBox[{"32", " ", "r", " ", "rh"}], "+", 
                  RowBox[{"21", " ", 
                   SuperscriptBox["rh", "2"]}]}], ")"}]}], "+", 
               RowBox[{"24", " ", 
                RowBox[{"(", 
                 RowBox[{"r", "-", "rh"}], ")"}], " ", 
                SuperscriptBox["rh", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", "rh"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "8"], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", "r"}], "-", 
              RowBox[{"7", " ", "rh"}]}], ")"}], " ", 
            RowBox[{"Q", "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
           RowBox[{"96", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"96", " ", 
            SuperscriptBox["r", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["r", "2"]}], "-", 
              RowBox[{"5", " ", "r", " ", "rh"}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox["rh", "2"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"768", " ", 
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], " ", 
            SuperscriptBox["rh", "2"], " ", 
            RowBox[{"Q", "[", "r", "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "3"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["r", "3"]}], "-", 
              RowBox[{"32", " ", 
               SuperscriptBox["r", "2"], " ", "rh"}], "+", 
              RowBox[{"39", " ", "r", " ", 
               SuperscriptBox["rh", "2"]}], "-", 
              RowBox[{"15", " ", 
               SuperscriptBox["rh", "3"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "3"]}]}], ")"}]}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Q", "[", "r", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868474986627901*^9, 3.868474991641748*^9}, {
  3.868475074987924*^9, 3.868475086355723*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"7cf68800-7ce5-4c2a-a805-224e6a01c188"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"odedecoupled", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Beta]", "->", " ", 
       RowBox[{"Function", "[", 
        RowBox[{"x", ",", "  ", 
         RowBox[{"\[Epsilon]", "*", "x"}]}], "]"}]}], ",", 
      RowBox[{"Q", "->", " ", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "r", "]"}]}], "]"}]}]}], "}"}]}], "//",
    "Simplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "''"}], "[", "r", "]"}], ",", " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], ",", " ", 
      RowBox[{"\[Phi]", "[", "r", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{"rh", "->", " ", "1"}], "}"}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.868475246444482*^9, 3.868475267983048*^9}, {
  3.8684780293323507`*^9, 3.8684780590619907`*^9}, {3.868478093911726*^9, 
  3.8684780974640427`*^9}, {3.868478134223626*^9, 3.868478163587949*^9}, {
  3.868478296053282*^9, 3.868478312419388*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"02daa90c-d868-4ce6-8e31-829bb3d48938"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"12", " ", 
      SuperscriptBox["r", "3"], " ", "\[Epsilon]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}]}], "-", 
        RowBox[{"96", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["r", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"12", "-", 
        RowBox[{"25", " ", "r"}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["r", "2"]}]}], ")"}], " ", "\[Epsilon]", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
     RowBox[{"32", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
      SuperscriptBox["r", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"21", "-", 
        RowBox[{"32", " ", "r"}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["r", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Epsilon]", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "3"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", "\[Epsilon]", 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
         SuperscriptBox["r", "6"]}], "+", 
        RowBox[{"64", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"3", "-", 
            RowBox[{"2", " ", "r"}]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", "r"}]}], ")"}], " ", 
         SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
      SuperscriptBox["r", "6"], " ", 
      SuperscriptBox["\[Epsilon]", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "5"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "8"], "-", 
       RowBox[{"96", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["r", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "7"}], "+", 
          RowBox[{"6", " ", "r"}]}], ")"}], " ", "\[Epsilon]", " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "+", 
       RowBox[{"768", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        SuperscriptBox["\[Epsilon]", "3"], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "+", 
       RowBox[{"96", " ", 
        SuperscriptBox["r", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"5", " ", "r"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}]}], ")"}], " ", 
        SuperscriptBox["\[Epsilon]", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
       RowBox[{"64", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "15"}], "+", 
          RowBox[{"39", " ", "r"}], "-", 
          RowBox[{"32", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["r", "3"]}]}], ")"}], " ", 
        SuperscriptBox["\[Epsilon]", "3"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}], "3"]}]}], ")"}]}], 
    ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "r", "]"}]}]], "Output",
 CellChangeTimes->{{3.868475265358968*^9, 3.868475268529512*^9}, {
  3.8684780356031017`*^9, 3.8684780982016363`*^9}, {3.868478137602685*^9, 
  3.868478163955619*^9}, {3.8684783047184067`*^9, 3.868478312787363*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"0dd20b31-df32-4345-bc6d-0d9736c9f41a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"12", " ", 
         SuperscriptBox["r", "3"], " ", 
         SuperscriptBox["rh", "2"], " ", "\[Epsilon]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "7"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "r"}], "-", "rh"}], ")"}]}], "-", 
           RowBox[{"96", " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12", " ", 
            SuperscriptBox["r", "2"]}], "-", 
           RowBox[{"25", " ", "r", " ", "rh"}], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["rh", "2"]}]}], ")"}], " ", "\[Epsilon]", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
        RowBox[{"32", " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", "rh"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12", " ", 
            SuperscriptBox["r", "2"]}], "-", 
           RowBox[{"32", " ", "r", " ", "rh"}], "+", 
           RowBox[{"21", " ", 
            SuperscriptBox["rh", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[Epsilon]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "3"]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", "rh"}], ")"}], " ", "\[Epsilon]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}]}], "+", 
           RowBox[{"64", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "r"}], "-", 
              RowBox[{"5", " ", "rh"}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "r"}], "-", 
               RowBox[{"3", " ", "rh"}]}], ")"}], "2"], " ", 
            SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "4"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["r", "6"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", "rh"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Epsilon]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "5"]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", "rh"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "8"], "-", 
          RowBox[{"96", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox["\[Epsilon]", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["r", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", "r"}], "-", 
             RowBox[{"7", " ", "rh"}]}], ")"}], " ", "\[Epsilon]", " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}], "+", 
          RowBox[{"768", " ", 
           RowBox[{"(", 
            RowBox[{"r", "-", "rh"}], ")"}], " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox["\[Epsilon]", "3"], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}], "+", 
          RowBox[{"96", " ", 
           SuperscriptBox["r", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "-", 
             RowBox[{"5", " ", "r", " ", "rh"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["rh", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Epsilon]", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
          RowBox[{"64", " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"8", " ", 
              SuperscriptBox["r", "3"]}], "-", 
             RowBox[{"32", " ", 
              SuperscriptBox["r", "2"], " ", "rh"}], "+", 
             RowBox[{"39", " ", "r", " ", 
              SuperscriptBox["rh", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox["rh", "3"]}]}], ")"}], " ", 
           SuperscriptBox["\[Epsilon]", "3"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], "3"]}]}], ")"}]}], 
       ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], ",", 
   "\[Phi]", ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.868478206928956*^9, 3.868478213327132*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"93ae0edd-f3c4-4ac0-bf5e-73a15380295c"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8684782921292458`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"9502303e-d56d-46bd-be89-2ab353a6918b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Series", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868478061969829*^9, 3.8684780762180967`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a992b241-7539-4023-a154-adb7e0f3ad5a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "r"}], "-", "rh"}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"(", 
     RowBox[{"r", "-", "rh"}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"12", " ", 
       SuperscriptBox["rh", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox["r", "3"], " ", "rh", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
      RowBox[{"20", " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["rh", "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
      RowBox[{
       SuperscriptBox["r", "6"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["r", "5"], " ", "rh", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "4"]}], "-", 
      RowBox[{
       SuperscriptBox["r", "4"], " ", 
       SuperscriptBox["rh", "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "4"]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["r", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"r", "-", "rh"}], ")"}]}]], "+", 
  RowBox[{
   SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "r", "]"}]}]], "Output",
 CellChangeTimes->{{3.868478070249009*^9, 3.86847808311526*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"6f767bc9-294d-461c-8a81-610955c52b7b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rulehorizon", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nn", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", 
        RowBox[{"Sum", "[", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["nn", "j"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ss", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["ss", "j"], "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\[Phi]", " ", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "j"], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "j"], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", " ", 
          "r"}], "]"}]}], "]"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866989149869413*^9, 3.866989280309387*^9}, {
  3.866989314399839*^9, 3.866989354107645*^9}, {3.8669894145637493`*^9, 
  3.866989416721031*^9}, {3.866989597267037*^9, 3.866989597573399*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2fa3ccc6-f36f-4de3-9f55-56744c1ec546"],

Cell[CellGroupData[{

Cell["Coefficients Near Horizon:", "Subsection",
 CellChangeTimes->{{3.868396795605669*^9, 
  3.868396807022821*^9}},ExpressionUUID->"621ed0a5-d6da-4160-8df8-\
42baaa6d697a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"odesys", "/.", "rulehorizon"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"Series", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "rh", ",", "1"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"coeffsrule", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     SubsuperscriptBox["\[Phi]", "1", "2"], "->", " ", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rh", "3"]}], " ", 
        SubscriptBox["\[Phi]", "1"]}], "-", 
       RowBox[{"12", " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["rh", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[Beta]", "\[Prime]",
         MultilineFunction->None], "[", 
        SubscriptBox["\[Phi]", "0"], "]"}]}]]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "//", "Simplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Phi]", "2"], "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "80"}], " ", 
          SuperscriptBox["rh", "3"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
         RowBox[{"64", " ", 
          SuperscriptBox["rh", "2"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
         RowBox[{"12", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"7", " ", 
             SuperscriptBox["rh", "2"]}], "-", 
            RowBox[{"12", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "5"], "+", 
            RowBox[{"48", " ", "rh", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox["rh", "3"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rh", "4"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
           RowBox[{"96", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
        ")"}]}]}], "}"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868396826147756*^9, 3.868396849918255*^9}, {
  3.8683969670378437`*^9, 3.8683969859055567`*^9}, {3.8683970383203*^9, 
  3.868397044250245*^9}, {3.868397089336754*^9, 3.868397113488892*^9}, {
  3.868397169119562*^9, 3.8683971928640747`*^9}, {3.868397297014398*^9, 
  3.8683973827605743`*^9}, {3.868397480716022*^9, 3.868397480832529*^9}, {
  3.868397528408719*^9, 3.868397533127055*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"6f7a1333-e554-487c-9ab4-031bd1b18a5c"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"rh", "+", 
        RowBox[{"4", " ", 
         SubscriptBox["\[Phi]", "1"], " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"r", "-", "rh"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       SubscriptBox["ss", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"rh", "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Phi]", "1"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"]}], "-", 
      FractionBox[
       RowBox[{"72", " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}], "rh"], "+", 
      RowBox[{"4", " ", 
       SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
       RowBox[{
        SuperscriptBox["\[Beta]", "\[Prime]",
         MultilineFunction->None], "[", 
        SubscriptBox["\[Phi]", "0"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rh", "2"], "+", 
         RowBox[{"24", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"12", " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "80"}], " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", 
               SuperscriptBox["rh", "2"]}], "-", 
              RowBox[{"12", " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "5"], "+", 
              RowBox[{"48", " ", "rh", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "3"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rh", "5"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["rh", "4"], " ", 
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
         RowBox[{"96", " ", "rh", " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}]}]], 
       RowBox[{
        SubscriptBox["\[Phi]", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rh", "4"], "+", 
          RowBox[{"48", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"192", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"80", " ", 
                SuperscriptBox["rh", "3"], " ", 
                SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
               RowBox[{"64", " ", 
                SuperscriptBox["rh", "2"], " ", 
                SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
               RowBox[{"12", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "7"}], " ", 
                   SuperscriptBox["rh", "2"]}], "+", 
                  RowBox[{"12", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                SubscriptBox["\[Phi]", "1"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["rh", "5"], "+", 
                  RowBox[{"48", " ", "rh", " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["rh", "3"], " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], 
              ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "6"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "5"], " ", 
              SubscriptBox["\[Phi]", "1"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}]}], 
         ")"}]}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.868396830779805*^9, 3.8683968504332237`*^9}, {
   3.868396959397595*^9, 3.868396986591711*^9}, {3.868397041344277*^9, 
   3.868397044603455*^9}, {3.868397110857274*^9, 3.868397113768283*^9}, 
   3.868397193372365*^9, {3.8683973049391317`*^9, 3.868397312421626*^9}, {
   3.8683973446986437`*^9, 3.868397383043962*^9}, 3.8683974856742077`*^9, 
   3.868397538352797*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"06199f02-b60a-49b9-8b46-08e47f817017"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeffsrule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["ss", "1"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"rh", "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["ss", "2"], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12288", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "5"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "6"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "-", 
              RowBox[{"288", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "2"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"4", " ", "rh", " ", 
            SubsuperscriptBox["\[Phi]", "1", "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "+", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "-", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "2"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "96"}], " ", 
               SuperscriptBox["rh", "6"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
              RowBox[{"4608", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "4"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"5", " ", 
                  SuperscriptBox["rh", "2"]}], "-", 
                 RowBox[{"6", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["rh", "8"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["rh", "2"], "+", 
                 RowBox[{"24", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}],
            "-", 
           RowBox[{"16", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "6"], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "4"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"7", " ", 
                  SuperscriptBox["rh", "2"]}], "+", 
                 RowBox[{"48", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}],
            "+", 
           RowBox[{"288", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["rh", "5"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"7", " ", 
                  SuperscriptBox["rh", "3"]}], "+", 
                 RowBox[{"36", " ", "rh", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"32", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"rh", "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Phi]", "1"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "4"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "3"], " ", 
              SubscriptBox["\[Phi]", "1"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
          ")"}]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rh", "3"]}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rh", "6"], "-", 
          RowBox[{"192", " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}]]}], 
       RowBox[{"8", " ", 
        SuperscriptBox["rh", "2"], " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}]]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      SubscriptBox["\[Phi]", "2"], "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "80"}], " ", 
          SuperscriptBox["rh", "3"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
         RowBox[{"64", " ", 
          SuperscriptBox["rh", "2"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
         RowBox[{"12", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"7", " ", 
             SuperscriptBox["rh", "2"]}], "-", 
            RowBox[{"12", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "5"], "+", 
            RowBox[{"48", " ", "rh", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox["rh", "3"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rh", "4"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
           RowBox[{"96", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
        ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868396940806965*^9, 3.8683969497389307`*^9}, {
  3.868397009036913*^9, 3.868397009287722*^9}, {3.868397258749552*^9, 
  3.8683972701782303`*^9}, {3.868397568775285*^9, 3.868397575972232*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e7e5e68b-3358-46f5-bb67-09546f5d9fc6"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gaussian Theory", "Section",
 CellChangeTimes->{{3.868397967278953*^9, 
  3.8683979696821747`*^9}},ExpressionUUID->"cdb01500-2fc1-4960-92a2-\
58f7c71ebcdc"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.86848699756532*^9, 3.868486998113781*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"800ed520-c312-4087-b835-7086694f90dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"genseries", "[", 
    RowBox[{
    "\[Epsilon]_", ",", "rh_", ",", "\[Phi]0_", ",", "\[Mu]_", ",", "l_"}], 
    " ", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Phi]1", ",", "\[Phi]2", ",", "ss1", ",", "ss2", ",", "rulebeta", ",",
        "\[Phi]max"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rulebeta", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", "->", " ", 
         RowBox[{"Function", "[", 
          RowBox[{"x", ",", " ", 
           RowBox[{
            SuperscriptBox["l", "2"], "*", 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"1", "-", " ", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], "*", 
                 SuperscriptBox["x", "2"]}], "]"}]}], ")"}], 
             RowBox[{"2", "\[Mu]"}]]}]}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]1", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["rh", "3"]}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["rh", "6"], "-", 
            RowBox[{"192", " ", 
             SuperscriptBox["rh", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}]]}], 
         
         RowBox[{"8", " ", 
          SuperscriptBox["rh", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", "\[Phi]0", "]"}]}]], "/.", 
        "rulebeta"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ss1", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"rh", "+", 
             RowBox[{"4", " ", "\[Phi]1", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
            ")"}]}]]}], "/.", "rulebeta"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Phi]2", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "80"}], " ", 
            SuperscriptBox["rh", "3"], " ", 
            SuperscriptBox["\[Phi]1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox["\[Phi]1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", 
               SuperscriptBox["rh", "2"]}], "-", 
              RowBox[{"12", " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}]}],
            "+", 
           RowBox[{"\[Phi]1", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "5"], "+", 
              RowBox[{"48", " ", "rh", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
              "-", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "3"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
             ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "4"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
            ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ss2", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"12288", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox["\[Phi]1", "5"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "6"]}], "-", 
             RowBox[{"64", " ", 
              SuperscriptBox["rh", "3"], " ", 
              SuperscriptBox["\[Phi]1", "4"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "-", 
                RowBox[{"288", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "2"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4", " ", "rh", " ", 
              SuperscriptBox["\[Phi]1", "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}],
                ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "2"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"\[Phi]1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "96"}], " ", 
                 SuperscriptBox["rh", "6"], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "-", 
                RowBox[{"4608", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "4"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"5", " ", 
                    SuperscriptBox["rh", "2"]}], "-", 
                   RowBox[{"6", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["rh", "8"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["rh", "2"], "+", 
                   RowBox[{"24", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}], "-", 
             RowBox[{"16", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox["\[Phi]1", "3"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "6"], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "4"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"7", " ", 
                    SuperscriptBox["rh", "2"]}], "+", 
                   RowBox[{"48", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}], "+", 
             RowBox[{"288", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["rh", "5"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"7", " ", 
                    SuperscriptBox["rh", "3"]}], "+", 
                   RowBox[{"36", " ", "rh", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"32", " ", 
             SuperscriptBox["rh", "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"rh", "+", 
                RowBox[{"4", " ", "\[Phi]1", " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}],
               "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["rh", "4"], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
               RowBox[{"96", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
              ")"}]}], ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"ss1", "*", "\[Epsilon]"}], " ", "+", " ", 
         RowBox[{"ss2", "*", 
          SuperscriptBox["\[Epsilon]", "2"]}]}], ",", " ", 
        RowBox[{"\[Phi]1", " ", "+", " ", 
         RowBox[{"2", "*", 
          RowBox[{"(", "\[Epsilon]", ")"}], "*", "\[Phi]2"}]}], ",", " ", 
        RowBox[{"\[Phi]0", " ", "+", " ", 
         RowBox[{"\[Epsilon]", "*", "\[Phi]1"}], " ", "+", " ", 
         RowBox[{
          SuperscriptBox["\[Epsilon]", "2"], "*", "\[Phi]2"}]}]}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.868397769946203*^9, 3.868397843410778*^9}, {
   3.868397952994532*^9, 3.868398042487883*^9}, {3.868398084147476*^9, 
   3.868398197812793*^9}, {3.868398288850016*^9, 3.8683983380612373`*^9}, {
   3.8683983906976*^9, 3.8683984488143387`*^9}, {3.8683984848532887`*^9, 
   3.868398564396184*^9}, {3.868398609905776*^9, 3.8683986630769663`*^9}, {
   3.868398734544733*^9, 3.868398734728674*^9}, 3.8683988734689407`*^9, {
   3.86839890635949*^9, 3.868398935022238*^9}, {3.868399087012645*^9, 
   3.868399118102948*^9}, {3.868399189085883*^9, 3.868399243676395*^9}, {
   3.868399286750311*^9, 3.868399299642791*^9}, {3.868400486649914*^9, 
   3.8684005043367443`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c13bbe28-e01b-450e-a83d-bbad15337666"],

Cell[BoxData[
 RowBox[{
  RowBox[{"genseriesdecoupled", "[", 
   RowBox[{
   "\[Epsilon]_", ",", "rh_", ",", "\[Phi]0_", ",", "\[Mu]_", ",", "l_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "rulebeta"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rulebeta", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", "->", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", " ", 
          RowBox[{
           SuperscriptBox["l", "2"], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Mu]"}], "*", 
                SuperscriptBox["x", "2"]}], "]"}]}], ")"}], 
            RowBox[{"2", "\[Mu]"}]]}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]1", " ", "=", " ", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["rh", "3"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rh", "6"], "-", 
           RowBox[{"192", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}]]}], 
        RowBox[{"8", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", "\[Phi]0", "]"}]}]], "/.", 
       "rulebeta"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Phi]2", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "80"}], " ", 
           SuperscriptBox["rh", "3"], " ", 
           SuperscriptBox["\[Phi]1", "3"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
          RowBox[{"64", " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox["\[Phi]1", "4"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"]}], "+", 
          RowBox[{"12", " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"7", " ", 
              SuperscriptBox["rh", "2"]}], "-", 
             RowBox[{"12", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"\[Phi]1", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "5"], "+", 
             RowBox[{"48", " ", "rh", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
             RowBox[{"24", " ", 
              SuperscriptBox["rh", "3"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
            ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"4", " ", 
          SuperscriptBox["rh", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "4"], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
           ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]1", " ", "+", " ", 
        RowBox[{"2", "*", 
         RowBox[{"(", "\[Epsilon]", ")"}], "*", "\[Phi]2"}]}], ",", " ", 
       RowBox[{"\[Phi]0", " ", "+", " ", 
        RowBox[{"\[Epsilon]", "*", "\[Phi]1"}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox["\[Epsilon]", "2"], "*", "\[Phi]2"}]}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868475112979498*^9, 3.868475169887384*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0a2f1910-35ab-4f9b-a382-69713691b401"],

Cell[BoxData[
 RowBox[{
  RowBox[{"genseriesdecoupled1", "[", 
   RowBox[{
   "\[Epsilon]_", ",", "rh_", ",", "\[Phi]0_", ",", "\[Mu]_", ",", "l_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "rulebeta"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rulebeta", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", "->", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", " ", 
          RowBox[{
           SuperscriptBox["l", "2"], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Mu]"}], "*", 
                SuperscriptBox["x", "2"]}], "]"}]}], ")"}], 
            RowBox[{"2", "\[Mu]"}]]}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]1", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"12", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", "\[Phi]0", "]"}]}], 
         SuperscriptBox["rh", "3"]]}], "/.", "rulebeta"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Phi]1", " ", ",", " ", 
       RowBox[{"\[Phi]0", " ", "+", " ", 
        RowBox[{"\[Epsilon]", "*", "\[Phi]1"}]}]}], " ", "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8684860401656837`*^9, {3.868486118328766*^9, 3.868486137392768*^9}, {
   3.868486387563013*^9, 3.8684863960870113`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"cfaad6b5-17ec-456f-a9b8-9d984a75714a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesoldecoupled", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]", ",", "ssval", ",", "Qval", ",", "phival", ",", 
      "valshorizon", ",", "ndsol"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "=", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"192", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
            SuperscriptBox["\[Phi]0", "2"]}]], " ", 
          SuperscriptBox["l", "4"], " ", 
          SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", " ", 
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"valshorizon", " ", "=", " ", 
         RowBox[{"genseriesdecoupled", "[", 
          RowBox[{
          "\[Epsilon]", ",", "rh", ",", "\[Phi]0", ",", "\[Mu]", ",", "l"}], 
          "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Qval", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phival", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", " ", "=", " ", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Mu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["r", "7"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r"}], "-", "rh"}], ")"}]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["rh", "2"]}], "-", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["rh", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "r"}], "+", "rh"}], ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"25", " ", "r", " ", "rh"}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["rh", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]]}], " ", 
                    SuperscriptBox["r", "6"], " ", "rh"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"32", " ", "r", " ", "rh"}], "+", 
                    RowBox[{"21", " ", 
                    SuperscriptBox["rh", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "6"], " ", "rh", " ", "\[Mu]"}]}], 
                    ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"384", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "4"]}]}], ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Mu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["r", "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "r"}], "-", 
                    RowBox[{"5", " ", "rh"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r"}], "-", 
                    RowBox[{"3", " ", "rh"}]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Mu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r"}], "-", 
                    RowBox[{"3", " ", "rh"}]}], ")"}], " ", "rh", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"r", "-", "rh"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"3", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "8"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"6", " ", "r"}], "-", 
                    RowBox[{"7", " ", "rh"}]}], ")"}], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"5", " ", "r", " ", "rh"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["rh", "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"768", " ", 
                    SuperscriptBox["l", "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "3"]}], "-", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "6"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8", " ", 
                    SuperscriptBox["r", "3"]}], "-", 
                    RowBox[{"32", " ", 
                    SuperscriptBox["r", "2"], " ", "rh"}], "+", 
                    RowBox[{"39", " ", "r", " ", 
                    SuperscriptBox["rh", "2"]}], "-", 
                    RowBox[{"15", " ", 
                    SuperscriptBox["rh", "3"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "3"]}]}], ")"}]}], 
                 ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["Q", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Q", "[", "r", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Q", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], " ", "==", 
              " ", "Qval"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", 
              "phival"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Q", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", 
             RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], ",", " ", "rend"}], 
            "}"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", " ", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<StiffnessSwitching\>\"", ",", 
              RowBox[{"\"\<NonstiffTest\>\"", "->", "False"}]}], "}"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.86847517677584*^9, 3.868475235793375*^9}, {
  3.868475299350608*^9, 3.8684753142976294`*^9}, {3.868475344961132*^9, 
  3.8684753456012897`*^9}, {3.868475533766049*^9, 3.868475533943019*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c730bd40-f5d0-4c72-9346-5e8780fd30de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesoldecoupled1", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]", ",", "ssval", ",", "Qval", ",", "phival", ",", 
      "valshorizon", ",", "ndsol"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "=", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"192", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
            SuperscriptBox["\[Phi]0", "2"]}]], " ", 
          SuperscriptBox["l", "4"], " ", 
          SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", " ", 
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"valshorizon", " ", "=", " ", 
         RowBox[{"genseriesdecoupled1", "[", 
          RowBox[{
          "\[Epsilon]", ",", "rh", ",", "\[Phi]0", ",", "\[Mu]", ",", "l"}], 
          "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Qval", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phival", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", " ", "=", " ", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Q", "'"}], "[", "r", "]"}], "==", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Mu]"}], " ", 
                   SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "5"], " ", 
                    RowBox[{"Q", "[", "r", "]"}]}], "-", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"], " ", "rh", " ", 
                    RowBox[{"Q", "[", "r", "]"}]}], "+", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}]}], ")"}]}], 
                RowBox[{
                 SuperscriptBox["r", "5"], " ", 
                 RowBox[{"(", 
                  RowBox[{"r", "-", "rh"}], ")"}]}]]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Q", "[", "r", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Q", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], " ", "==", 
              " ", "Qval"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", 
              "phival"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Q", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", 
             RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], ",", " ", "rend"}], 
            "}"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", " ", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<StiffnessSwitching\>\"", ",", 
              RowBox[{"\"\<NonstiffTest\>\"", "->", "False"}]}], "}"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.868486011815113*^9, 3.868486024984552*^9}, 
   3.868486141549467*^9, {3.868486266686376*^9, 3.8684862692409353`*^9}, {
   3.8684863190848503`*^9, 3.8684863445034637`*^9}, {3.868486406214301*^9, 
   3.868486406393125*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c8718020-190e-48f8-bfac-714f1a0ff555"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"odesol", "[", 
    RowBox[{
     RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"l_", "?", "NumericQ"}], ",", 
     RowBox[{"rh_", "?", "NumericQ"}], ",", 
     RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Epsilon]", ",", "ssval", ",", "Qval", ",", "phival", ",", 
       "valshorizon", ",", "ndsol"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]", " ", "=", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"192", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
             SuperscriptBox["\[Phi]0", "2"]}]], " ", 
           SuperscriptBox["l", "4"], " ", 
           SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", " ", 
        RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], " ", ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"valshorizon", " ", "=", " ", 
          RowBox[{"genseries", "[", 
           RowBox[{
           "\[Epsilon]", ",", "rh", ",", "\[Phi]0", ",", "\[Mu]", ",", "l"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ssval", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
         
         RowBox[{"Qval", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phival", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ndsol", " ", "=", " ", 
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["Q", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"4", " ", 
                   RowBox[{"ss", "[", "r", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", "r"}], 
                    "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}]}], ")"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 SuperscriptBox["ss", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "12"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "-", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"25", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]]}], " ", 
                    SuperscriptBox["r", "4"]}], "-", 
                    RowBox[{"1024", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"2880", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"32", " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"68", " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "-", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{"7", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["l", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]]}], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "256"}], " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"3", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "5"]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"5", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "6"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8"}], "+", 
                    RowBox[{"32", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"39", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
                    RowBox[{"15", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "3"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "6"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{"7", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["Q", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Q", "[", "r", "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], " ", ",", " ", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ss", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", " ",
                "ssval"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Q", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], " ", "==",
                " ", "Qval"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\[Phi]", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", 
               "phival"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"ss", ",", "Q", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", " ", 
              RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], ",", " ", "rend"}],
              "}"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
            RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", " ", 
            RowBox[{"Method", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<StiffnessSwitching\>\"", ",", 
               RowBox[{"\"\<NonstiffTest\>\"", "->", "False"}]}], "}"}]}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ndsol", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.868400644223871*^9, 3.868400657067308*^9}, {
   3.86840085477413*^9, 3.868401023029036*^9}, {3.86840109568638*^9, 
   3.868401249568252*^9}, {3.868443791269828*^9, 3.8684439952504263`*^9}, {
   3.86844417308782*^9, 3.8684441779236317`*^9}, {3.8684443243523607`*^9, 
   3.868444336930501*^9}, {3.8684444051318607`*^9, 3.868444502994285*^9}, {
   3.868444756100567*^9, 3.868444761320334*^9}, {3.868444829870184*^9, 
   3.868444846363247*^9}, {3.8684450075755777`*^9, 3.868445010271202*^9}, {
   3.868446255303215*^9, 3.86844626276694*^9}, 3.868446362511128*^9, {
   3.868446879983774*^9, 3.868446881421142*^9}, {3.868453214131628*^9, 
   3.8684532377437773`*^9}, 3.868455472237918*^9, {3.868455548832224*^9, 
   3.868455551108316*^9}, {3.8684755513129597`*^9, 3.868475551529574*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"96fc18bc-ff94-4a93-9f57-1420a7cbb04a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotsodevsdecoupled", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rh", ",", "rend", ",", "expr1", ",", "expr2", ",", "p1", ",", "p2", ",",
       "p3", ",", "p4", ",", "expr0"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", " ", "=", " ", "1"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"rend", " ", "=", " ", 
      SuperscriptBox["10", "5"]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"expr0", " ", "=", " ", 
      RowBox[{"odesoldecoupled1", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"expr1", " ", "=", " ", 
      RowBox[{"odesoldecoupled", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"expr2", " ", "=", " ", 
      RowBox[{"odesol", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr0"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr1"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Schwarzschild\>\"", ",", "\"\<Decoupled\>\"", ",", 
           "\"\<Exact\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<r\>\"", ",", "\"\<\[Phi][r]\>\""}], "}"}]}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr2"}], ")"}], "-", 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr1"}], ")"}]}], 
           "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr2"}], ")"}], "-", 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr0"}], ")"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "100"}], "}"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Decoup-Exact\>\"", ",", "\"\<GR-Exact\>\""}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p3", " ", "=", " ", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "*", 
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
              "[", "r", "]"}]}], "/.", "expr0"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "*", 
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
              "[", "r", "]"}]}], "/.", "expr1"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "*", 
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
              "[", "r", "]"}]}], "/.", "expr2"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Schwarzschild\>\"", ",", "\"\<Decoupled\>\"", ",", 
           "\"\<Exact\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p4", " ", "=", " ", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
               "[", "r", "]"}], "/.", "expr2"}], ")"}], "-", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
               "[", "r", "]"}], "/.", "expr1"}], ")"}]}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
               "[", "r", "]"}], "/.", "expr2"}], ")"}], "-", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
               "[", "r", "]"}], "/.", "expr0"}], ")"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "100"}], "}"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Decoup-Exact\>\"", ",", "\"\<GR-Exact\>\""}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868482792161481*^9, 3.868482965333839*^9}, {
   3.868483034003409*^9, 3.8684830587044687`*^9}, {3.868483142782572*^9, 
   3.8684831542175283`*^9}, {3.8684831932045517`*^9, 
   3.8684832501229887`*^9}, {3.868483343199813*^9, 3.868483347236575*^9}, {
   3.868483456283969*^9, 3.868483460088472*^9}, {3.8684835212353687`*^9, 
   3.868483632751398*^9}, {3.8684839096979723`*^9, 3.8684839106979856`*^9}, {
   3.8684841707959757`*^9, 3.86848421766088*^9}, {3.868484682284251*^9, 
   3.868484747229479*^9}, {3.868484784712598*^9, 3.8684848159248667`*^9}, {
   3.868485066619606*^9, 3.8684850716076117`*^9}, 3.868486169356587*^9, {
   3.868487142178699*^9, 3.868487318474086*^9}, {3.8685395357667437`*^9, 
   3.868539555976141*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"8e11d182-24a6-4f33-bc7e-603d7ba806d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotsodevsdecoupled", "[", 
  RowBox[{"0.21", ",", "0.45", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.868487364599842*^9, 3.8684873658122807`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"8cc8fc30-6275-40fb-9bba-d59b34cea5bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$91936#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$91936#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$91936#3"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"\[Phi][r]\"", TraditionalForm], None}, {
          FormBox["\"r\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Schwarzschild\"", "\"Decoupled\"", "\"Exact\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
zlYNJS2uJlgl2z4z/QyxXpLrK0zw/wBrDeEH
            "]]}, 
          Annotation[#, "Charting`Private`Tag$92010#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
d6ZRBnZh0xXYKq8dCvNcaJRlZN70J+z/AewWNjg=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$92010#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {0., -31.66319047641946}, FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "ClippingRange" -> {{{9.398306502016513*^-8, 
          4.605170092005027}, {-31.66319047641946, -5.767146472683788}}, {{
          9.398306502016513*^-8, 
          4.605170092005027}, {-31.66319047641946, -5.767146472683788}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -31.66319047641946}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> NCache[{{0, 
           Log[100]}, All}, {{0, 4.605170185988092}, All}], PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Decoup-Exact\"", "\"GR-Exact\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
YUNlAWvk/wGxJO5c
            "]]}, 
          Annotation[#, "Charting`Private`Tag$92085#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwU2nk4VF0YAPBZGMOMWYgKUYRIdpJtXmSNskSKypIiikppkSIkyVaWbPWV
JJWlFKFcCaWUpAUVQiKkqMj2vf7q+T137plz3u3eqZZ5BTr6UEgk0js+Emn+
z7ysjMQQ/SPGSqcGNvR69Fcr6/oU7lq+idcmLnRk9Hh/9e8Fh9boLN/FUzvY
qvQmo796S+TsrOTyEF5C6e19Mq391cJVjz3Zy0/zrFY9SPq69lv11/fLRQWX
p/EWVzl/KZEZqH7T9/Y7//LrvGbjmg01DwernwWouvItL+M1bPArFCoerr6Q
uCh5a0wZ71v75iC1p8PVHqWUF/eHynhrlAuD13YNV/+Zesfzu1fOy3W44KTP
GamWPXtC8aVFBS+jrTlAI3CkOvRG8580v4e8J6X1oYErflQvOvCgMeV9DU8k
vYO03mq0+nmRm5/Skqe8hKr91anpP6vbggr0Hg+85rWUCZc/ejZW/WWf94bT
19/zTF1ryncW/64u/JXl1Nn9iUfhz6Avifhb/XlXes63D928Upf1q3RJk9UW
qbJCK+d6eavKFq+qC/hX/WBCiPdA/Bvvu3G7kfG1qWrbM5d3Lpgc5C09kjzD
yJuurtn8h+/B4hGe/FKeceblmWrlW9M2KRGjvAcRrPALgbPVR81XTYyN/uSJ
qz7ddUZyrrpy9qFHSNgY70JjlsGLurnq6UxzulnkGG/Nhnsbxhrmqo3XNBWx
Ysd4HhJ08yWNc9XEgY+z11LGeAmVm5OPvJyrrv/2L6v11hhP4/jfLof3c9XN
LavbNDrGeB/+NOXuG5ir7s0rcRhaPc4rsYtiBQmQCPm1aybLjMZ5A61OCy7R
ScTObuLyKbNxXiGrQv+lIIkYkGz+IbFhnHfMN+GuCpNEjCSOnLPeOc6LbmK1
fOOQiImjKxvzLozzhiRZ0/YSJIK54Zqp589xnkO97P5AFRLRFCBx/MbfcZ6G
indp5ioSER+bUPZzZpwXLPXhWp0qieDUH1GJEPrNyyWeq4hokIgFRuvFr8r9
5n0b/PgmVodESK38O9Dr/JuXUxiW3W1EIj5ZBSxf5f6b96aMXdphTCJydnZv
O+j1m5d1wejGax6JWHrl+Rv+wN+8fW1KhcUmJGL54ssPFWJ+8xrNHp5abU4i
VglYJ/lW4Hq/whxDbEnE+uqhzsBTf3jHXPvzt+0hESnWPZ7LWRO8kyE6mnvz
SYREWHNTr+gEL+TaS32ZGyTi8p2Ha64tnuCJq7m+eI0ukEznKshP8Jrlzu8z
uEkiiGHbGkXDCd52DUmRpYUkYjDp/tKVuyd4Tbr3KlaUkghoP9OpUT/BuyHe
94NcQyLqWSHrfj2f4FXV9Uy9Ra8z21F25/UEb8mjn0kFj0mEyy3jBK1PuB/b
EC3nJyTCP2zMWGd8gvf+p6tCUQOJSJXdmqMnO8krGloqEfCSRAztVt/KC5vk
3ah9Nne3g0T8lGG4h0ZO8qqanv88/5FE/Gnt2/IgdpIX+M4wb/8nEkHiZbpq
pU3yHo918qt0kggxUdpGxeJJ3tb+Bve4L3j+p12OO+5P8kYj6pZ69GB8j1c6
/Fc1yRM3a57V6CURyv1BGySfTfIsIwOKXvWRCOPKDhv2l0nePfO2baPfSIRZ
0H1r22+TvNfd2/bdGSARVvJJVmdGJnk7pf9+2TdIIhwTLCyoU5O8hk3LT377
TiJ2eZeY/BX9x1toENpeMkIiEhmn9TrN//Fu0rgN2WMkQvvWJ9ETwlM8DzXR
2HcCZCK1MvuWg+gUz/nN8yORdDLxt3Gr+fLFUzxa3sKNWoJkomLg06Fny6d4
lRoN184LkQme4uc2UcMpXiQpvXarMJmwufL5Uv7uKd7t+3O5bFEy4ZHeubKl
YYo3EjO56LI0mXh8/dKT3KYp3tfv7M+bZMiEXNn2rSFvpnhDbXHq7KVk4uvb
znipTlzvj5hl6DIy4S/a9XPnnymeUeX1kvXLycSh+K6yqeXTvHXf2RcblMjE
h+zL9i+Vp3ktC91271MmE2tuewxcVp/mtU5c+LB4JZmYft4lYWE4zbOIfWO1
U4VMhAt2H090muZpn+xM+65KJuIiu83kI6Z5JX1C+ulaZGLPgoTA4JhpntN4
zyI1bTKxPtcwszZ+mpdh7DLzGM15kvbLM3Oat1KbG9StQyZ+OplLl/w3zRse
W9jor0smWnp+WZPyp3kbnLVqfqFTqOv/yymd5mltKpL4sxr3f37qxXDFNG+m
wcpivx6ZcJW7MWFYM81jvN/13yBawozPvqNpmle1RP7gqzVkIieiYnZh/zRP
47GY304DMnFCxFd51/A070G+kmkL2uOKmMv9sWle0QcAM0MyIfs46PZG0gwv
+sAa1ZVGZOI6WdE9afEML+rre0kRHpkoPnn+gZDtDM9zZ7qirhmZSOKY9G12
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

            "]]}, Annotation[#, "Charting`Private`Tag$92085#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwU2nc8lX0UAPB7L/ca97ojWympEIkmWfeQEalkJRpmmRlJJSkqIltRRnkp
lTJCQuJRUpSKKEKZaSAjRdZ7/NXn+3nW+Z3fOec+T7Xc0dvchUIikRp4SaSF
P7PTUuKOa5zU8VkqHdJnP1CluNkl7/DKPdzkNXyPk04PVE2IBGzZtPIw131C
IUQmZaDK9vzc3OKVx7lZbQevPmkaqBKqeOrAWhnOjRVpW7dO71vV148rhQVW
JnMnvHjloqS+V73vb/lJXXmbuyvFr7iw+EdVnedaG96Vj7h9DzU//84cqroc
J5Gw/+Ij7p8ex90ij4eq7Ispr0sGH3FDQg8yl78fqvoz/YHr9rCU++dmm+os
ZbhK9tIZ+TeG5dwXdlvWpzgMVwXdffcn2e0Jd43qrzjZxb+qJI6W1V/5WM3d
rnzu9kXdkapX+XZuq6Vfcp+Q5h4pJY5WtfnkqD/93sjtuqIz7ft6vKrH12lX
+O2P3CfySmEHyyeq8sbSLL50d3JTg9ar30j4W/X58NXr31q7ub//aw5YJjlV
ZZgkK6g038e1ozjIsWL+VZVNCnLLxL5xJUzKjuq/ma4yjcg4JDL1g+trnb3x
VNNMVfXeP7xlksPcN5O169+8nq1SvD9jciV0hLs/L6xxc+ZcVaCB8uT4yCiX
NnC2xc96vurx3BP748Hj3CXHAi+vnp+vYuy6pecw+pur/KJ+1S4TErGzavCL
97k/3BO7QnuUYknEFeNeh5XMSe7z7n49g5ckQir4XUOf8CR3ZtGc0+I6EpFR
+GTLLclJ7truntNj6JzFVzlyqya5+nq2J7NekQhiyLRaXmuS28Cwvcx6SyJ+
xJfIKLlPckPjFFj8H0gEfIr4sq52krs07+FHlT4SUcs8vn3s1SR3Twr1LKef
RGzf6vyosHGSy7298ukY2vq+TuyGzkluBP/TjqIBEuERPK6z6fckN6ru9pe1
P0lEkuz+6+qyU9wU5tMl06MkYskeE8Ep+SnuKreYiLdjJOK/S2oBZcpTXHXt
jPTMcRJx/zdnp8aWKW5g6s/j+hMkorq2dlbTbIo7bFfEOjZJIgbdVfdzg6e4
5dpxP0/OkYjRZfR9QeenuGWyItXceRLxp7nftixyiluhszqLQiITJG6qzYbk
Ke5yi+iVZ8hkQlSYZilfMMXV8Rhfa8ZLJnQet5uweqa4jLf3vm4RIBNbfUqM
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
r6JJl9EuG/Knzh+kgYwWHzfUEucznXPukCMNvI4f4C1HH+n1Y2xzoYGmSrX8
CPpE4uZldA8aHJlL377HCvPrcfXOoBcNvP+tVL6IDt36b90bHxp8efJu7SN0
1PgT/fgAvJ6vzpxlTSHiXy1743eSBrH1lZbq6KSskD2WQXi+rdLmg+iUU71d
m87QIMLG7+s59A0LA3fxUBqYvK6zzEbfVLo9PnmeBuqjW3xq0Xd4BE5/CqfB
clK6fB86t92dVhGJ8cxcd5tHFxa9jk2PpkF06JOVEnsoxN/ttxyfxNHgbkQL
TRWt1Xd6U2ciDSpto2r00WeDrPlnk2jwvKbJ0Br9XESlfUkKDTY42wQ4owVz
+fK00mnAe+iSpjd6p0HX2X0ZNBjecTU4AJ3YWWoRlEWD6io3+UB067F4ubRs
Gkia3pFesDTTferxXRqEQ/m2hfMds/Vet9+ngfapZ7FH0Nk6i29M59PATe9W
myP654dx38VFNLBcNsewQKt6v9bXLMH1PVnN5qL9+W6J25XR4NfxxuVr0GU3
Tv8IrKBBw7ZlG5TQc2rWT1KqaBA/oGu6cHzru7Vx5U9xfxO7XVXQF135nD49
p4F7Vtz5jejXpK5N/17SoEPrVYommnOtlF/qNQ1WCfzNXsiP9br49i1vafDf
D8ebu9ApdW55e5toMFBgGLMP/cVBL+RkCw02v3560AO98p+U5bVWvJ7UJRyE
dk0Ylytrx3hEY2/FoHMVX0+1fqbB00t3WFnosac3X0920+DttkHTMvRmu9M3
JPqxfozJNo3oU+NWfurfaPBu5zGln2ji0loDm580uB9TUU2zoRDGFV9+JI/S
4EK3sMxWm4X5Xfrk0W8a7C2K6HBCNw3GxX38S4PexHT9MPQ+ab3N4nM0OKOq
N/8WnfFQSkCNzAffxQ8a/EX37xhvt+blA9OH65bK7MV+CL4ZkiTIBx1prV4B
6CKx05YlQnyw+6Llxyz0ZJ6V/Ac2H9SXNJc2oUO+0BpExfnA6+33Fxtt8fsG
3CSurOCD++VftwvYUYi2Vt2fxXJ80PLs/T1d9FJfqcrm1XwgZHtv2yn07f9e
OYmo8gHvZUXJMXQ5ZW1+ohYfHKWeWju0D3+/asYMEqz4ICdu6VnOQQphIVjZ
H2TDBzNP0z9Yomt3RVw4bMcHm/Qzaq6i739a9lzLgQ+qP30ykLWnEMdHTPUH
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
vvi9Y77+D/WUZlw=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$92085#3"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {9.398306502016513*^-8, -2.3440318296476232`}, 
       FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "ClippingRange" -> {{{9.398306502016513*^-8, 
          4.605170092005027}, {-2.3440318296476232`, -0.730577617720063}}, {{
          9.398306502016513*^-8, 
          4.605170092005027}, {-2.3440318296476232`, -0.730577617720063}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -2.3440318296476232`}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Schwarzschild\"", "\"Decoupled\"", "\"Exact\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$92162#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
8vg/QV1+NQ==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$92162#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {0., -16.935920184736993`}, FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "ClippingRange" -> {{{9.398306502016513*^-8, 
          4.605170092005027}, {-16.935920184736993`, -3.3649145631625204`}}, \
{{9.398306502016513*^-8, 
          4.605170092005027}, {-16.935920184736993`, -3.3649145631625204`}}}},
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -16.935920184736993`}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> NCache[{{0, 
           Log[100]}, All}, {{0, 4.605170185988092}, All}], PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Decoup-Exact\"", "\"GR-Exact\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.868486175562112*^9, 3.868486272836376*^9, {3.8684863226600523`*^9, 
   3.8684863485949383`*^9}, 3.868486409999647*^9, 3.868487322190052*^9, 
   3.868539522391032*^9, 3.868539560723144*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"ca8fb4d2-decc-471c-aea4-4ad7aa4f9c57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotsodevsdecoupled", "[", 
  RowBox[{"0.02", ",", "0.45", ",", "300"}], "]"}]], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"5a046b72-26cd-4555-a64b-d7827aa19800"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94419#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwVzXc81Ysfx3EdJOTiGAmHY6/jcBz74PPppDKzc2RlJFkhO0lLGUkSUVeo
JEmINH1FJZUos2Q0lZaZka5fvz/ej9fj+ddbwX+X83YSFxfX+7/7f20DPeRI
XBMwvrsgYjApD1LKDktuS54Av/qG/r2GJ6FutPafpvkJYEuub+KI58JHueGV
srGToJuuVVwufAKkvAWWEycnIa+ddSBUOQfszhjO9YdPwd1qj8SS4mzY98r/
p8H4FFSJa+cKyhyDujXHx04GTUOydO2/Lrcy4ZPbnZHJd9NgJXZ0wjc2A6Tz
xvodfGcgcLGHeGKbDvYvxbquDs7AyGhwxU2To5Aqgo8FObPg55S9z9fsCNRv
Dmve2TMLnNbJe4VOafA56/TNNsdfkNN6qeNK/GGQefqgRqXjF6Su/t0zWHUI
DmyilL59OAc5Gb2LjhYH4cZh60Jgz4PWi3ekwNMH4Etr7Il/m+ZBJuhc/r2l
/eCIz/d7NC5Aupl7d9hoKhxKWUxsZC7Co9ANh6g+qdB4VzVaomYRzi7y8y0/
3AdyJvv8X1T8hsB9/Y27uVLAOf7KVh2VJcjxWPtKWWcvHG7odz5WugRRRoun
FIKT4RtDd7110R8oujX54eNsElAjvViXJP+D1c3aPeetk8Cl+iiT9+R/cKja
ba/VxUS4rflW6X7mMvRFVp1hRydAXP3KbGEeLvQcXPLNfxcPOd2yGRZsLnxY
Y3q4gxMPD0StD5xt4sJrJl9fB7jFwbCub8rTJS5kGvrlWQ7GwpxDbNKi6Qqc
2rtG9+32WNDMLo3mNK7Asm1PCrYcjQHLq40RR2ZX4Nb69Irr8jHg86wj5AaT
hL0P/lHpvb0bTggs+ovXkPB2APE7/Hc0zKc5u3RVcKOEg7QhqTQKyOXBDsuf
uPG+2q0hG6cooD1MsaWr8OCmYi1JGZ4o8OW+sj6rlAf3ufkmDUdGwqN93PpW
Rby4gnTmyrG2CBgtXqsbP8CLqxemuW1sImDxng6tXHIl1hyU9wrtCgftJU9l
npMr8dipz1m7P4VBXkK9eHMmH55J9HlfZxgKAt4lEpqdfEiEv/rHqT0E9q/L
kswjr8IzXwqqJ3xCIEIgUCq4cBXaTjEErubuBKuzYrIil/jRhyt4PFIqGJpS
l2WTxvlxSoF5LJvYAQbbv1I+aAugTvzE4PPgHaBIb5W/WS+AUs8b45LuB8ES
Ea20rUUQmy9d3/0yfTtEX/BRfsK7GptGbay24nb4ctRGRd96NVpHNt/JmA+E
PidFtVVdq3HPhbsJFeGBUPP+hWbNkBBGDDIptJ0BEMjH0ONaEMZMnsiBxSI/
+B6bvdZATgQPaWiXqAT5gXowj/Q4iKBW+6P3znp+cM5uQtr1oAgG+avcKuzY
BlkSj2XVBUSx0e9yvrTwNmjjs6AMaYli4YG2CMNWXyAtXqfk2oti+bAduWun
LyQOn5NbyhFFlXUN+vl3fCDoUjy1aw0ZNbu07pEivaG08Dv1sAkZD1O0BsOo
3vAmM0DB1JOMe5KjP1BeeoFLpIPihWIyduX5fTAz8QI0UVNOUBHDOMOkJ20S
niD9tE+NyhTH7njvhtckD5Au++NS6CyOtpd5bZYec0AmUTmVHC2OVuLZip+P
c0BWLXqAp1Yco5aWjAWpHJA/KJT+hS6B1W9Sdeas3EGZZTlepymJK5yvbmm4
5QbK5FBJmo0kVksLSu3LcAOVLyfYF3dKIm+eL2vQ0w1UC0aKCiokUeNpE7K5
3EBjOsk2WXUNJlZJxOQ4uAL9Sm3VBkUpbLCkft2y0gXoBwYGmtZJ4d0VmfU2
I86g47HMY+wnhWBisP7aTWfQ5bP31iyRQqaNtHVLmDMwAz4LCcutxUXXT8q9
r5zAWEZ+18BaadRoa1F69dAR1mdmMUJFZXGl95KGaKM9VJ2Zc9yoK4tesfvD
X+6zB8kq/0gFB1n8PctMkbK2h8/PjK/1Z8miqdkONm3IDrL++UizXEXBrYzJ
GbagHfScMFenLFMwP+DjQu1eGzAvq9g0T5HDgtA40qy9DZTXie3oNpNDq9X2
D0vlbCCh+8vF9CQ57FISbWDctwZZiXylX7NyqMs1MvhbwBoCT/+Q6/wmjyFq
U6mPrm2CoB6afC8vFaWl7n56f3gTnPF6V82WoCL/5pNybl6bgCfc/jlFn4r3
6sY1dAU2Qd8xJaGeKCoOpTxsqN+5EZI6OzPwOxVNKWF97kYboMVZPW3tBwWM
sDs8xLdqPWy2E+vvnVHA3MlWvsQPbHi94T+1XF5FdCsf+cC4z4ZJ4552ATVF
5BShWPweNlDlU4WWdiriCe3L9w2m18Her/15wz8VkV9wbfjNHwjGh46cP/9b
Camz2Qfb5C3gwd7oGd/VymgwrZrgNmYOjvHeG2Qpylj2piR5wzVz2BHCHMuz
UMYAH+5qKzSHfMcRzbT9yphRsCL1UZAZzMga1QXzqaBQbZ/drwemcK3hU7O2
mCru5j3w5VWzERQrVKo9U1RFx5GDvGb5RpB1LDw7RE8VS3IxeTjUCIK3z3he
clLF9juPuN+tMQJFCdIcNUcVe08K4stoQ8iPoWiLC6lhi9H5Ux1MA0hmuhYu
rlTHhVG/0XdDehBybg1XoaQ6lsg6eyre1gMPwcEgI1V1dN1vnpaTrweG7/30
Yzaoo7JZ35c5Bz34mbur8/tBdRyraxn4+oAB/lMZvG+5NFBzv8KgTqMuWNfe
j2pb1MAS3kzz9jhtyM6+XVgvqImHngpu/KSvDT2h1++XymqihJvTvPc0Dbap
XhRNttDEOo+Jx1ujaBB35mit7gFNbGn4qJAQpQVlhx0mC/m1cEJ+/Hvtfg1Y
8hiKDJOiYf602ePzQyrANuo77aFBQ8sn5Nr+iypwRLyzeaMpDb8WvL7lFKEC
5M5mEQUvGqY28RZJcKmAhuWFmt5zNLz6kHH2iaoybKGHTlioaSNJifLeI1UR
akgLu0QN6VjivXl1LSEHlUsnT1zbSMdDt4K9JP3k4MIv+nV7dzpmaqr5fiDJ
QcF44K/0BDruL4xOu7mJAikvu5JJd+ho2767lNknA3ZlFenToIMYUKLHt3It
zFCrXowr66LmmkqhhqticKLZ8+szOgN1gxKEwrh5oDlOgu+YIQNDsozH05O5
4QetU9HegoEv7omFqv0igU0he2uHPQN3fFitOTy+AkjRGu0dYQxMDrC9ZFW/
bBGjNFf+vJKBhVcKxVuK5yw4abn+Xap6uKxuWKtqNmpBtWt/1S3HxARRrven
MmaaFm9TtrDUmNgTlTHGiptt6tGIflmmw8TTT1IIEb9fTUf5ZJ5GIROl3CeU
bPTnm362hN0V9meiazy3O/nF76YmE5FztheZuMRRO7klegXhqeYe2Kqlj9mL
DoavzFYR+aSPP+qMDVDE2OObgD+ZKK1UictEAzRU1+p0ziYTVc5BfwKsDNAf
nb0SbpOJ1rIxQQmOAfYI1VG8yWLEBHtcPT7eABWpRr0nmsUI64M//Vk3DFCP
5TD4TFKCWOJe7GtlGuJG0YSAa1fWEP68wkQP3Qg3htf5uafKEvXFya0SMiZ4
4CZNwTFKkfjmf/oHncHC+CmZWDl7VWLP7paeDCVzTBv0AZEADWKiuuhtEwA+
/Pdi6Xp7GhGHnqL8lxG/ZfTo4zM6cc4hUti1ZB0uscz7v4XpEqyYN9TMKjaO
dH/d3R7CIEhE5/H35etRVfC/pk7QI8zlpcnqNyzx6qTx48vCTOKOTRo9uXkD
Vk7tOuLaxiQCzyZWTN7ciGNPFnj++OsTqdwPDFwebcIHxf5dO/7oE205p6h9
960wdCX/iNgBA8Lpy9GLwTetMa8sx9d+0YDY7N5tPtZqgzGnzhbVRRsScV8v
MI/cs0VlcY3M468NCfKpDjOxZ3bolDLtPs42Iib5pUare+1RiId7WrrMiPh9
4ctoaMdmvJ6c328/a0QkuJFnxV87oKXnN9actTEhIul3fVeII96vt0+TyTMm
eMesb3l9dMScBnWTIwPGRD17+DER4oRDo5nlnnImRALD8AhzzAmvhZdr1Hua
EL8qTRwoEc7Y9YHUG1FkQqQ3cj1a880ZTV5ZD3e+MCGaLg/wF+1wwfE8bbdd
vKZElaqXe+53F0yvFMZ7pqZEjeF5lzMhrmi3fX67RIgpEfHilIf0lCue3H8k
eazIlOhwKqQpxLvh2Dr+8tjHpgR7+7Zq42k35OJ5/mtmwpSI5O42eZS4BWkC
D26/lGYR9fr8MYFzW/DoiexRWWQRhbaOezKi3ZFBWje+NoBFGH9nZ6nOu2Nu
yvOIXUdYxDeFBdvuGA7ymPDJ/rzEIp67X/pvOY6DJZZRznsrWETNMbdaWiIH
ka0TKXiZRcQs1Eqm7eWg0WSnn1oli1jqCnlrnMbB49otcj5VLEIo9U1ccQEH
g85uXdVWwyLow0TpztscbDEceZt2i0WIiEe45t/l4MBIriT5NouYspbla23i
oFbwW+a/f32jISFMtpWDtJl49et3WITFMYZR51MOavNfXhy6xyI2m51/pj/E
wdrzgnY6LSxCN9ppn98IB2VMjYRv/TW5YpmR/ZaD3qqld9itLKJPzKtg7CMH
hYc5XW4PWITPV3H/oh8cJF7Fjic9YhGo0CreNsHBBHrdPHcbi1B0j2qbnuIg
Jy9lIuuvP7V00OznOEiPmjhb/JhFPJ7fM5K4wMGFLZVOau0sopKumVv+m4M5
WpSJa3+dFThg2f3n//8uCcZPWMSuorS55WUOPk3ZMt781/8DqDZN0A==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94419#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV1mk01QsXBnAZEpFZ5nnu4HDMJ/YmJTIe5LiJTBFlzhQyhMiQiFCKSm4J
SbmV/EVpIg3SIITrGguZD+X1ftjrWb9vz5dnrS3rFUzzZWZiYhrbuP/nPh9X
KWamGRgLLwrqjS2AhIpU4UNxM/BAuOlsvF4+1H+/s615eQamhIZGXQTPwYhU
/2aJ47NAKezvvMaTByIHOddjZmfhYu7rXn+Fs2Bdqrf06dgv6K08WVZSlgMn
v3hN6078gjPH/gixiWdD/fbc0fzDc3CphJZm+eAM/Of8aGB2aA6e9eWLuB/P
BLGC0U92HvMQOGDJaNmXATbvBd7e7p0H0SvZAVWGpyGRF19spS8Ab+qx3e47
06HB9mjLke4FkFBpJxU6pMFY1oV/ntsvwju2qN8Xo1JB/PXTOsXORdCIG0x9
XX0Kki0kywefLcF5/4/oZJIC91Mti8FsGWJUMlU8LiTDeNvxvEvNy7B0wWa1
di0J7PFNkmvjCvylwNIW/D0RTiUwYhopDBiLlQ5Qc0+ExialMKE6Btjm5Mpx
t58EKcOTXu+qVoE9qOWBL1MC0KJu/aWpuAaFt56eFNKMh9R7n2jZ5Wug9kQF
lf3jYEqLvMuy5Df0ClNVORdjQSbEjXpD+A9ozhTotlnGgmPNaQpb/h/gbWrr
c7seAw/VBuWfnFmHWyeUA8zDoiGyYXMODysTpmy/klw6FAVnP0hkmpgxoeRi
xOURehQ85bNMvtjMhPcNb+uWOkdCP9kj4fUaE6qaf/GN6z0OS3bHYxlGm9Dj
o7CDwOHjoJZTHkZv3ISfM7Y5RJ6OAPPbjUHpC5twU/WUZ4d0BLh3dAbcpzBj
I01BaephOORxMrwE65ixZMdYy8XVMFhOozm+rWLBzSbstXblocBf6W+3/h8L
DpkuK+Y7hALpWcI+DUVW5BVmSLqxhoIHy61dWeWsmG56boA3NATaT7Lo7C1h
w1MWaaVbXwTB9zJRctRnNjSkvR+esAoCxmNNUqXwZvSXVPRSeHcM1NcOKLDm
b8YDeRHDMHoUCqIbBFvOsGPDk+TUQ/qBwHnwipBaFzu6oX33zMsASDLNEi7g
34JqIelCpzwCIIjTR8S/eAvyFuja6+Qfgb0XBSR4b3DgfOvVTlNRf2hOXJeI
neDARPLwWHiLH+j6Tkr+q86Jf+JfDrQc8QM5jTbpfxo4Mf7BE+7w1sOwRoTJ
H2rdit+X1jtvZvpC2DV3hVdsXHgC7lsom/rC+GkrRR1LLjwfGLfDZsUHehzk
lLe85cIk7s0+bkE+UDf8Tq2ujxvLHt9eYxzxBh92LW2mFR4M/S1wWeSiJ/w4
niOqK7UxgvQ3vcZ+nqDizyo2Abx4zaKoz5viCZetZ8ScUnjxHXOVVvGbQ5Al
9EJChZMP1a8KKzJ4DsFzdhPJvh182L5DSfnHUw9gZtyVPGfDh89Hs/NTAj0g
pv+y1NpZPrQUdZR0eewOh29Eybzdzo91X53YqWEHobz4h0yqIT9WWflmtsod
hG9nvGWNDvAj0dFIzeh2A8cQO7lrZfzI+Y1VvZXqBmiorBCtKICcD9QSrEQO
gNjrHmUZiiCOr26KXWR1BbGK347FNEEcG7Elc7+mg3iMQiJ/mCAWDXnPTufR
QUI57DPrHUF8rFM0xS5HB+kU7oxxDSFkyKxSNu9zAQWq+US9mjAGrJEP+TU5
gwJ/oDDJShjNlZN0qdnOoDieZ3b9iDDKuyXllrk7g1LRQElRlTCm59ibc7E4
g+pc7L44pe34mzjUbUtzAo1bd6p3y4lgROXvGy+3OIJG8ufPzaYiSAmuNLo7
SANN13VWA08RtJ1akdj2iAZkdpuDaldEULvGYxdvMA0o3mPcPFKi+IzhZsT3
zQEMxKWDP4uK4X/s3RPuL+xh15ksrUA+CSSNXIlea7KB6tIl+z3kDcce92hI
tQHhaq8QWTsJnIjjz5+2tYGxDoPaT1kSWF79aWB8yBqyto2QzLdIYmvvJMdT
XmvozjNWkVyXxPRahfDmZCswrqiyWJaUwufx9G1LNCuorBfw+7BTCmuMJeZK
5K0g+sP49YxYKTwWnnpBqt0SJIQK5RcXpDC5j2ozyWMJPhd+SnVNSePDIVkt
q3sWcLibJP2RTQabVdRtUs5YQKnbUI2ZkAza/5tby+NlAazHbN5I6sig9KXs
PRK8FtCTLc/dHSqDCrssM4eD90BsV1cm/pBBzcBb0tXGu6GVppIm+q8s9vnu
c+vi3gW21gKfPs7L4quZXQmUCTP4uvuP8jk2OfzQ1XpqoN0MZg26X3IqyyFn
Yh0PV5IZyEgncq8dkcNmz56uK8umED/5qaB/Wg7lZ8qzN88jGJxKv3p1VR7n
3nTs8iCZwNP4sHkPLgVMiORI45w3Bvuog7slJBUwsoyHVbDJGPwCKKMFJgpY
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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94419#3"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"\[Phi][r]\"", TraditionalForm], None}, {
          FormBox["\"r\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Schwarzschild\"", "\"Decoupled\"", "\"Exact\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
jOsJ4cH3V/5eDsjGn3PSJ8N40JZzp1kbucMu9LZEBH5eqr5QGvlwmfMjjSge
6NSQUsjIYvN1X66O5UFw9d9nY+81RNejxN9vPc+DkDu8kiFko7Ghr4cv8KBW
VWb9ADKVVVrvlMyDqdYClUHkBsXwXP1UHkwarKgaQU5Y4XBa7gret6KS+xd5
yzqlnTPpPPBebD3Jxucp7xg2+pjJA9dnLw8rIQ/4l82tuc6DSwuVPfSRb0ef
mcjJ5UHMamq5E7J/puPryJs8uLdNzeMosmGJctHeAh5sFpe2TkOmvPgaa3uH
B5WW61yfIdf3PPRedhf1t04qahw5/nfEWqkHPMgpzC9Vx/hu5jmp/C7lwW//
+W0uyEoq80md5Tx4QPNovohcYFvx8OpjHpgGGDGlMZ9+npEXw2p4MHN7QG4b
8qoTG/12PeNB/uGTZdeR63K+L1n8ggfqV3OExqiX8xWVbP4rHngot/9NQN7U
EjXwo4UHGbHLvn1G/jStklnSzgP+6+1y6ai3/NmjQZc68b5l8zSmkX0XibYG
vefBm69fpFxRrySnLZKmfTwoqOlZJEB9K+THRrwc4cHSC4YPP6L++x5v9Sga
5YHN4cpFTlgft9rUTRLHebArRvxhPfJKypPJLX95MKRe1VGO9XQz/7juKJkP
rT/ErO9i/dVSCvOCeHxQkgvI6Mb+mRcnJTPC58NAsVP9HuyfsbKBZ3bMwtcr
xnaOIm/QsnQ3leRDzJM3LnTcP3u29sqz5vJhrvmwoua/73+LpM8nqvLhzZIm
jR3oD6S0lQtU1fngc92z/cvEv9/TnR/cX8iHQ5/3nvPHfiu2PePdfwI+mDWY
uZxCf+FbPj6wewkfItR2SdLQfyRW9JJ/a+LzIy9LhSPLstUXyS7jw5/ZlUsD
0a8Uxi0q8pbzwT4hon8UWfmDt62BDh9aTNUUd+E+q/7gtr+zPh/gd4WZCfZn
QeYr5vBKPvTrbmm4gawZM3o5cBUfPl2SpnDQD3XcdJ+kCfnQ2PO6sAZ5pc1m
J01jPjx5nVQqi/3bUP/450cmfLAupl7yQoYFV07YmvKh3GJQ/h6yKe8R74MZ
fl7LNdYf5LV/ujMPmvMh9c3ihfrov+v6SDokCz5w16kYH0K2aVrwPN6SD9Iy
L2SuI9s/XOM834oPGt3SAa+QnbJ3fyu2xvOL31D/hbz5fGSo6Xo+VG9+OySJ
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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94493#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94493#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {0., -39.50938929191688}, FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "ClippingRange" -> {{{9.398306502016513*^-8, 
          4.605170092005027}, {-39.50938929191688, -12.861332426154055`}}, {{
          9.398306502016513*^-8, 
          4.605170092005027}, {-39.50938929191688, -12.861332426154055`}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -39.50938929191688}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> NCache[{{0, 
           Log[100]}, All}, {{0, 4.605170185988092}, All}], PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Decoup-Exact\"", "\"GR-Exact\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
2QM3yCs6trucRYCV7LmpFvL/7mfOLQ==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94568#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwU2nk4FV0YAHDudXHd627aVBSJUtaUkOatRItUtlLKXipflK1StsqWLdlC
JQlJJUKlNMoSUiISKVuSkD1k+d77l+f3zMyZc97lzAxkbJ2NHSgCAgLiNAEB
/s+0pIRIT+2zGz11U5J/LaeTiuscHh6V20c03v/UpLKKTo7O8dBaK3eUUHrc
cttNlU4euDQzs0jOk9hq/apuQptOir94bcOWCyTui5gHDu2mk12f5STocnHE
ZIp9V+JZOln3o/43TS6dGBKY2fe2ik5WOCnvF5IrIMblXRu3nBAjqx4dPLZS
6i3RJrM62/MBg/zikrn+9a+PhGEKJzCgkEm2n7LbHZj+mdg/8HvNuXvi5MOh
JJPvbS2EUdHp9qcRLPLb0fib3Y1thLnwkqT5e9ikfqys2KrZTuKV7De2LoVD
PhsXI57N6ybWZVSYtxlxSMPg5CNzJnoImnkVqzCSQ4a3Sk7E0n4TikEt5olX
OWSN5rUrkrzfxKvmU52eURzSpOtytvSq34S8HRGsHc0hD2w5Mbni0G/i2eJ4
yZY4Dnlsem24bvFv4k/2xdXmtzhkwKmqvCPBvcTl4W1vfz/kkG/f6m37FdNL
lJX4Hux5xCHFlhY1nUjpJe5k/j3wKxvv/z571qWwl5jobzvXncMhY1bFbvfq
6yV8x0/o9ORzyNQf1i0Re/sIH+ksyeEiDllsMSb0TLKfWDfy5nnVew75wkG7
6sjyfkJLb2lDzgcOmX/K++octX7iVncU43oNh8wMFpZ22dZPPNARjLat5ZDR
z+ZpKnj2E+vNzrzorueQRyQ1j8V86icEVrp15X3F+X3xrD4V8YfIbZwS7e/m
kIpZUzti/AcIV600Ob1ZDhlx8nGpUdAA0XMrbqmAAJccUT0CouEDxDvZ3Q9f
oF/lfVjrdX2AeF6mdFyTwiVNX6UstckeIFSqot6p07ikd+22sdXfBog931Zq
bmBwydrx6NslWoNElOc6O6f5XFKzcPtib2KQWOwBucoLuGTShZlYza2DhOi/
9KIB9FGKY2jmnkGi69SFH64LueQUQ8cz8ugg8d134IK7FJeUX9JmaBkzSLSz
lMoOLeOS57YqjQ8P4HG5NkUvZS5pFfSBpvh3kNB+ryahqsIl9apOSVhPDxKO
pyWlOtCsvfnK7+hDxMqqHJMtalwyxZJwSJUdIhjt/53uWcMlK1331pqaDhH/
jVmMvVnPJRemuGflFQwR6z/URhVu4pKFMy+tPb2HCamIC2OO5ji/xK2iWy4N
E+kSbv6MfVxyo1b1I1bIMOEjY7f5IZp0/TpzN2aYOLviht7Ifi5Z1j2Z9Clr
mNCsWZHgd5BL1tRqflFrHiauysw/nWjNJTvTHu/t1RwhTJ4kesYc55LM3Xc3
2wyOEMbN/v5XvLhktdPCC/f+jhBh6wNuzKLDQyIKBqdHCJ9XsQKnznNJTtnZ
1f5io8Q9bSGznRe45Bxdo3l3lo0SZYkzpm3eXHLxqr+/Os1GCS9hWXc3fy6p
JLL9quPzUYK1wcXqUAiX7Jcrqsom0St6DnegszevEZ4oGyWYh5/JHL/CJdW9
pbyC60aJ5642X8+Gcsl1o4P2mb2jxLb2d2G3w3H9HQnre6XHiKZXxdXMa1xy
VoDjqrF8jOBqfrVIQpPSlx+cXzVG6N/v2r46mktuPuAsK75+jAhaqa29K4ZL
6n/cwlTeO0aMH3CJjorjkiJ/nup77BsjGtOPnJWL55Jvmcp+RYfGiEuKskH5
6B3bFowZHR8jbnSFUJuvc0nGkTDVOBe8Xk3L+r8ELvnuIuXEd48x4ujyh2Wz
6LDbnncVLowRW4vjlaMSuaTRq97vzhfHiHNvAyLkkrhkzPYOGznWOPHy1m+H
5c8w/9411Z0S40RH1Kp8d3Ryzkutu5LjhHrv6YEydOaieK788nHi/GJC0uk5
rq/PsFhhwzgRvt10hCzkkj1X85euOj5O1B3ocIoq4pLQFPxdrWyceBGjl1RU
gvXA8tw5VDVOjFV8OStfyiV3brEvyPk4ToBg+ZdwtHnWxog1LePEXlot26aM
S57wHt64dmSccKtnN4u95ZKxsodurpedIGpY9386V3HJ3uOqhwjvCeKpy52q
g7VccnAJw/L8pQnic2PL+zr02KcfB56FTBCLebopO+u4pACRuH9N3ARRp6UW
p/2JS86VEDZVyJ4gwiJ3v5nTgPksbN7Bbp8g5ujSKTlfuOQWl/ztht0TRMaD
46RsE5fctvzqtuD+CSL+3Pf8KLRxhL4+9d8EoZOiLuPSjP1s93jTX4lJ4ptP
dsGSFi4ZyQhc/33rJLHurupHg1aMN2mjudhwkoiT3lmUhk5w37DOwniS2Kwx
Li/UxiVTvw+uqTs8SRBvAtc9Rz/LtVQp95wknM5M1HM7uGSRo6aykPckUa0O
K+zQJVI8pU2XJglL4e6gHPT7wHLFwshJQiw4S2dnJ5dsP6gu/+jeJNEhLVZp
+4NL/uSIL+99NElw43yGU9C9pT+XrcyfJAScHuS2osdUbsjceT1J3FFc+8y0
i0v+6/Rc2vp2kjgWfvdbCFogwXiJ1IdJ4pTavwNFaOHdStIH6ieJ3JUNUn/Q
DCFRqbjmSeJu1v15Uj+5pEZWi4SP+D9i/iKJCsYvzF/hjay9Ev+IsviXKTvQ
fysPbZWT/EfklU7ah6Cf/2rxqJD7R4hJ+F1n9nBJQuHbF4kN/4gPtODzi35j
/ad8u5Vx/B/xXKXto3Ufl7SO/76qtvwf8WvprLHbEJd8nX6rJLX6HyFUcvNu
JXpZgdUhz7p/xKqVFC+ZYS7ZVf89fPH3f4SWceiNGvQJidbBI2P/iLvaJjs0
RrmkR3hrwT+5KWIV3Wi3+DiXDL3UtmW5/xTRsKv9bvs0l/xvToSzW9AU4RQa
VGEwg/2UuiHxTfgUYS/yqDgLzSmJG7JJnCIm3lNYHrOYb6rR7ZtPpoiluoHL
aYI88qb/85n5P6eI8v5tB8WFeKQPz1HxaN8UoTC/JO4E2jplrnn+8BSxnCU0
pwIt+9rlganANCFePXzbj8Yj0wUVLK9KThNniiK7fgrzyGzfa8/EDKeJd+NS
aj50HnmVs+mHhfE04TYbuPYd+nRyP+fe/mnisINN8XwxHqlBbnc0cJgm7NfQ
N2Si5+75ey32xDTRY1TOGUSPfU999ePUNKFdXbd+HYNHPpudnXfJe5roPzhl
WIhOiHiwue7SNFHJKJX6hz6/5OBJ2SvTxH/0tQwtJo/cSOSXknHThOHr29RH
6CUf7AbZN6eJvHeUoS60gBVXyip1mpD2q3uzWJxHvvZ2cpvOxvGUShr80HdY
C5MNC6YJQnhqIht96WZ5VeLLaeL8orqSFvQRZfe/PW+miWXPehVEWTzSoEh2
mXblNLFH9bWEKnqFUY1RcM008aMy5YwZWuzbhXONDdPETHGu/hn0u+nGjx4d
08SqNSu/5aEfhAVMl/6aJmJSaIE16HApjZVzB6aJOzOb/o2hnR+0mdqPTRM8
U+rMUjaP3KMb4Zs7NU0Y1Z9bZohWq96QRaHOENvurj92Bs071PN5L32G0Ol6
9e4uuv78VpWBuTOEx+rRdiqHR0pXXB6SWTxDnOQx7q9BO84tyzORnSG4zuHn
7dGTD/Q3FCjPEBduHVGr4J//3WC7t8EM8adFI/YmF8/ftMOOeXaGyG6Lfekh
wSMfh4XIb/SZIZa7qZTloSe/VP5yvjxDNC+lZYyiw07vdKm7OkPcyN79y3MO
j8y5Y3ghIXOGeFSkMHV5Lo+cou2OW/F1hrD6aDdRMp9HbjWOOHCgfYb4IrPq
HXsBxuPmB6nQ7hlimQlr/UG0jOae1D8jM0Tgj+S3w2h9x72P88VnCZ3sfv1V
C3lkZKVJlR6BZoXpPVrMI5dF7J+1TpklKItuynbI8Mi3a70tV2TMElOJzSOq
sjzy5Nc7z/48mCUuixile6Ofrvzj6v1slvDZaBotuYxHGpVc7k6smSU09nV8
M5Tjkecmcj42zMwSz6mmznfkeSRnj9P83RQBuJ71U6sXbbtstlSdJgB3xnvP
aCjwSNFKuWWTYgLQTmxd9wZtMt+lJWieAARzyhsaV/DIX4+FjdOUBOD+Y6XU
FkUeueHydYEQVQEQ9Pw3I7kK179/9aP/1gjAQxHuTjO0xuxe5lotAZCwbYh6
i/YxvFH2Rk8ATujbtiSv5pG1S1Td0w0EwN+58FUdWm749bIrOwTAp0VjG02J
R1Ze7/Y13iMAgaUTy+zRc3+u0Wk7KADegiO/2cqY3+dlv0oO43hha36sQz8P
s4jPsBGAMMZjdUu0tYbPqPNRAXBQOH7rNjpXhJdqclwAbNzbM4rRws2pxpr/
CcCvUW7zd/R9v8pHM6cF4KVYS+g8FR45Y3rocLs73v9r/agyes+KAWbZGQEo
MYADW9F3/vkX3vMSgG3kpYcW6LH3c4+HeQvAf0l/uk6gt6dkLDjlJwADnMd/
vdBJ7jrlppcwnsotn4LR/dveu68PFIDjbSdOx6A3LbaRWxwiAHHs08630N0C
ZfIJxoIwe7+0TkCXR97b9Pp3gJkgnH/1OHkL+rh/UbbrfkGoWz8WEID+TS3Q
3nVYEK4kc0KYG3F84QwjgeOCsCCCVbOA4JEjzBCPI36CcLpaSV9pE4/M2xWg
Y3IJHV397yTaI9wfFysIG6qbT2Sj/7K9QiTDBOHvxSxr9c3YLzynm+/iBYHC
lfumtgX3J0mjMvVsQQiVGfuxYCsPv092XFmSKwif8qdHjdH+Cfp7mPmCsGL1
y52haOpioulHoSBYDo2mT6GFl6j2x5cLQgbRrF2nzyPLrVbnXq4UhJLNXyKF
DXhkUPKKM6erBUFlgcKv9Wi6rAzFsE4Q/C9JXkhAM5fz5s1+EwS1Uvc1e7bx
yGoHVvPvNkGIyXl94xw6PE0subFTECq/+5N30OwVVMWcHrx/iZvoELrGcbb/
Zp8gOBb0S87fjv1471/ulQFB2LPC6YU2mrdqRNdhTBCyO+uvXEDXnhigGE8I
QlC6SmoS+lpWb/nGKUG4nnZU7jnatK87dNWsIOSe/SPYgJ6j/GPvAgoF3H8t
Vh9A159sm0ejUcC7eWWm6A4eGfuopXlQhAIioGG1BG0+8CX5mxgF6gU26mug
56s1OFSJU+Du4GpTAzSzJtHjHocC+4SI1fvRAs42gYESFBAcUFxxFD0qrhDv
MI8C5h9W6bqhe7J6M7ZIUkAt2dbaB/19Z84zmcUUCNjQEBCE/tTjWTkrTYE6
U9e7EeiKYN3mFhkKrHBiPo5GF62g9hbKUaC03uJmHDq3/O3UdQW8/5MJm3h0
xpFw8TOKFPg16TwQi06imUqbK1FAVefRhUT01VRJFQ1VCuw0OSSegQ7Y8p3g
raFATvqlsDz0ufbUPQNrKSCZkDD1Bm2/VPV0lg4FHG5tut2Btng16h+ykQJ9
v2PrRtBGhwuvOW6igNICu37hnTxSM0k/T86AAv0zkQ1K6NU6zDLKDgoov/NI
3oxe2vSxodWQAtInmnfuR4stODSeZEyBJ/uriQD0bL4s3cuMAoUHEi/dRI+Y
dUta7KfAPatjdwrQLddcdeYepoDJQfmjvehsdoh32DEKLDnGfm9lyCPvPtwd
ccKJAi+7aJne6IRdc5O3O1Og1nf37pvoi1eSi2nuFLjm9rH3O9pcpEDI25cC
+98sUHfahc+TmY6Qk3EUSI9nPU0z4pGDN+4lGiZQ4LrcG6GP6K4NzlmKNyiQ
bNY9+A/94dxkdVcKBT64vL1tsptHpoxxuFYPKXC/bzFVbA/uN/26cbtLsZ4O
201H7OWR3rvODZ54S4FQu11K5eicrPydQVUUWKpX1jyDXnxCRaD4IwUmtm++
7WyM+8XPpcfUv2F+5snpmZvwyOg2qs7cvxRYeCPOdI0ZPo8AYtQmKTC+z5fm
gp6+df7PrmkKaD+R+p6FPnJ49E4AlQqrPWgj8uY8Uqu5iznOpsLvEPORRft4
5LdPFd+aVlAh5iJ4Uy2wvzSEtf6uogLRk3afQBtc23xNQoUKG/xnor3Q2XsL
DQzXUmFga+35IfTF91nZLzdRYSpnb0nzAXz+Kf0Sa9KjQucZGJ1zkEf2hi53
GDOgwmbRidu70OY7b0qqGFGhK+Km4Uv0ircR/skHqMC02jIYbckjDym8+/ri
EBU2/nvPqEBHBYhqfrGmwqjSlwNT6H96fr+5R6lQPT/UxfoQj3xffNr0oisV
lMVSj0sd5pEUmUcPb3lQ4fQZlYU70Jq+v0VfnKVCa8n+R+7o5I32L0d8qOC+
+qV1Bdq10Ez+SCgVVhlueWJjxSMbyi/t2hVBhS/1Ukv90es/5bppRFGh/iN3
5230TC/3DSWeCmIL6c+a0TYT0PMrgQpfDZR/jaFLaC7cjzeo8N4jO4djzSND
pN9b3bpDBdlroz0Euk9xOiAgjQoiVUx9M/QezdUP/7tHhQ6nlRLH0DlbDtab
ZlHh3D2NbV7W/PfbkCmdR1TYHzXddAV9xvLZsmU5VCgX0SpOQDc5du8Qy6PC
bLrfQDpa133+6cECKiS92nc4F53sp3+98TkVjujICLxEU8PdyVcvqXA+cWVV
CfpIQurPNJIKDT9vP6lEv02rY4W/ocKWtOTH79Grcinr3Muo8O2jTEENOvyV
2iHLCipQPwk/53ugyvrSlncYL+95j/jnmzRG3Ff8QAVX+nQIf7z8zqJabi0V
EsQNN/PvJznYNzH+iQq6gecqCtHnpxfLtH6mwr36zjmP0d/ohtvKm3B+DtJy
/PVsmufl/LCFCiXVl5Uz0amymbExrVSQfiOr+hAtrPLl5fkOKlycc1aBv95j
OqI/7LqocFWYJvEM/c5Ak7nzFxXkdHQGX6FVTI+sUe+lQkp8EFmOjrKOOSD5
hwoL1Yx9+OsZcSrxExjCelw5uqoJve/scMbPESqI3iwr6UQ/vyxb8/4vFUZC
JbYNoBdH7f2bN0kFhadLn0yh2zMfbb0kIARWYg7EAht8Hy345nSCKgTSqf8O
KKAz3ohHGwsLQf9K7n5N9H9fT7QvZQpB+MEFfyzQNd0JdFG2EHh6LrvshFYf
rVD9wxWCFoXWER/0uPgKn5fzhUDo+waLe+iDC/elpS7E4w1Z21+hi+QDqq9I
CcF5xklGA/oi0bnowDIhaKhbOEmz5ZGsU8lPx5SFICzHVc8ZferCh+8takLw
eZbmewX9KXhGuFRDCORTjc9loBNSLM2uaQvBWg3G7U708k8LhlT0hUBuzuqT
DnZYL8lFtmbbhWBSyGpdCPr4f/Z15wyFoDXapvQROls4+0mpsRDMDV+7chqt
rWXgedBKCA5rLr2ZbI/1f9N9KuCMEMiKyucJH+GRQ8cX/ZflJQRSuX6cdegY
zeKWj95CEBt6eMAB3VTDfLX4shAsenlZsRztQE31y7kqBDvM4mfCj+Lzy7FW
+FumEOx7UBSlcoxHSq0940l9KAS2agc/2KNJQenuFY+FYHH3C+0ENC3xWIVr
gRCYLLe+TDuO7xvVAqH0EiFYGNWv1YK+q67CXdsiBC9s/IyuOPHIbbOf/A60
CsGU1g5HEt1TdW7Ip0MIah2mt4yiVR3K6ip/CcEHZ3vZw/9hvcQdirUew/UG
z9xYdRLzO3VlUSibBnr06e0PnfF7WOHf5xQeDXZeSGluQnsbH49+NpcGd1Qe
PRR2wf7L2Cb+cxENdNliowfRASa02U0raKD/u1hgCm3p7Va4fxUNuhTtk2RO
8cg19zo8nZVpMKYTrqyPbp0pHkjSoIFzeT0rFF2wUu1BriYNZCzqtz1Ah5sm
H6vUpsGLq0v3VqN1Mr3b/wINugOYd+in8XlQ33eTpUeDib/xn5eju2ctDy43
oMEfhW3ZgH6l+G7+hh00iLm3SfYAOtZM55PxLhoIeoXJnkY7+WZGHttDA/U2
ibQg9Jb7krt8TWjQr3fj9g30woYgepw5Df5xaumP0QMC46UPLGjw+qp23Wt0
+aqj/iWWNNjTsHGoFn3TvGFjsxWuN0r+YBvazW/rv0FbGgjTJCn96J1ZTwpE
j9BA7svi5nG07OdlbkuO0WCQu6BJ0BX7R/Ca6jonGjgMfhgSRX9YTekzdKaB
f0f3AhY6bd+pe3anMX7Huwgu+oJ/q8M5dxoEsVcd5KFNH+yWvXqGBsFG44f4
xxUbi76le9FAK+ykDv96QapyYpE3DTTFw7r44zcq3dhX70cDToeaMf/+D/cz
5/ReogHtj+Spvzi/yxe9aihBNBj93Lr2N9ryYU+o5BUaPBIVvPYVveaLxXbV
cBqEPao7V4UWE6qgGVylwSUy8nsBulV5/etD0TR4OGGUextdYJHu7RZHg6U5
8duS0OGX5ulcSaBBsnP/xni0/aPLf2/foMHnaCvDGLRO00ju02QakOfXOl/j
55tm7/LhDg3a1mTfjUL/Uqlb3ZWG9bZfuJ9v8sDmX1P3aCA9Ya8fzc/35cd3
JR5g/D3+ZMWi/8teaquYjfE79GpJAlqvOUJ6Uy4NPu7qTLrJz7fwbNO+fBrc
fm8nm4oeVD0Zd/IZDZzWaD3MRL892GJy+QUNnnuYbczh5zvAkJP0igZP5t+q
eY52f1z4Luc1DXrHBm1L0IZfFYMrSmlQqr5k+D0/3yIJW1vf0uA8tc+7CT2h
Rqf8raJBc+w8oZ/oGsszReIfaOD7e6fvCPpCjrmmTj3Wr6iNKT+//iFPycWN
GL+LpQEy6ADbhTtmmmhgPVUVqIaO5H2zLG6lwfZrXn0m6JgeoiulgwaJC3t3
HUEnvL7tfKmLBsYbwtzOolNPO/gb9GJ8hoIYKeh7O8oZK/9g/ZlYeRbw60F2
ZYzYEA0Msw8lV6MLanvTq/9ivzYdWjqFrlR3qzahCsPVCaFoGzesV7EG87XC
whCcP556Hv2pXbN1Hl0YXE8vtYpHf4v6N/SFJQzmL7aVfEQPDvkvsF4oDA/k
tYQM3Xnkgtyrdk5qwvCx8E3ZQQ/cH68M9+7SwOMaFzi+aFk7Mw8VTWE4Eild
l4peJSEZPLRBGErU9+f9QW90TX54ZpswPJzyDgnxxP13zaOJS1bCcOZBtNrH
M/j+kvsu4kaYMCjviTG47IXfqzvv2r6MFAbvDdaZT9AbOi+sbbkmDLbNP8c7
0KVzVJoXJwiD1Jtq3c3nsV/cr8onpQmDqF337Sm0FOv4ROE9YaCuXXdT8QKP
tE3b/K45Sxg0SkcM96N/NwyfWpQrDM3Ka+/koGc0zV8mvBKGnH1C+2y9cb+p
UY58/loYQs0/MMLQQY4idk2lwvAlR3VNAZp7/anownfCcFewqIDuwyPlJhea
Xm8UhtXk9J00tGPUsPyzZmF4tlxrsgr9QPHdROM3YXgboXJ+AL3u4IVbC34I
w9HY3JZ1vvi+/+J7T9ygMLh4GtKf+vL316cvC0aEIaLaNrseXdsbGfn5rzDY
W/3WGEJbSm1eN39GGJTOdmYp+OH7Wt5CuqagCHz7anQF0D92DTebC4mAxFdp
qf3ok96pfrFiIhAid1nlIjp33gXTfHER6H4xNyEWPf7QTKGBIwIXQSA0A73B
QHlyVEIEOgoHJp6i/b4LV8+dLwIbgk43lqPLPL/fWrtQBD6tGFhUjxbjPD1t
JiUC7Stzn7aid2dEbnVfKgI/BTpTetDRcGxBzDIRiOkPfj+E/tK46fcTeRGw
bA9RmUBLn1pY9GmlCMRZ3X82jbalD0eOrBaBM/bh1gL++Ly7XWU3R1UEXhrn
zRdE92qlrtNYg/Np8qmdxfNVa8/TTdeJwN4fqy5Nod2Pm3111RIBo8D6JX/R
zynKj65tEIHOXo/4P+jZBGH/XEIE7hl1t/5A6635blq3WQRKfnz//QUdVFWg
MLxVBCrbB+9XoavtIid52zFeRyIlCtG8KcdqdUMRsPZhzOXHyzx6U7LxbhE4
texqShQ6cfVC19PGIpCtofTwHLq1ZGhrlJkIjPtVrLRGm4gV/Ti/XwSuZ1ox
t/LjuTv48tGDIhDgEHFODa0VY7rc+LAIuFasfCWPzmpaUrrBRgRkMw7OLEYv
WfrbXsFeBPR9362bg45yyBfiHRWB9KrFR5looft+qVPHRGBL948wGtpzwFDv
p5MIaAg+vzeL9dOzdkHnR2cRsPq77Nkkv568Oi6+OC0Cn7enPx9DfyAfLkt3
F4H5M6+yhtGbhc+9uXoG8xnYHjaIztu51e68lwgseOxlOYBecZVDPeotAn2+
A/P4TmxoTtnrJwL7l90s5Ju1OH3zhksi0PvhyzZ+/frZnG6XDxSB8OyBFyPo
kTRdf26ICAyUK8wbRx/pFZWdChWBN58LjafQX9Q+FXdFiECmfpuLIK7H0POW
zccoERihlZwUQRe9OC74IkYERDwDd7DQapR1t9PiMb579Cnz0KkGgpuuJopA
4kVetDR6fti7Vq+bOJ8lo9P8/gmpjfM9clsEXq/v11VHT8+3W7o3VQS+vh3Z
q4t2OaRM6qSLgG3smOZ2dEfKhJV8pgjEzmvsM+Pnv7tklvNABNT3up2yQ+u4
HiS6crB+t0h+8UU/fCr/vSYP+6kt/WkkeunMoHfhUxFQrZ6yvI0WDg4qiizC
eCyL7ylBn31vctirWATWu8z58BndK7FkxqEE8xPx+uRvdO3NPF2dSlzfjQf1
c7Aftnb6tiyvxnzGvotT9Of/PtnwAqcG872+TWwT+saT9hc/6nF/KNCccEY7
VrI3RLaJwOVi7Xv16GZ2c/O5TtwvBEbuDqCNzNK8HH6KgFimhC7zIo/UaN1Q
qN0nAkPNVspb0bOjx7R/jItA9Snn0pfoWJmS9docUSiW/9BSdgm/J0v3y82T
EIVNJ0y2/UJ3Ovaxh+aKwhCbKsG8jN8n2fN+3lskCmcE9z03RldvPBYjqSAK
9+so3R1oIUvW0LiuKEwwXXbyAnnk/dmUlk8gCtrD0T/Xo43vaFZkbxEFhZ8H
71ihk3uskx23i0KY0P2jD9A6Z3ONGk1F4cRsS/L2IB55Onb//YIToqB3SzHM
Nxi/J7X7Yq+dFIU62aG2NDTZ4ufvfEoU2s6eFK5Gs5bft1DwxPOzNDMWhODz
N3daJM5fFHrf/XuYhd6zL2r49GVR8HT81FaDHpuU/24UJAp39PvzRtB6m/fk
C4eLQg/XcKXOFez/mhR7j+uicDl3V+hrdKCb5h7jJFyf+F7JDrTygnc6yrfw
uNZ/c6ih+H1rNcrrShUF1awurU3oZdSQmeJ0URj5F2puha5Mk+65kSkKT3pa
Ss+jF/QbFJtli8LCWDXfPPSrq1+z1HJFwS/3y4sa9JG1p+LF80Xh24CHym/0
k/MJzqWFovCyYTReKgy/B5eqHLxdJAqHVet916IpJW/0LxSLgtKHVF9D9G5G
n9TaclHYoLv8nid6nfO48e5KzO/j4RNh6MV11KBj1aJQfafy7200VZP98mKN
KKSUWm7OQ/ckLBy6UScK0Vs3bipHf5xZrvC0QRS07nX++ox+aqtmWftFFLLT
0tR+om+Vbbja+1UUgmcLxUfRAYrbyoRbReGHpa6rYDi+L4ab/FvaIQpVq+X2
MdGmQ4dVdbpE4b3vjodz0drmxx3MfonCdN/x/6TQMs/dE5x7RWHzyaXBy9Ci
0n4fgv9g/WzpGlVA9/uFCqUOicKcpvkZiuj6H3FaRaOiIJszcG0V+sX2Oycb
x0XBY0voA/7xOw8e3hn6Jwrbu390868P4T5vZM6Kwq3yRi3++C7upeIKFDoU
FS+JXoze96Vm8yYaHVwPm/2WQG/U/ep5UJQOKi+H1elouds/s9wZdJAMND08
hetl0IbbIlh0YHdkW/ehhxxn5mVy6ZB/QkbpK/rLO7phyRw63FC4mf8WTarO
9fs2nw7hF2f+5KDTopfmjy+kA2P3RFUCOmx81W+eNB2kC+V0fdFulppLlWTo
4HxwbK0d+gC52cxAjg7VK99kbEFvkjMKsVGgg3zoq0AZ9Iogi1deinTIm7uC
N4v1w+61H4lRokPhhsq4PvTYbpeV2ap0MGhs0G5Bf831Oly5hg7T18onqtFv
5gde61xHh3Ff8bpX6EyvqLczWnTo/MspzUFHfr8xvUCXDm/Oqb1PQ3tuuae+
BuhwKLa0NxF9OP3J0V1b6GDxZuGSKPRWBpl0VJ8OAgbudsHo1c5VH/220yFN
gvPUD82raxBOMqRDccbiRV7oiXXtOvm76ZA89DrEHd2a0OdSY0yH9ytlaKfQ
ZTPjd3vMMD45O4P+Qz+wFWoWsqCD+YQh7wQ6uozNWWJJh0tmy28fQ3spLtqq
ZUWHyfZKdb5tw+XPmdjSod9mZSnf24bUHv3nQIdnErLm/OtVzHU7Ax3pUBp3
pYM//rzn2yRTTtCB91btBP/+U1KmRi9O0uFETH0Pf34dflYXG07RQaNjtTV/
/pU/jj8dcKNDq237W/76Hm/36BM7Qwemc4wsf/3xD/xkl3vRQb3ry/GraG9u
2D7CG4/T1t9KQDu4x4da+NEhAla/TEUbfrlT7HqJDsFLFF4/QqvrPhoLC8R8
SITdL0QL0MqsX4fRoSm7f2kDeu68Etv0SDrIrA9N70ArKry2D71GhxUH7v8e
RJtuL3I0v06HfRvl7nCwXo4deHFcJwnvv4rk8uvH+8Rzp6W36DD7zkZDHZ0e
lu/Sk0oHBZWqK+boFzefnP6QTofyoIuFx9A1j3LcnmRiPMNkYy6gJz8+POOd
TYf72/100tFG89J9eS9wfMN9ohTsHzuFu/5/i+hgEyWnsxB9Zv2dS1+L6fDK
J0pwDTrlwK2gtHI63Ooz1T2CHr0ZF6ldR4d1EhOSdegkhaBk2x46qD49ceVN
BMZ3fUCKQR8dcred8exAl22/lLp6gA7G7bHF1EgeOXDCN2NslA5zPJust6K3
ZJ/JDhEUA72W+YffoXvWHyNzFogBc/PVpz+u4vvcjh2tFAMxmPN9uGd5NL7f
L3q1Sn6HGCwx8plriG7vXeO5fZcYrL12f+oUOjRCihVpIgbnly3reIFu/TSg
I2UtBitjfbWNYnjk2jSHQLATA9Nf+W6n0CGeTbV2R8Sg5qeFUjR6zcKSY5lO
YsAprhr/jA6wiovTPCsG1NsRYvtj8Xmvyuw4cF4MHkUt3OmBVqX4KXv7iIH8
fGrpNfSX1OOlJZfF4IanHrxDK3t853QHiUF50qzyT7S/gaklI1QMXvl+VROM
w/7r0R3eGyUGVjvP7FJH+xXmbHSPEYPvCzKNt6MbQhVC4uPF4BCvQ88KrXg4
qb4wUQx27uMsdEP7qHBlvt8UA51VAm8D0Z8EApwoKWKQ+dZGLwG9onayYPld
MfigUXrpPvrCHWfq9gwxsJ+T6F2IrnXrNHK6Lwb+fhoKlWgFfYuEiIdikNj+
2vUz+vz89z9yHqNf77PoiOP/vnSzWsMTvF9m57s+9PLnBecnCsQgclL7zRj6
3JXVbxcXisHwW4baDPq95W0JKBIDrRc/xYTi8XmsPM/Krhjj/3vjVlH0mdmQ
zIASMTj+0vqTGLq6Znb0XrkYOFV5ZTHQsilum6orxWDjmxvF/OMerr9CB6rF
wNcwV4R/fZXe4UaJj2Lwrz/wNBW9dF7dMs1PuN7J0tEpvL/bTwPnA5/F4L/T
Y5dG0BVPXzy/0CQGB8Z8JXrQ0iFqwrdbxGAw5350C9r1YNreklYxoOxJ/Pce
/Xb1ohs/O8QgpN1Ypwi9eCaiW+ynGHi15urz43nqg5CGco8Y3J7nzYlFlyWf
9dnbJwaVybuveKMXnu6vdBsQg1Wdqffs0c5b7ObFD4vB4tDGQ9vQJXMabQrH
cH3ByxJWoiW7DB98mxCDuRI39oiiTxYUjwtOY/1mabt2Yv28Dlqnt1yAAWUr
aoZfoucfuB+xjcoA66fskmi006qlzSeEGbAspHKeK5qcipaPoKOPVQgeQs99
Tz+dw2SA9Oev3G3o47e8X9azGfCF579VA90n1VX/hseA/Y8ev5dFuyTt6n88
lwG3dc6Z8NDDC/OEkxcwYHjoSi0F7XF98ZLwRQzwUYzcMYL9MjH/kuZ5aQY0
aq983oU+H/t793EZBhDHhpY0oWfmmDjul2NAUo3Pufdov2vPffUVGLBrx+G3
b9BCPNnrGooMuGcuIfqc33+RwY9llRiwhya1/jGazh6s4KgyYF3LoPk9dGjY
/vYZdQa4lwjYpaDZTHKydy0DWn9mH0hCR4UoSDSvZ8DuFJsNcei59IhVFToM
KLQ7LnwNHR84tqVgIwOY8QsLItCLhA9b3t3EgJywZ4Zh6JuXSt2u6TFg9GBA
6RW0DFUpzM+AAeyKgiV8p/pF33XewYAplfMWfCsITL08tAvHOzLhEorO9LZr
2LmHARuTDe3D0aunK/u1TBiwbX+I2lX0Iy91kRXmDDihVtTA33/UJ68vmWfB
AFpLz97r6CdnBNcLWWJ+Zui3b6I1/zruGTqM+eMyX6ein7vXOLbaMEB/W2PO
fbTuiKbfe3sGBHsYnspFk6dvXX9xlAHyfzb8K0RvGRTOyTzOgOPH3IxK0WXO
Jyvj/2PAfx25jh9i+H8/rW8PcGFA3KUcA36+3jnp/nNzZcAnH6lfP9C1x5ir
955lwJn658dm0WbdrnrEeQa0vJqjJ4710Hik2VLJB+PVtfLzInSLXWYY/TLW
Q62NlA7aup2b9jcQx3+xr2onut36bNGPEAaE9D1U4Ndn96Ftf4ojGfC88mGr
H3pkX9eec0kM0JEqpNWhPRt2HXO8xQB/4/eN3ehJ0zw/8xQcz8FtyyxawPhS
jnoGA5wK1OqUsH+YhrJzfucywEWu4uJV9DI4/PlgFQPsolW0XXC/aFocoaPz
ngGXOwMcwtCRE69uLfzIANnh932Z6JkcGccvDVjfDd7CP/nnL/8xbt7OgEUx
gf2217G+GE4LjScY0Cf5ZvGRBIxfd5K32hQDHPZFbgpEC5RWt3NmGfDitoJ/
RgL/90kq9z8IMeH3Oge93+gdg0M6uzhMkLP03X4qkUcKfj57aJsCE6ob5YW8
kvD9PjezWEGRCZ8bJ24mok9GNi8XUWJCefBfoRfor9t1+0vVmWDycnTRFP/8
FwI+WzYyoav6xqczN3C/ua7WIbuJCavntCvEoeU9bA0oeky4MnR+fh46WqWE
XbydCUPzf+f8QbukBCZvNGNCnu3PFVY3sZ59ngpJ72fC3mUpD86ivx385Th9
gAmvxpYnXkMbzt2p9sKaCfb5O2NK0dQhr5hEOyZIJy+ObkE/f581ce4IE0ZM
57SO3OS/D7NeazkxocJsdLPMLR753Z6Ql3RmgqPfsZ3r0LGbXELGTzEh/a/k
pR1ooX8fjQs8maCsZeXogi78TCmIPYfjVzUI+aNPP1mzyOMCEzrGd+dG8cf7
L6ZD4yITbq6RUXiMbhDTvWocgMcLsjCzWM/pnRtdgpnwxADCq9Fv9EJ7w0KZ
YDvj0/QF/bxtTcL9CCYMuw3WdaIfezcbVEQxoTTxn3M/OmPRxdGuGCbox3Td
GUPfeqp4R+g6E35cbbaf5s/frHaPbBITVB50plOS8fth6OwMcYsJmu96bYTR
lyJksg6lMGHrhVeBouhzqyssvO4yoa9RlEVHn6pwEbmewYQAe7NfImjHIwvy
8u8zYcEYl0VDH6aStp8eMqHm+hUXAbRZ8lHO0GMmCJ79IzSJ9zfUZRex85jw
+vWOV4PoLU35J5SeMmFDbMi1n2htz8OSOwuZcL/fy70ZrTZHuNyxCOvjatV+
fjxWPH7gFlDMBIspmtpL9BIjM9nUEryfRdxgJnre76kPxeV4/amqsFg0Myj1
wvdKzO+t6nEfNHW54arpaiaovctYfhQ9WTzcuPAjE4TtDEQM0QOHEwPWf2IC
19g1Uhn9899mDfPPTJikNeSy0N/ie9pcm5hQd3zcrhfrpX5tVMTVFia09G++
Vo5+V6ul+6iVCZmB02uS+fXFDI7v6WIC5w5EbUc/vqeqL9rDBF2RgjUL0Rn6
jcPL+5jQE1EzZxbr+2aHz+0tA0xQ3Dd19wc6xldht80wExxyzSyq0aFSH6a8
x/D+bi5K+Wj/5x6ZSRM4f8XGpcn8/hgppTXOMuFbbpSVJ/ro1f9yRyni8N++
2nR79GHluTYSwuIwb+96ugnarOoFS40uDgXKy/03ow0d7V8YMcWBHjLAWYPe
QmMed2KLw5Nf3blyaO2U3PkhPHEQTzE5Nh+tShwsTZ8rDj55TioMtMJXimvp
AnGIfXJESAAtfTZzaccicXh643jXKPb/nHnG7wWWiIPfi7i6XjQjd8JLWlYc
SoOolZ1oyp7bKzcsFwfty8/KW9ATvds+W6wQhwqpwsrP6IHggUueq/D6y7M1
teif8vHqMcrioBLt2vge/e0N0ZqjJg5Jdya+VaHrrX+G1WiIw0mnY+0VSfz/
lw3X6dcUh4ftEa1v0a8T1v1i6IjDH67KZ76faX6LXbkR4zMx/YZ/fvany3oG
m8ShxiEjlT9e2imlIXs9cYj78N6Df78brPpb/gYYX3Xh9fz5RN8/vyt5hzgo
/vr8o4E/3ui8t0G7xGFxL23+V/78iMebT+0Rh7J9dF47mhqy86WFiThMWJV+
6kav+PRDc7O5OHiMSBwaQO+S9s1RtBCHv6mlGePo044LlSQsxYF2+XaeIMb3
xZSRbKeNOAiIldDnodv0fyW9sxeHj0cdDWXQwlcvzs87Kg5Nq4f0ldB7lj9l
BvwnDhY3qQcM0O7OxoEnXcQhMDH+PzN0wrNewX2u4mDqoKTCr5eOXTJ/Fc6K
Q7nUzOOLaNH4wlOc8xgfjeH/otGr2816x73FYc+KA9V30R4eIW0Vl8RBrtLz
RCVa7NZw1YlIcUjONa7n17vKrzB902viIH394iFVtOmaFcUbYsXh+tahU/ro
m+WW+eJJGI9G9ho3tPpAafKjdHFw9Td8UY/ep229KD5THEbsXhn+QZ+/NBnj
+0Ac0iK1d9OxP8sWqFzZmysOz4d0kjaiD2yKdx8uEoedV6UGH6D9o47v0GwQ
BwePW8pJuD991GCPFAmxQPT3k3XXU3jkOmLp0x8iLBDcSftciE7YrnaeyUBv
+bjvG9r+sInQAS4LRg+zvsve4ZHjgXFzRqVYsFhYeMM99KGojMZFMiwQli1b
UIl+nfQsabMcC1bX1Sf2oK88bpaLVGSBz6l2d8VU7I/mJWtXaeL9F1ckpKIv
/lCd2KvNgo9m9VXF6O4/m16e0WWBTMpJ22/oHCH7rWVbWNDV9eXG3Lv4fs12
p/fps8AsQklNFX1eMqBaYgcL/ulyRXagtypnmNnsYcHlfiNzL3Tm+meSQSYs
MBrY/DIKzdpS2fLQnAWqkZOb7qEb9/U6TFmyQDcsxbsOrWs7vXKZNQtWvty4
7Cc6xYnVv92OBdvfjxZNoJ38VD3ijrEgMPpl7qI0jOeVTdpFTixwrbw8rohe
F2s80+nMgiuBnxla6IRku9cMVxYYk9CxFT2b6Rag7sGCb/9U3Pai7fMu77A4
y4LIlSO5B9FvX8WyfM+zoNXzRZw9WqkyvTbNhwXmq+PnOKGjPj2NrfZnwePz
HktOo/9+qzgwcpkFFsfkH3igLX81SS8KZgHvunnOWXTx8O/2TaEs4K6LWeaF
lp+ZSnOMYIHnu92j59BXRFknIqJYoKNYt4h//gBviUp+DAvuws4r7mhTKdXh
r/Es2CryRtMF/UxhUwE1iQXx1nJzj6Gl1Y29FG/h/ATWz7dG+2+wI/amYDxM
7qqZoX/qu1HP3GXB+LGhfdvQhnsvl9/MYEFa+8UL/Pg8Phh7pfQ+C0Ibk2JW
oOcdSd/d+5AF4bWHr81Fe7k8lZDIwfp7UnFMAN16ruKzVh6uL6+Q8Yuf78tN
idZPWSCxe/DEB36+I35bBRay4K8u7UIuP98JU8seFmH9uLuoxaBdU8W7PxWz
oGxpiJcbP/8PpbP+lbBg243AXXvRG56puMi+ZcER3/PXV6GF3+8dd37Pghvj
g0casR5vrVstGvSRBfK6E2n30etvCS9I/sSCyrGETefRH0XaFJ5+ZsFJf8bK
HejjLoWaNU0sqOkUYy9BU7/EGHS3YP1XBz8URCdtctkn0MYCJcbwyR/YL9W8
5Z6qP1mw6CvsykYf8ZoN2NbDgh4NF8c49EzHl1jrPhZ4aS255YNWzQvPjxxm
wde12hYm6AqpY2UZYyx4/zD7y0a0bcCWBnKCBawbhc6r0NH7xkcHZlmQ72jQ
IIJWImtpdCobusbC7/zFfi9b8WCujDAbHi8d9+lGW10NXK5FZ8NLmZpjTejx
CZu1e5ls+CN/0KoafdV2w9ZjbDakqnw6XIxWrJpn5sdjQ3y/05F89Os1g/bX
57LBK3OXWxb6YFKV2+MFbFglHRNwBz0ilHapYhEbkvbvT0xEh/7nG90mzYZj
SSnZ0ejlDQdSJ2TYIE64l4SjizaufcJdzoaKwPJPweh96eySlSvYoBQe8P0y
eoDdU7dpFRt2LYhp90cHnynpsFBmw40zVc2+aNm2m8On1NjgfuLvWx904faz
1BANNmwYaU7n2zTHRCJFkw3rtdU8+Of3LVRe9lybDXSHVDX+eAEXRdfU6rKh
/Mznz5fQS3rbN/cAG8rUbI4EoZ+avjSm6LFBuPVdUyh6z8s424UGbNDdnKAe
hf61/PRp9R1siLXWPRGP9g839N+xiw2iR6X9b6EX/pWPst3DhoM+193S0blW
ginnTNjwPnOGyEYbvm1+HGXOhiOJV9ueoX+o5hdnWrDhe2iweQna+3rkx9eW
bNCX4iZ9QGcf3zo4ZMuGrAitMH4+t9ctEWQcYcNTtT/qY+h2nUnOsmNsuHD7
0A0hrIc54o9UTZzZsIU7lbsM/cA9GE6cZsOciHoLDbT+N7s9F93ZsNr/ecFW
tOejBS65Xmx4pG0dfhzNWTDsU+XNhsOTFgLe6Azf6ogOPzYIVtcsjkI37fV/
JBHEhpB7wgYv0BtHfve7RrNBRW16Yj72A03sWZV5HBu8n8jlKKPfLQnI0Epg
w7XXXzq3og/sXGo7e4sN5P2mLHe0R4ppfch9NqxInHVsQj/c87Lw9mtcf8pT
9zzsX+kH4UEfBthwq4eqHJuO8Xp90CFnmA2y9L9dT9BZjSs2x4xhfZbgCxpa
W+jNvwNTbLha7/SOk8Ej7z/w0hymcmDssu1AMDp8fftdexoH7I7aNKSjT7/Z
NqdBmAOsjvfBpWitL3MHn9I5+Pzy2Cxwj0eWC2VnerM5YPAsyOL0Pf7+NE9y
gMMBdqWIWDg6fOGFQBseB448WGRxD22musNeby4H9Nnqz7+hOw52Sokt4sC6
YfWGLZnYn107Qr0WcyBaf6ziIDrz1OPJXikOdDrnrXBFnwr0/vxhKQe8fNoZ
yejZnAVXY+Q5oPf89t1BNOWmtpz8Cg4UzlXKo93n/73WsiB/JQeMVTRrF6Dp
bt47DFZxYAMQw4poplVyy+fVHHi7IJ21Ac3Z8drFUZkD1kM5Cw3REms7qRMq
HNi1OVj8IHreUuG4YDUOmISptziiFzJWKC5cg/PfcN3HHS09tv1lpgYHFE8F
9/iiZdpO7NFZxwGdb9kSV9By78I6qjRxfkk3B66hVxQ88rDU4sBL2huPRPTq
lI/0Pm0O3L/inHgbrRI2nHRhAwcEYxpM0tDqZ+aqsjZyQHs/I+Yeep2d5pub
BAemnwqa3kdrG1mYq2ziQIR8+GW+dbW8fr3azIHbXg7SmWiQu3F+jx7G7/ti
iXS0HvsVu20rBxIzVu5PQW+bbE05ZcCBGmhr489n5w/KOsp2DrSLnU3lz9eo
Rq4iagfGa7twdDDauFDfcpkhByLp3qkX0OZpjn9yd3FghJ5X4Yy2uBrir7eb
Aw8yrf5aoS3PZ82t38OBW1+4MkZo66PvMxyMOfCFQmhro+2MB3TGTDgQQtFe
J4c+osv7EGDGgd8L1ooy0cdXaNjO34frb910h5/v/yTMR9P3c6BKb+/kJ7TL
jGfQ+gMcAJ81Avlot1/XF1Uc5MAsJz49Gu35qfChxSEO9L0W73BBn3vVsqnn
MAcuplHu7kB7Z85+OmfNga2SJd9l0H4xMo4MW8xPpfflMazXoBMO4asdOODq
+edLHDrUPFDm5REOqJYedLJHR2y692SXIwfq5iirKaOjVlcZfDvGgSlwjpnA
/omd39d08gQHLrwKCWhEJ1DYJ2edOLDyxsvbT9E3+lQFI09yICvs1Y/r6NQ3
bgqPT3GAu6e73Qqd8TD2+SZXDkyw913X4/fv9ae7at2wvgPkXBXROc5TrsOe
HPh6gXtlAvs9/4C0yKWzOF7furJ29LOtkDDHC/s3v0y6Gk0uukSu9ebAC5Va
mbvoEuE0kzIfDqgsYVVEocsHy7vM/Tggm6YR6Ieu/Prr7E9/vF4h4sAp9Pty
hviZSxx4nHtoky36Y45SsmgAxr+3QcsU/enG7jXXAzmQ911hswG6MehU2cpg
DqT1uO7XQTe7XrN4HsIBrdhP51TRHnnKJqqhHFi0RUlfAc35W2GYFsaB7Ybt
f6XT+e+7DvqLIzA/4nvC56O3nhOAqEgO5AtXiXDRrYWJWqJRuN7SW7YM9Lnp
dWu8r2H9VfJuCKPnELWrR6I54OZinUdBP/L9T/54LAcCa1/cm8X3rx2vRZe2
xnHgfK7JmWl0JzVV0vw6B8Tsti2ZQntvJSTeJXDg8528pH9oycAm5uYkDjCv
Pujn+8lbd+GnNziQclFLgn+9kRhXQPkWBzz/Wojyx+/emTVxJ5kDS1yE3wni
/S+GGQxLpnDA45CSJQ0t/aG9N+IOB8Znc/Pp6Kcc7y7aXQ58NPT4wkIbG0u2
eqVhvD/qv56D7rv25MtgOges4vtPLkIH1e+uO3qPAxJiSi2yaNn5v9+1ZHLA
v7ZAbBV6X4IMWfGAA+m5+xJ00UPNL54Rj7D+HdP+8vMTKrU/Ny8b+8nliZgJ
ujg5PO12LgeoFO62E2jL9pXJ8/M4UB6r/98Z9Niy0uth+bjfW9A3BqBXpf8L
PfsM4xEU/vkOuqw7NuDPcw5MxrYl5KKtFdV9HV5wYHdj+8wbdMwDR9e9r3C/
+hhzows9m1tvsbKUA6l1rzrU+f0x6mJyq4wDSnWfDhigNTSZu+a+xf4KyT1g
iT72fDMIVnHgdM/Yz0B0HflI/ksN7oeig82d6JOUnUt313JgY7mQ7jRaVK9L
srQO98OZn4x52J+65YvFHzfg/q6V1rkNnV4dPBz0lQNF0W8kc9FeTXbk+m4O
iK5hy8bifqBa1WGV/osDRj98p3LQnYV2s3N/c6BatphSgza6YbdxuI8Dkm/j
/cRwv1pqbffiwTAH6qsbqvnPg5Iftk9lZzngozsbdzKLR55paN93VYALaflX
2KFopXLbv7OCXPhF3jx6Dx2bYbuuRYgLyrXGqR1oxxO2T+LEuECPZz8ze4DP
r0GbbOY8LrTU7rVa9RD7ua1tt9d8Lhicj9PTQ7vX2vz5tYALNedMH1qiv+Xa
KJcv4sJN60ejV9BRqW3Va6W4EFp/oCwFbRBj81+qNBf+esYLPkNne9hk+clw
QaSKfaMDbX+0beeALBd8mYV//qIl99v8PizHhVOWzVcZj/B9T8tGcYMCF94s
vpihil6n2FaRuYILgvO/sjajfy+0OSapyIWUUcMMY7TplHXG2GousPrW7zuF
Fu1rNXBQ5sKZrLZDPuiXLdY/61S4oGQ3fTYUffp9a8BmNS6ove6/E4+Wf2Ut
/1idC5v+o366g2561Fq6RIMLrt9dKQ/REcnWDuFruWC3x06hAK13tVVoeh0X
pq9/136FHvezTj2xngtN0m0aZeis061bmrS4oP94h/g7tI2ddcc2HS50n/tV
WIOeZ9rqX7CBCzI/3NZ/QlfqWcvKb+QCxz/8XAPae21rcTTBhaNjxWc/o9fI
W9tQN2E+Oy4p8d09r1Xg9GYulH5aF1aPThKxTm7dwoV8BZnIWrTL/kT7k1sx
PuLmL6vRW+81rJjS50Kej752OXrhJLcveBsXaEln/hWh+3fsejx/BxfGbE1G
n6BfJwa5393JBatk6cX30HG9b7TW7ML4NFDsE9FOurPTpBEXNFfSi6+gIVz7
tdEeLlwyWqRwDj3nu3vA171cGPeihhx5xP//8Mc7jptwIdHCqWUPusi3lzVu
yoX1o61ztNBRHxXqLptj/AreLVuCPiJrFyexnwvah7ymKY/4/1938+BtCy5s
6VsQ04n10jlnbucLS6y3veqVyeinDnsydhzmQnLM0V1e6LD8K06NVpjftBmL
/yuu93io0z0O4JYZlynpeaIyWp2QcjlNLk3KlO9RzYm8yqWcDDNsi2TbVjax
O0izsRS5rNqsWzYdaiVjRjpaK2pXhGSlcYll1FqsLLrMdnG+vz/fr9dv5jfP
9/l8v888fmj+fu0XswcILNwc0fsG8865suV/J0MJ8Atfrm9DD2niEozCCfxW
IunPQ6fmP2fbHcJ8G6qm7dFBk7atNyMJ+JhdcZvB/nHYEn5WeJjAphYT90a0
7tkS3+5PCfgu1OEUofsGB5Ye+IzAerVKI0VX8pb3P48isCHp48WBaFmSX3FC
NAFSddDLFW1n0bomL4aA5UetvHnsb63P2ZPWsdifOendI+juO1CljMP1n8jM
a0bHh9W6dEqxf9LvJeaivW/MvBUnYP++tSiIR6/WW9c4kUhgIFu3OwzdUV7q
oScjoJPnn+GK/l4zZHjuKwKPYkoXrEXHepp1WSTj/CBbi0zQXvn+56tScL/2
JG5jMfNnMlu0NZWAjUWtZhbn05yg3bwtjUDsYYeGUXRLhr464AyBCLV9Tg+6
aHBb2e/pWI+poagWdDTvxCcxZwns/zo2oB4tTKrj6WQROGa2zJOZf2YPX8xm
ZROwj1RBOXp6lcNN828IqEPvuxaj70Yfjq/IJTBs+NLlW/SFO2Ww+TyBv/33
8rOY/2/Gata9bwn0zz92OI12DzNv2ZeH+T4WYZOMXnojIEP9HfZT+Qj3JHpc
95zP0QICl18vZyWiG/7TaTJfSOCtzq8jUnRu+YK+9GICPWntyi/RERphEbcE
59mOuljGAk/ZgfLvCUja3GyY50l+vTW/lEBdqOaXePSzidfjdy4TyH56fPcJ
dJ3A+bpPGdY/U1AvQ1uPjvXeLScgeFDQkILOPlPIcrlKYAXX+Osz6LeOvrwf
fiAw/sdJks28v09XZH4N85b0YxCz/u6Tt05lVxIIaM0KL0K72URdZ1URSNnR
ZP9f5r7TadUXK8d6jHCuVTLrj+tlTVQTMJzgPq1Fy1ae5UmUBEaHL3Q1ov/8
xV30sAb349Cqz9uYeptUXK+9SSCmIOeOmjmv6kP6bOvQH8qOTKPzQ03YRbdw
fhWnNb1j9leRKDr1EwHN8vhALuZlUOSU/KqBwDMBN98G7aE9dj2ykcCUlP/F
JiZPPj5sn7tYPycVm7kPdUxZVn3YSmD7YM/iy8z947yqL+s+zl9V89xN9OUt
GWxWO87v4Kngdib/6S9F4w9w/glFDa/QdrYt7NpHuF6v4zt9mfPuYcJ628dY
fyPewki09heOgYUqAlnjKoGM6c/m/Kqv+glYHZ/sUaBTw44Eeg/j+ZJUmmqG
/T56cYn8j0nsv9Mv0jTogmWSoBUsCnvsuNuZ+crd3CSvY1NQ6JnwZ9F5QdZ6
AXoUCsvWahlX4ftLpuTnOBQKhre934vOtDuhZ0QoiDp6mn9FL9qtDrpGKTwb
GL44g06P+nf1LmMKz6MSKJHj76kxEqcuo9AblFjohZa5Xaz+wJxCbkazpB6t
dYClf3ElhR817gYqdOKpCPHWVRQ+MPqMPYOWtqzXl1pRaMhZ2W5ZTW//PZEr
NrWmsO9VbLIrOm6Rprp2DYWdcWsP+aKP+TWK52wpJBmrTiegZ2JWK3LsKTz6
uVyZjT56IU3fYR0FZ69jw6Xo6bo/xQ94FGrUnbq16CNPfBSfOlA4Inbi3kNP
ztfoL3SiIB+bWqxCR1pwJVedKQifOP/2DD22PVGxk0+hJMU4YQ598OCI/u8b
KdhNfzmgpcD+SRNKkjdRKKt2nF2ADq24qrB0pdDYpK4xQY90LDJoElDogiWm
5uiQv6IlIVspTHpYktXowSWPFe/dKGxs9c2xRYv5rgaF/8L98q7PWoce2F8s
cd1GIWJUpOWAFkl1lL3bKSzvn+9mrCo8aBAnpBAvD9Jm7H/7vmTpTgq2T99J
mc93j/CUSg8K3M5dG5jv92PnGvjtovAm+fQqK3TXmteSv7woeCp6nVagvT2D
lJm7KXgnOgdTdMfh2wbrvCksjjx6XhftlWkV3OaD9XV1b3uN9WiVpyoj/SiY
DDnNjqE9uicNDPZRGNlb+a4Hfe+ld3CZP4V3F+aeNKGFpjXKHfspVOZYpVSg
77qackYDKPyDtXHsG7S7JCFYFkhhKH7+RRza7dIOToOEwrVkYT+Th59+vhIs
DsF8DsvPmaIFY4Y1bz6iUN9V0TiHearjRHO++5hCstTbux3t8s+eYJcwzEdV
luMl9I09m2t6wikMagkCjqM3RBdxYiLw+VtvlEK0Mlc7ZEkkBYf3fnxjtGNt
eI38EwotTZfaBzH//wfL0q3h
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94568#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94568#3"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {9.398306502016513*^-8, -4.67516863312092}, 
       FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "ClippingRange" -> {{{9.398306502016513*^-8, 
          4.605170092005027}, {-4.67516863312092, -3.143512015296149}}, {{
          9.398306502016513*^-8, 
          4.605170092005027}, {-4.67516863312092, -3.143512015296149}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -4.67516863312092}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Schwarzschild\"", "\"Decoupled\"", "\"Exact\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
dniStUiup9+TZHedtxmiSve3He2k4KmS/EpDmWbwHLQ9sYLsd8MvNXLqB5qh
WHX0+/F/FDwb0vuUMGqGbUqC+6L4qXjhzuykgEMzKC8W/rUmqGhmtlr/38Nm
2NVo+MZIm4qXtYST+qOb4a9hapP+VVLPMCj8ld+aofnue9azUCpaCyjbZ9Y1
g0lkjU7/Lype+6NT9Xa8GXTLFNLnSH9i12Es/5irBRh/r734e5bAG4U2gTd3
tID1pwtPZAsIdPp4d+qCcgvopUW8f3CMhi6B/vraJ1og1eueJZcEHV2dIpPk
bVqAiDMd3ZfEQI/zX/hFvFtgZeJ2T86vTPQ+mGvPEdECrYfqh54V0fEBtapq
LK0FPIRW1P3wpOFDvm75hvIWcH/N9nF7GoH+s6zA3IEWOMpl+tJ1G4FPW9hZ
8StbwXHkpIngW9Iv5QmeCNrSCsc1ta8dIvnx+Xup5LsKrfDYUIel0k3BMP+9
Gy10WyFfQanfLoiCETe0HI5dboWgwaqIZ0coGGV0plrJtRVkpVY0c60n9dd+
KwWJ562weuTpeHylDL6Xcnm27ksryBPzdvlhMvhh3SPWTFErsCew+xp6kXph
6uWJ9s5WuKFeIXDfTQbF1TW2bl9oBdVXvuetH8tgyNPBrvN8beC/fPjxgw8y
uKbzSXyEdBu47Fd5rNwog/eYe+zb1Nqg/HCL4rtlGZy+16IkeroN3l1LP0PI
UPBKucfK81fbwCFHwJ33BAWPXSsPaA1vg0EZl33GiRQs+OZouC25DZjBitqf
esn+Xi8idq6kDRJ5PvFpiVLx49m8/pedbbBhlWLtqrNUFPt45XPLfBuUftI1
53pN1m+R55YIXzv8eMoZOT5MRa7/UtXOSreDbfDjhLXqpL8PM+Z8qdYO8vN7
WIMxBE4OrvzdfKodbnq5ZV3cRkNzpffBW6+2g1VIH1KSadj0QO+csVc77DY8
3K3mSke9hmnJ8PB2MGTFzSfnMjBPOnykKakdDhVqP/4Gcrjn1oGULSXtIFZZ
zNERKovxhf0uRp3twDrPXhrHzUBRIX+NsPl2uFMeo2Kyi47F8mEco6s74MbD
tY0Po2noZXR18NHGDlI/TFz2VKKhmsf+Mtr2DpjvXM62IPXjfNzGxF/UDiih
ueqtjiIwqbIvyGZPB4yukrCmXSHQZuGr0zr1Dgh/2N5MVSRQasfjsx+PdIBA
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
6MjffHtmDlzitlCCggjcnFU6/HaRPP9Rf8f8hwSqB1d/+71yHlYcUd7d4EOg
zfXmJwur56ErkOd6pjeBwdrdppI88/DWTJty5QHp31wryno2zsPsxjDDS/4E
vk76phSzeR4qA0NHOp4TuLM/PubydvJ90z0aAjEExm8N3SC1cx7W8Suk66YR
yDzmfbePOg9JX++0zJYSmOplP/iOOQ/jQVd3xPYRqPz1wimLPfOwclNancxq
cr5HdXOlVebhfWbZfyEMGh4SV6YPHJiHB2faDHSO0rDktPSL94fnwfd1yUyw
Jamfc1baUU7Mw1d4mnqY1O9G02Mtg4bzkEKr1mj7TsMOmRat+PPz4Oclr17Q
SuLF0zQxwmoe3P7w/ltP+n/bwrePhq/Pg0pwsWoxiY8zfwLmPzjOg2JI1Q4f
Szo6y7pesnGZB6kNz/UfPCXn85J1Bc19HrwKPGXEs0m8DjVUGfWZBzrt3OGv
g3RcU3bofcKjeTh2ZhWzbAsDA1YqCFwLnAfropjOFccYKLhHzI0ROg/Msoqr
FD8GhlmtHxl7NQ/dLev7L5WQ8xj5x+Dz23ko5T9H2c8vizHV/fnX4+ZJ/hsq
mL8oi1SuWlnm53nYFecSO58ni19U8sInUuYh4LJGotUWJu62+7w6MZPM51rk
cI0pEzNjXjrYIVm/jc+sbfKYuL/Jt12ucB42YJ+tppEcFvLc+m+qlMzXnv3e
q0F5/E/jUnpS5TwUKAix14zJYcWt4xIO9fPwmxUbqywoh6c/qj1RaCX75aLv
34a3TGzuIBZZXfOQvyOxxMqAiSaCmy1SBuYhqkl9SFKUiX3anNU3xubhz5t9
xoc7ZdHalaW2e3oezmutPLUvRBYnkjriZxbm4XB7VuL307J4s79MKG15Hso1
P+3hEpPFxa1ZHjc5FsD5Xfny3gkGuh17P7Zn7QLQVIYrFn8wkNM72GiObwF4
YxXszr5m4MOvHoXpQgtwpC+vKtKVgXxj1+WdRBYgcz7p0R4TBoaIn4tQFF+A
nnju1s8HGShioLNmQXoB3G3wVSLJ11EP9978Sl8A/RbRtCkB0h+jZNdthQVI
5jhN3buCgR+nN+gpKy3ANr/i/UdG6ShHWf76R20Biv5qm68l9VHauZGdWQcX
QKA8NFTvFx1VAhufuugsQE7rYbmFb3TMLSxc2ndsAX62Lc9OfiH5fTHZ8u+p
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
cr42b5rccJLL3cPlIUfvc58PSE6TS/L8uN6iPFQT4p3iKjdNTgeou+d85qKF
+5UUlytOk8ebuHeuPOOi6Kyhuqll02TrhIis+U08//nnHJ5oTpMSr1aJLCni
olUV3v+dI6bJ+T/9gr+nY73VpJQUoT9NrtbfZHkiloumHw0tMjeaJp/I93T0
beOiLf3namRNp0lm6rm6Ilcuav7obfPJYpo87PdW+pEF1meTSqO3bKdJ02PD
vsarMf6yh/cddZomN8Z8bXurw0VvZYukfTdNkxmba0IvqnDROg2fyhVe02Rn
wCGbeFkuOm+gbMnynyZnXRT2uIph/WIxPNQXOE3+agmUUmVyUYBr0e6K0Gly
8Inw78E57Kf9fSQSoqfJvgz92HiMZ5pRylcc46bJ0diDnhM/dVBG8vBa1aRp
cvigxIX1X3XQzoVHQiJTcTwJ29WXfcL+vdTozO2sabL41IOPX8YwX+p9vCdx
cpr0vGqQdWEU8/Od3B8+Z6ZJp7wIig32i9+dzBSuFU2Tmf5usf0jOqhr5IcV
5eI01qfGYa54/3rEuSj7q9Pkm/n8imb8/Ukhu6KC69Pkia0KxjIfdFD08anH
nxumycg0oyN++H63pZf+GbVOk3ERlsnlOL5VNa7LMu5Pk0WzQRl/fmH+Xyvs
0N+Bz7ekdVhPYb3RdW2vZvc06VHS71CH/djrrV4XdvdNk5WjAjNzES669UP0
+YOhafKezlpzlhQXFSQ1zMqMTZNf/wtqEVPiov0SAZrbP+N8iXP9wrW5yLtY
yrX25zSp0Kz70ArXy0RwO5E+OU1+37pO/boVF6m0hVY4U2ZI7Yj/XF64c5GQ
o8KrEsYMueOs4YLenVz0bviR8E/RGTJIdqDsaxIX3QvbTZhKzpBrHax13fO4
6AJV3SNbbobc+km3wvc6F6Vmdx8aUpwhp+nCCoG4PwOVk2p4ajPk+LBBwch3
LrK+xhuM154hj2iai26X5iFtkzecJ4IZcnC9hko9yUPznqXpy6+aITcTES+G
dvHQF++VW4PJGdI3Kmu/JcaTp99GMxvNZsjn2ipdf95h/Z9wvJ5jM0Me7/d5
uFeWQNniJqObHGfIecZNIjIWBAo/90X8ktsMaffcNPx0EoGciLNG/zxnyHcg
bXntOYH0kFWAhf8M+dJ3erLUgY+kHP4ezwmaIdVS2jO9PAXoz2Bpy2jYDNkn
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
TzZfWwQS9ynw+LVX2CI7n0iNds7f/YCC47sygxrf65OMBcFsfyMFS37D93Wm
+mTeAUUdz4cUqCYXyD/uEJPH5Ipm2yPcz5PyuEfRH2+TtJq6qgX5XJ3D+mwQ
E7klbyfWPqbAP2eySQIrJueOHFQwfoL8q1dh9pIvJgvuTuIVPqVgf0vdeJ8v
LHkuVyGj9RzrHSsZ/+MxSwIs7cekt1Fw6dqmgOIqlnCPfx4RdqC+2Z1WJp3D
ktzGqMGjL5Cv24OW7UtgySKBRv/fTgpa6/NMasJY8sKGvN35ioJNn3zvxvuj
3k1wet33Gud1PBmucGcJ3fqjza2bgnGe5zW4q1lSoJTw+GkP/v4SXpDPUpZY
rNVpXNGLeDZ6wi80ZklIuyeZ9x7vuxKwOR/9vN79ng25HyhozFq31xPx8abK
85/SR9xHN57rlSE/ny7oyQj/hHrkuNAnmYv7Kt1z4WA/vvfLwhMjuP8kY3o6
3b8gfzs2b3j6hyHloZ77Hw1QcH/F0PUZwwyZ6uZZfWmQgh1JLsa/+pB/bHqc
Jg1RYPkp2ymolyFRZp6/o38gf0mffLL8NUMWMj2pI8MU6PL4cwPRD31T9zTy
GcF94mji1f+UITkKPW1Pf6Ee5ET2lLQwxEnKM9h8FPH+uXp3XRPyZa9Hhfo/
CuaMly2tvsuQPU+718aPocGs58/hNPRbOnc9hv9J0KB7bvBCdQ36s/Lu5G1j
afBVjLNSvYn7I8/DoFOKBolon44y1AuWp7ufWMnQICkr+/nENdRDUR5B12Rp
0F8daZlZgfyyt1tx1jgaJvIrej6UMcTH16MkRZ6GcInCJ36lqKecu+1luDSo
dLZ4aqGeb17hMbiTR4Pbcc3h///9VMSC7oQePv48RnGyGc6/0VwPxo6iQXb1
tohM1C+f1bqbCU3DqWW1MmKMzws8dugq0BAbxk38exX9wZhuKkORhnmBhy3+
Ycz96n6VO54G4foP6wzw90lX16oQZRoOTf41MxvjoBb3Lx8m0OD812DecrxP
+3ZXzDoVGn5G/p2jifm8LHafe1eVhsCHPx8bY74J2V2N+pNpEJx7Oe0Yvmdp
kvvWbDUaFqtm6yuVM2T0SBdXYSoN5wxopw6sx9Vd7gUHp2F9fZ7wXmG9vDZ1
WQ2o0/BZV/PPNNzfE9e5f3SdQUOl6qggB+vdtKwrulGDhogu6S1bb6Efn++u
baJFQ6/nth17a1GPaXfV58+kobHu1JOHqNc+qrhvnqhNw4HEP8n+D1DPjrrl
/ZhDg3TdcYlzrQyR63+9dONcGtJC1NOMkC+vd7q9e6yL/XkdnDD3JerzptcR
i0Q0SM0LmXUY9Z3mTTfNQoaGWYIW64XIp+1XXtdOEdNgEet0yfsL6o0st40x
+jQYG7c+GfuDIT8PumX7zqNhKLru303Ef0HA68Xt8/E9npuGB3E+3D3depYZ
0xBfFa5+V4kl41e/PlRuQsMOuXTfZVOQD5e4qWsupIG5N6QfNQv1kf7rmkRT
GrLWePeni1nCarq5jzWjIb2wuiYD0P+Ofz0mYBENHwPPZORZsyRN1i3r9WIa
FjU/2fPSiSX+6854bTOnwYa78nyTH0vM/3s6c9SCBruEy2NTDrBE5RfdH7WM
hqjm5WPjElny2dK6UNmShupsz7VzC1hy68zRoAtW+D1khFB3WZLy6fZ81pqG
aQ8VrJXessRvwb8/ZCUN8o33XcPlxQRijG6ttKFBs+rACycDMVF8FRTxwhbx
aB9UO+wnJh90Cy232NPw+GyvYXGJmNwI+8T/uZoGvy/whztJnyQ0az0+4kCD
ldWnM0MtqEfVPVMU1tFQsL1lnXzIPGIcmOF01pGGl7ZWd60v6hPqTtsUXSca
1Geq9qf+FZM3ikpvqp1puDB38yfnZDGp2GiTZ+lKQ4bdXr9hSzE5UXbM7/kG
GrZfPlOcKBATD9m7et7uOP9eWn+9X7LEYJ3k0KAHDQ7HTPNWlrBE/r8FlQe9
aMj0mhDui/r11cie/QJvGmZ/erA/YhtLSixLzNI30XB6NHl3gw1Ljp75Ij17
Mw2JpzRlMvVxv37SbqjYQkNL+yOXk5NYIlrgHWPhR0OYTUBDkxxLZGLO2rVu
paGdfrHU7Rfi6+WL8R7baWh7fM3Wuh/1o+6Eji/+NCjYW8zb2oX4D7PP3B9A
w/KsMQ8zkO8cmmM8OTuxX1+Mrtch3merN2idDqLh/a19i5puo18MlP6kuZsG
E91Qq3NVyK+34WrJHhq2urkQBuc3T3HfzkV7aTiTu3h0xyWG7NtYPu9RCPaz
I85zNfolm7Jvoy77abj3+BX16CxDNGTn1nwMxX4Vep98kcaQX2s3HwkOo2Hq
mvJrAadwXvOyl8seomESNeh3PJEh50Ze8ZIOIz/5mB+ZEc+Q3ZaqLepHaDBP
lK40iGHIijMOyVcjsF8a5oduHsN98Cl+/cKjNKzwfMWvjmLId5NGtQdR2K+t
a1ntowypPyHX43iMhjWyEu5ykQzJeLk4991xGp47K2auicD51T3gGxSD9Vvs
G0FjbBF2TXdsHA31PsTUBGPV5qHBuHgaDlq6hT/FeGCaqELtJA3PnOzOduF5
dwL89hUk0rAzRHn/Brz/1O1cMEqmwSONzbLD/LYq9kjdS6FhQ1wr3ED/uWij
Wv2a0zQEO4+zy0H9Nr7M8URPKg0nH2imCPD9fTJJtjvSaPgSql39L4UhN9c+
UvqXTsP9LtHO/Vi/xDxO+/FMGlxnBmXGYX19RiwyVM7SoOx4de8irL+J5SGP
vHPIv9LH29OxP/SZ65oG2TQ83Ra26wr27+3Hn323L+B5fcNLI3AfXTMRX7HN
RXw+spESIz9qvnnfdiePhoWRDken4f6LP5YuNS+fhuup3k8H0D+NMna6Fy9i
f5IXM9e68f52mfVqlxA/nU71qZ8RLwerwuMv43nJnryy3wwxneV/ReoqDZ1V
z+MM5VmS/2hG++5CGgovBGWvUUE+29Mm9bGIhnEm21XXzGHJoSkxuq4lyE8W
C7pikK/66xatby7F+2b+uL8R9ci6bcPhS8pp+OrWX7LDiyV3lAqulFdgP62C
/dehvtS77taufY2Gf+7aT8SRLDnjpSSdUUVDjShBUSsV9VNx6PrwG/j7xS67
v91mycv17JHhmzQ4Olc1GHawZLnk+ytbamhYudLiWsB3nNf/0to7b9FgVN5R
LkOJyVRbW2nbO1gP89kb98wVk+M/pfXu1OJ+p6qMQm3EZDjz2nrDu1i/iZUa
k3cjXyzdfiT/Hg03Fd11O8+LSdPn6VcnN9CweiRnI9smJkbJz9vj7tOwrFx/
V4CqPrmw4IS0VCMN08vT2XWByFe9Znq7m2i4JBlS6z6sT/Yd/7G+7yENV7iH
huz4huQ9e/GISzMNakqXYZWaIVndseHqoxbcb23J3jmSBoQcUuxY3Ir4+Frs
YHJQn8zWrpcuf0LD+MUtSmN19Ely83497Wc0RO45293wWUwkgxmn9OfIH0MR
Pheuo36d+u4I1Y79zJ+6Xwf1bPvdM1cPd+B55x+n9AaIicV2m44fL2hw+iRY
bbZGTArHS8tseUnDZd/TLvONxWTSjUq9zlcYZ6zqUJohJkc3bnOy6UI9knxx
gy3y6Xfu9Ijb3TSk6ufLHB1lyYaSZ1cN3qB+shuvsvUj7jen4x3/9SL/vWvx
u4P9MRhrJjP5HQ3+iepfXNAfnMsf0ot7T4NO5a0LQsISnl2+09g+Gth1+hG3
ilF/ZikUfviEeiLyceCldJbYLLvX4fwZ9Vfofo2bJ1lS9WWfzKMvuN9HOQ27
o1mimSISLf6K+Eg8v7X+IEsSFr51KvtGw9Iffb9yg1nytzc1YtZ3Gm5bPfgo
F8CSzSdWFaYN4bx9nSLfs4Ul8KJC5vBPGpTuKbv0oP8pOLxV9GME+zPt9vjR
tSxRnq3uvPk34v9Xfn2AHeK95WnEi1HUW0O7AhfhPv4cfKxw1V8avjXeP+O9
jCXrp8GLW/9Q381sXdyxmCW1977LGEgIITxl7fM0U9zfyq7Ok6SEIPvm68pf
hrifjW4VXpMWws7bNqG6uP9PO2vKOsoKIT03KqNMjyUTDkQ7D8sJIeWJ29vj
OixJPvu5MEleCKdKtXqvaLNE8Y6drJgrBIUSTsjkmfj+t2XOLTwhGBzMbHms
wRJqnGqRv0AI7+cHOjVPZ0ns7AOyAloIK+NP1Sqqs4S/ssf5klAIW6nhP2lT
WXLcf2mRlaIQCszXz96MekX+5EXZPiUhTEmbWbBHDfdfqcDlqLIQ7l0vVbyP
fkHmeWCR5kQh5HK05rphfOTXM9laFSFwJd4MGWIsNdnExXOSEMAvNt0O40Om
WUUSakIIWh117CrGYzyk5LKmCGF0/aiTHZ4fGu7jsnCaEK757+ueh/eP5jwo
eqEuhJFR0zkbMb+Qej25kBlCiNcbc/j5NPSjHxNdJmoKIcs53j8R37eHP1JU
riVEfC+7nYrv/6HnIucwSwjZ1itO9muxZKd9jct3bSGMG+hbFov1+xakUZww
RwibOnWyD2F9d5yKkhPNFaKfa65twPoPXOt3eagrhLEl/fN9sT/bOm2Lt4qE
UHYhRcpnHks+/SuV47JCCBv6crXWhCVb1FVc88VC2Cal6BllxpJNm7rl3hkK
YVJy5Mf1K1jyNsrC9ch8IewK3P1qF+LJqyC/eLqxEOav63NUcmRJdxN/3C0T
IWxR/60Fbui/vwa4ui3EfFUXnJD0Qf5TeFb811QIojW9xzajH3QxMB6XbiYE
Y6OrpuGI9/UhY0valmD9f848oRaDfjR907g9Fv+Px52/f5olDuS+6/hlQlis
fHF2FPrP1m7dkpLlQpjtHzU2BPWQvXTiOHsrIdx309JuRL5t0frp+nWFEIYC
3nqUteI8WjqXxK4UQmuazd+Qdyxp8iPj5toIweTejd27kQ9WxM7Y8MBWCK8O
ixWnKIpJQ+HRki32QpBYTRUo6IrJ8tZP48atEcLxDqN2w5Vicu+HzYZcByEM
LxkT0vZ/fppYWmK+DvvBVGlIZorJHeOJ8m8cheB/1HF4xlMxWeS6f8MhJyGE
VO7/9lhNn5CwrpKpLkKYqrg9x/CoPjE9by5/01UITz4OrnlsbkBu1P63wcUN
359yumry2nnE5D2v9Le7EIpNs4a1ZQzINfkA+VRPIay7adl3ylWfzNN5umHe
RiE8V9aOnvRTTMpWGZU+9RaC/eQNpicviYl+QIZ8kI8QyLqVdy9jviWJkm4K
W4QwD5Y0PzQTE6bcu7TQVwjR7xZ871MWk/8Bab+9mA==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94645#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
oUl48uHXGyFxGh7crBlmtH0S5nsS2L6SfKZk1RHnLzUJTUk3on1u0lDg2c0P
nyiTwFTspFOXRcOVVvHPY4qTkNz6oNN1lIa9It9LJTQmQZ3SIf6Il8CS405N
ttqTIGYXVHKb9HMp8esHQvQnwVTQf8DRjsDQwfeTP4zIeNC+yOIugVdkTZiX
zSdB8LDBVc48Ao+eG9+gaDMJQm6vh1ymCdRJCxV2OTYJZv++h8YBHXdOKsm+
PD0J//2NNv/1mo6cKo2q9a6T0MOWfveFjgKOe3nv5bxI6s/lFr41rYgN+UIW
Ol6ToLcXv3MUk/d95bPDFd9J2Etks64h+/1S9N51egGTwHPrXobWQzpqqVd8
2BA0CZLX3gr+Z0DHGw2Wh1seTcLn3GsUz810RI+2lTfhk2DwxbZ86A+BLP+d
enshehJGdKSPLv0kUC912Hh33CSMsW4Kev+enHcHPKbXvZsEk6sK7e+fEPhj
aOH572SyPmpCv7bdIHDtbf89sRmTIFpw6MLJcwQa7OAYcf00CS7LWTHr7QkM
wsdPVL+Q+awR4M4j/WSZncCuNcWT8EdTvUNhL4Fci7E9lb8m4dgFS04dcr6a
PJUOiqqahF7D30kFCgQ+Uk6jO9ZPgtch6WO35QisrlVtprdOAscm9XuBkgT+
5/715nIXuZ/pratvxQg0594n/WtgEh64J0i0CRMYllRZFTYyCfWscZqCggTW
77O64jAxCcXdK4s2/ARu7W8XkZ+bhKwdzhqRpP+09j/9Y3Z5EgIMhkqqyfiZ
6Oi5b2umQNpku+M6AQJbCi7xPlo/BeZ2eVW6QgQK2S4V2G6cAkqf78QdkheO
zt46tZN3CooqdHf3kv4hJoyTa0JwCphOdW47JU1gJ/1J5mexKWC8XM0UIflB
rErwyL2dU2BDVJfJk+ftxNlXLIfkp2A7zUbzA+mnX6+XTRJTmII1ckm/qw4Q
2Pc23WxEdQoksm2Ei0n/L7lHfT5n9xS0f9t9uMaJQMdujL2lNwWXtxfcM/cm
MMHXwOCg4RTEXVEuL3xA+hWh6n+CB6cgbyXjyM83BMrmHo4csJyC4yUsahZF
BJ616tTKsJ2CeeeIF2V95PmfdBy47jAFRN+/AueNdBwLGXtg6DgFvsq1Iat7
6Uijeirznp0CvtHC9E0hdHQvW27rujAFYX23/BpX6ZjhHBiQfGUKBMff7rJo
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
gE+Wmi8Pz9Un/wOwgyR5
            "]]}, 
          Annotation[#, "Charting`Private`Tag$94645#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {0., -25.282960521083005`}, FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "ClippingRange" -> {{{9.398306502016513*^-8, 
          4.605170092005027}, {-25.282960521083005`, -10.538523102645492`}}, \
{{9.398306502016513*^-8, 
          4.605170092005027}, {-25.282960521083005`, -10.538523102645492`}}}},
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -25.282960521083005`}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> NCache[{{0, 
           Log[100]}, All}, {{0, 4.605170185988092}, All}], PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Decoup-Exact\"", "\"GR-Exact\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{3.868486462766777*^9, 3.868487415659803*^9, 
  3.8685396550572643`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"08b2e735-fb7b-47d3-9cf7-e2c6ebd1eb42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotsodevsdecoupled", "[", 
  RowBox[{"0.02", ",", "0.45", ",", "300"}], "]"}]], "Input",
 CellChangeTimes->{{3.868484468390662*^9, 3.868484480276074*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"282319a8-2b38-463b-a989-b54d4be458db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
/Pdi6Xp7GhGHnqL8lxG/ZfTo4zM6cc4hUti1ZB0uscz7v4XpEqyYN9TMKjaO
dH/d3R7CIEhE5/H35etRVfC/pk7QI8zlpcnqNyzx6qTx48vCTOKOTRo9uXkD
Vk7tOuLaxiQCzyZWTN7ciGNPFnj++OsTqdwPDFwebcIHxf5dO/7oE205p6h9
960wdCX/iNgBA8Lpy9GLwTetMa8sx9d+0YDY7N5tPtZqgzGnzhbVRRsScV8v
MI/cs0VlcY3M468NCfKpDjOxZ3bolDLtPs42Iib5pUare+1RiId7WrrMiPh9
4ctoaMdmvJ6c328/a0QkuJFnxV87oKXnN9actTEhIul3fVeII96vt0+TyTMm
eMesb3l9dMScBnWTIwPGRD17+DER4oRDo5nlnnImRALD8AhzzAmvhZdr1Hua
EL8qTRwoEc7Y9YHUG1FkQqQ3cj1a880ZTV5ZD3e+MCGaLg/wF+1wwfE8bbdd
vKZElaqXe+53F0yvFMZ7pqZEjeF5lzMhrmi3fX67RIgpEfHilIf0lCue3H8k
eazIlOhwKqQpxLvh2Dr+8tjHpgR7+7Zq42k35OJ5/mtmwpSI5O42eZS4BWkC
D26/lGYR9fr8MYFzW/DoiexRWWQRhbaOezKi3ZFBWje+NoBFGH9nZ6nOu2Nu
yvOIXUdYxDeFBdvuGA7ymPDJ/rzEIp67X/pvOY6DJZZRznsrWETNMbdaWiIH
ka0TKXiZRcQs1Eqm7eWg0WSnn1oli1jqCnlrnMbB49otcj5VLEIo9U1ccQEH
g85uXdVWwyLow0TpztscbDEceZt2i0WIiEe45t/l4MBIriT5NouYspbla23i
oFbwW+a/f32jISFMtpWDtJl49et3WITFMYZR51MOavNfXhy6xyI2m51/pj/E
wdrzgnY6LSxCN9ppn98IB2VMjYRv/TW5YpmR/ZaD3qqld9itLKJPzKtg7CMH
hYc5XW4PWITPV3H/oh8cJF7Fjic9YhGo0CreNsHBBHrdPHcbi1B0j2qbnuIg
Jy9lIuuvP7V00OznOEiPmjhb/JhFPJ7fM5K4wMGFLZVOau0sopKumVv+m4M5
WpSJa3+dFThg2f3n//8uCcZPWMSuorS55WUOPk3ZMt781/8DqDZN0A==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$580920#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV1mk01QsXBnAZEpFZ5nnu4HDMJ/YmJTIe5LiJTBFlzhQyhMiQiFCKSm4J
SbmV/EVpIg3SIITrGguZD+X1ftjrWb9vz5dnrS3rFUzzZWZiYhrbuP/nPh9X
KWamGRgLLwrqjS2AhIpU4UNxM/BAuOlsvF4+1H+/s615eQamhIZGXQTPwYhU
/2aJ47NAKezvvMaTByIHOddjZmfhYu7rXn+Fs2Bdqrf06dgv6K08WVZSlgMn
v3hN6078gjPH/gixiWdD/fbc0fzDc3CphJZm+eAM/Of8aGB2aA6e9eWLuB/P
BLGC0U92HvMQOGDJaNmXATbvBd7e7p0H0SvZAVWGpyGRF19spS8Ab+qx3e47
06HB9mjLke4FkFBpJxU6pMFY1oV/ntsvwju2qN8Xo1JB/PXTOsXORdCIG0x9
XX0Kki0kywefLcF5/4/oZJIC91Mti8FsGWJUMlU8LiTDeNvxvEvNy7B0wWa1
di0J7PFNkmvjCvylwNIW/D0RTiUwYhopDBiLlQ5Qc0+ExialMKE6Btjm5Mpx
t58EKcOTXu+qVoE9qOWBL1MC0KJu/aWpuAaFt56eFNKMh9R7n2jZ5Wug9kQF
lf3jYEqLvMuy5Df0ClNVORdjQSbEjXpD+A9ozhTotlnGgmPNaQpb/h/gbWrr
c7seAw/VBuWfnFmHWyeUA8zDoiGyYXMODysTpmy/klw6FAVnP0hkmpgxoeRi
xOURehQ85bNMvtjMhPcNb+uWOkdCP9kj4fUaE6qaf/GN6z0OS3bHYxlGm9Dj
o7CDwOHjoJZTHkZv3ISfM7Y5RJ6OAPPbjUHpC5twU/WUZ4d0BLh3dAbcpzBj
I01BaephOORxMrwE65ixZMdYy8XVMFhOozm+rWLBzSbstXblocBf6W+3/h8L
DpkuK+Y7hALpWcI+DUVW5BVmSLqxhoIHy61dWeWsmG56boA3NATaT7Lo7C1h
w1MWaaVbXwTB9zJRctRnNjSkvR+esAoCxmNNUqXwZvSXVPRSeHcM1NcOKLDm
b8YDeRHDMHoUCqIbBFvOsGPDk+TUQ/qBwHnwipBaFzu6oX33zMsASDLNEi7g
34JqIelCpzwCIIjTR8S/eAvyFuja6+Qfgb0XBSR4b3DgfOvVTlNRf2hOXJeI
neDARPLwWHiLH+j6Tkr+q86Jf+JfDrQc8QM5jTbpfxo4Mf7BE+7w1sOwRoTJ
H2rdit+X1jtvZvpC2DV3hVdsXHgC7lsom/rC+GkrRR1LLjwfGLfDZsUHehzk
lLe85cIk7s0+bkE+UDf8Tq2ujxvLHt9eYxzxBh92LW2mFR4M/S1wWeSiJ/w4
niOqK7UxgvQ3vcZ+nqDizyo2Abx4zaKoz5viCZetZ8ScUnjxHXOVVvGbQ5Al
9EJChZMP1a8KKzJ4DsFzdhPJvh182L5DSfnHUw9gZtyVPGfDh89Hs/NTAj0g
pv+y1NpZPrQUdZR0eewOh29Eybzdzo91X53YqWEHobz4h0yqIT9WWflmtsod
hG9nvGWNDvAj0dFIzeh2A8cQO7lrZfzI+Y1VvZXqBmiorBCtKICcD9QSrEQO
gNjrHmUZiiCOr26KXWR1BbGK347FNEEcG7Elc7+mg3iMQiJ/mCAWDXnPTufR
QUI57DPrHUF8rFM0xS5HB+kU7oxxDSFkyKxSNu9zAQWq+US9mjAGrJEP+TU5
gwJ/oDDJShjNlZN0qdnOoDieZ3b9iDDKuyXllrk7g1LRQElRlTCm59ibc7E4
g+pc7L44pe34mzjUbUtzAo1bd6p3y4lgROXvGy+3OIJG8ufPzaYiSAmuNLo7
SANN13VWA08RtJ1akdj2iAZkdpuDaldEULvGYxdvMA0o3mPcPFKi+IzhZsT3
zQEMxKWDP4uK4X/s3RPuL+xh15ksrUA+CSSNXIlea7KB6tIl+z3kDcce92hI
tQHhaq8QWTsJnIjjz5+2tYGxDoPaT1kSWF79aWB8yBqyto2QzLdIYmvvJMdT
XmvozjNWkVyXxPRahfDmZCswrqiyWJaUwufx9G1LNCuorBfw+7BTCmuMJeZK
5K0g+sP49YxYKTwWnnpBqt0SJIQK5RcXpDC5j2ozyWMJPhd+SnVNSePDIVkt
q3sWcLibJP2RTQabVdRtUs5YQKnbUI2ZkAza/5tby+NlAazHbN5I6sig9KXs
PRK8FtCTLc/dHSqDCrssM4eD90BsV1cm/pBBzcBb0tXGu6GVppIm+q8s9vnu
c+vi3gW21gKfPs7L4quZXQmUCTP4uvuP8jk2OfzQ1XpqoN0MZg26X3IqyyFn
Yh0PV5IZyEgncq8dkcNmz56uK8umED/5qaB/Wg7lZ8qzN88jGJxKv3p1VR7n
3nTs8iCZwNP4sHkPLgVMiORI45w3Bvuog7slJBUwsoyHVbDJGPwCKKMFJgpY
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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$580920#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Decoupled\"", "\"Exact\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
jOsJ4cH3V/5eDsjGn3PSJ8N40JZzp1kbucMu9LZEBH5eqr5QGvlwmfMjjSge
6NSQUsjIYvN1X66O5UFw9d9nY+81RNejxN9vPc+DkDu8kiFko7Ghr4cv8KBW
VWb9ADKVVVrvlMyDqdYClUHkBsXwXP1UHkwarKgaQU5Y4XBa7gret6KS+xd5
yzqlnTPpPPBebD3Jxucp7xg2+pjJA9dnLw8rIQ/4l82tuc6DSwuVPfSRb0ef
mcjJ5UHMamq5E7J/puPryJs8uLdNzeMosmGJctHeAh5sFpe2TkOmvPgaa3uH
B5WW61yfIdf3PPRedhf1t04qahw5/nfEWqkHPMgpzC9Vx/hu5jmp/C7lwW//
+W0uyEoq80md5Tx4QPNovohcYFvx8OpjHpgGGDGlMZ9+npEXw2p4MHN7QG4b
8qoTG/12PeNB/uGTZdeR63K+L1n8ggfqV3OExqiX8xWVbP4rHngot/9NQN7U
EjXwo4UHGbHLvn1G/jStklnSzgP+6+1y6ai3/NmjQZc68b5l8zSmkX0XibYG
vefBm69fpFxRrySnLZKmfTwoqOlZJEB9K+THRrwc4cHSC4YPP6L++x5v9Sga
5YHN4cpFTlgft9rUTRLHebArRvxhPfJKypPJLX95MKRe1VGO9XQz/7juKJkP
rT/ErO9i/dVSCvOCeHxQkgvI6Mb+mRcnJTPC58NAsVP9HuyfsbKBZ3bMwtcr
xnaOIm/QsnQ3leRDzJM3LnTcP3u29sqz5vJhrvmwoua/73+LpM8nqvLhzZIm
jR3oD6S0lQtU1fngc92z/cvEv9/TnR/cX8iHQ5/3nvPHfiu2PePdfwI+mDWY
uZxCf+FbPj6wewkfItR2SdLQfyRW9JJ/a+LzIy9LhSPLstUXyS7jw5/ZlUsD
0a8Uxi0q8pbzwT4hon8UWfmDt62BDh9aTNUUd+E+q/7gtr+zPh/gd4WZCfZn
QeYr5vBKPvTrbmm4gawZM3o5cBUfPl2SpnDQD3XcdJ+kCfnQ2PO6sAZ5pc1m
J01jPjx5nVQqi/3bUP/450cmfLAupl7yQoYFV07YmvKh3GJQ/h6yKe8R74MZ
fl7LNdYf5LV/ujMPmvMh9c3ihfrov+v6SDokCz5w16kYH0K2aVrwPN6SD9Iy
L2SuI9s/XOM834oPGt3SAa+QnbJ3fyu2xvOL31D/hbz5fGSo6Xo+VG9+OySJ
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
         "]]},
       Annotation[#, "Charting`Private`Tag$580989#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., -39.50938929191688},
    CoordinatesToolOptions:>{"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-39.14394658089878, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-34.538776394910684`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "15"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-29.933606208922594`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-36.841361487904734`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.819778284410283`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.41431317630212, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-39.14394658089878, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-34.538776394910684`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-29.933606208922594`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-36.841361487904734`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.819778284410283`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.41431317630212, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {{{0., 
          FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
          FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
          FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
          FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
          FormBox["100", TraditionalForm], {0.01, 0.}}, {-0.6931471805599453, 
          
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.5108256237659907, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.35667494393873245`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.2231435513142097, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.10536051565782628`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.6931471805599453, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.0986122886681098`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.3862943611198906`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.791759469228055, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.9459101490553132`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.0794415416798357`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.1972245773362196`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.995732273553991, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3.4011973816621555`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3.6888794541139363`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.0943445622221, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.248495242049359, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.382026634673881, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.499809670330265, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.298317366548036, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.703782474656201, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.991464547107982, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.214608098422191, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.396929655216146, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.551080335043404, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.684611727667927, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.802394763324311, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         1.6094379124341003`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         2.302585092994046, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         3.912023005428146, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         4.605170185988092, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-0.6931471805599453, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.5108256237659907, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.35667494393873245`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.2231435513142097, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.10536051565782628`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.6931471805599453, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.0986122886681098`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.3862943611198906`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.791759469228055, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.9459101490553132`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.0794415416798357`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.1972245773362196`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.995732273553991, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3.4011973816621555`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3.6888794541139363`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.0943445622221, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.248495242049359, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.382026634673881, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.499809670330265, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.298317366548036, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.703782474656201, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.991464547107982, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.214608098422191, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.396929655216146, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.551080335043404, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.684611727667927, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.802394763324311, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None},
    
    PlotRange->NCache[{{0, 
        Log[100]}, All}, {{0, 4.605170185988092}, All}],
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Quiet[
       Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
       Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
eI38EwotTZfaBzH//wfL0q3h
            "]]}, 
          Annotation[#, "Charting`Private`Tag$581046#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$581046#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {9.398306502016513*^-8, -4.674994781604958}, 
       FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "ClippingRange" -> {{{9.398306502016513*^-8, 
          4.605170092005027}, {-4.674994781604958, -3.143512015296149}}, {{
          9.398306502016513*^-8, 
          4.605170092005027}, {-4.674994781604958, -3.143512015296149}}}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -4.674994781604958}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Decoupled\"", "\"Exact\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
dniStUiup9+TZHedtxmiSve3He2k4KmS/EpDmWbwHLQ9sYLsd8MvNXLqB5qh
WHX0+/F/FDwb0vuUMGqGbUqC+6L4qXjhzuykgEMzKC8W/rUmqGhmtlr/38Nm
2NVo+MZIm4qXtYST+qOb4a9hapP+VVLPMCj8ld+aofnue9azUCpaCyjbZ9Y1
g0lkjU7/Lype+6NT9Xa8GXTLFNLnSH9i12Es/5irBRh/r734e5bAG4U2gTd3
tID1pwtPZAsIdPp4d+qCcgvopUW8f3CMhi6B/vraJ1og1eueJZcEHV2dIpPk
bVqAiDMd3ZfEQI/zX/hFvFtgZeJ2T86vTPQ+mGvPEdECrYfqh54V0fEBtapq
LK0FPIRW1P3wpOFDvm75hvIWcH/N9nF7GoH+s6zA3IEWOMpl+tJ1G4FPW9hZ
8StbwXHkpIngW9Iv5QmeCNrSCsc1ta8dIvnx+Xup5LsKrfDYUIel0k3BMP+9
Gy10WyFfQanfLoiCETe0HI5dboWgwaqIZ0coGGV0plrJtRVkpVY0c60n9dd+
KwWJ562weuTpeHylDL6Xcnm27ksryBPzdvlhMvhh3SPWTFErsCew+xp6kXph
6uWJ9s5WuKFeIXDfTQbF1TW2bl9oBdVXvuetH8tgyNPBrvN8beC/fPjxgw8y
uKbzSXyEdBu47Fd5rNwog/eYe+zb1Nqg/HCL4rtlGZy+16IkeroN3l1LP0PI
UPBKucfK81fbwCFHwJ33BAWPXSsPaA1vg0EZl33GiRQs+OZouC25DZjBitqf
esn+Xi8idq6kDRJ5PvFpiVLx49m8/pedbbBhlWLtqrNUFPt45XPLfBuUftI1
53pN1m+R55YIXzv8eMoZOT5MRa7/UtXOSreDbfDjhLXqpL8PM+Z8qdYO8vN7
WIMxBE4OrvzdfKodbnq5ZV3cRkNzpffBW6+2g1VIH1KSadj0QO+csVc77DY8
3K3mSke9hmnJ8PB2MGTFzSfnMjBPOnykKakdDhVqP/4Gcrjn1oGULSXtIFZZ
zNERKovxhf0uRp3twDrPXhrHzUBRIX+NsPl2uFMeo2Kyi47F8mEco6s74MbD
tY0Po2noZXR18NHGDlI/TFz2VKKhmsf+Mtr2DpjvXM62IPXjfNzGxF/UDiih
ueqtjiIwqbIvyGZPB4yukrCmXSHQZuGr0zr1Dgh/2N5MVSRQasfjsx+PdIBA
vemaPSSedmiZ7Nc90wEZXYb8a0ZI/2KrIDlyqQPCMkScs8qoeDKUk+uRbQfY
HvoSHZZMRR5sHCbudMDqVNEN4q+oWNT/sbz0fgd4Gb1sHfKlogevW7L1sw7Y
Lqm1JYbU0yp7TzxfG9kBm4zO+/DbkPruvJTLh/gOaAyX6WEzJfnRZ+H8f2kd
sM+yz/S4ITm/n36pD+d2QOfXDYVdx6koVRcp9bCsA3ZuaqVGk3qqY8l+DdFI
1sf5pbTff2S+OzXHSno6IMbG/kQAGZ88srnKaqID4tdmCn4l3+dxHEld87cD
EhwGctbrk/m+zHkRv7oTUuz3sCLI/TwKAu/qbOyEFVqnjb3JfFRGLpsOiXZC
wcH+8q7/57tR6ZAftRMS+HCh25nMd986CnVPJ3i7VcTlPaSi1cX2dSUHOuGW
hCClmOQryYdJE5ZHOuHdhpdTp9Op2JbkXcN9phMOS1/x76+iYmiTYUbcpU64
k3nmuwjpz/XZaC+1bTvBcPY3z29hAtdTl+8NunQCX4b8kx2HCCw6XnXR934n
9NP5Z1NuE+hxO+Yw5VknrDIXVunLIFAlyokojuiE9bT6H+c4aThb9B+vZXwn
hFaYrZa7QsMvE6IsrrROSLomvP/NIA2thKfq3ud2Qjtflp/pWzpK7v+RqVXW
CWO++1VFSf/ZZhEaMdDQCc562o9OohyGBmi+d+/thBJLCyV5Tlk8/nU6cctU
J+xwMG1Z60LHNV1vspL/dcLaFnP2mWAaFqw5/kN3bRccFx7ErkkCXRWWf/du
6gKNulvjrbYEKp5NaHCV7IKhbKNDrRyk//Ey7tok1wXsqjf+rYqn4ocE7pEv
ql3QkTUsoX6Gipfq0me0dbrghtCDh3/5qCi6fHm563QXnGqS/O9qOQUbpAW4
71zsApPHEUbHST8YeCyPX9C2C9ZVgmemMQV1b9uKfLrTBSl17dMsaQpyvBGV
OuzbBWt41ETt5mTwe8kv2Y7gLojTz7NorpNBJ5az0u03XXDTdWl7a5UMyotQ
NPg/d8FdzqH31DYZHD5Yr/shqwusH43817cgg9FXvU8fLOoCq4WNe9kopF4O
UTBprSH3f+q4tvYUBYVzOi1vdnYBtXnVgwJSf1f1P3HgHesC1+BzH3Leknyr
NOJzYHU3cPBOdk/+oeA/07CApo3d0H4n7EIrlYoZflphDmLdsOmC2dTh81S0
T559u47eDQcybg6UB5P+oiU6IUapG84a56lokP3Vx34iXU2zGygJvHypAgRG
0lfm1ut3Q17B+sLX5wk0PP25xPZCN5xJtMiWSiKQ/965Gm6bbqj/Zdd3h5+G
v2LXtr1x6gY3X8nMai8aeld87d/n3Q2r8hd2mvPTUW3BYrLmaTcYxNoe3f2b
jvM7hBavRnQDX2ByRe8QA5N0CthXf+iGD6qWrNtpTLRxsOd5nd4N2UlXmUsX
mCj1UkxYqaAbhn0tYmZ/M7C94PeOqopu2JltVnWng46ho3cI69ZuUBF87r72
EB31hYjd7EPdwC/x3Fm3mobroFHt1Ww3KKeeSS91pmGhxX2tPat6YMLs/IMj
CjR0C9itX87bAznC9hdF5glU+tptfEWkB1yU8hY1C8l+63x6eSWlBwaEBEUa
wkm9vmb/9bDdPaBspWlpf4tAc4UxJwX1Hjj7zCpysyGp586+9Pil1wMP2feH
8qsS2OCl8+iycQ9sVzkYUb6TwMCE+eB/Fj1QvKTyq3sDgbp17yKf3+gBnVU+
H/6sIJBz+WQc070HXmRq362aoiJKr0ouftwDjx3PHFDsp+LtY4nZZmE9pN7f
NcRO+gX52xcKF9/1wEWu3otb66k4ErW+IiiZ3I932y4L8n7flWQ10rEHSmsb
/JvLqWjCsuwu/NUDK5/eLrIn4y0iwqMXGnvg+weGMKOSitUHC2fne3uAs1M4
RrCW9EdXb6wInCLP63GqXbGZipoh4muI5R6In+Whf+6mYsXeWXXftb3wuTWG
bjJGRaPGYpf+Tb2gY6wUFLJIxR7nVymHJHshZ5jV6LOWwKsidqNvmb0QwV0q
d4P0x7PfDkqxqfaCdey9Zym7CHS7IHzBRLsX9LY88k3TI3DNypHn30/1Qrpy
SjL3VdKPvcmpEDHrBY+68RfWAQSKHnzG7XKtF4xZlz42fyXwfa+5eqNzLzy4
frY8a4hA+fvKLnvv94LEkWYFrp00zJbhSQl+1gv3ojOrv1nTULOkc4QV2QtN
x1p+xObTsMI6daf+x17Y8seSU3Y3nfS3vue/ZPTCYERzr3IlHbs/nX3O86MX
1Ne9iP+ax0CbY8wKm8pekJmSL5sxY+Ls5Cru0tZe8JmeyVoMYqLbs/oDlKFe
UFwlw7cvn4Frdn9wvj/bC092sv9UiadjUJ1rci9bH4SlpXMR4zQUddIf0eDt
g5VSYeEmpqRf3Cy1883WPjAuYV80GyPPk7VwboVMH/RHXJakPiYw+2xZyPld
fSCoc1P2FcnXmv9el2fv74M8xQ/PAkfJ+4m8wbX1SB+MC6qIT8ZR8cwBrQO3
z/QBXGKMHCD5qqtrq3P95T5Ae9HsGwpUtPEaT9pt3wcst4WQb6TedvsZIjnl
1we17G6uEEnBNZZW544974NlOzefMAcKBq1RC/n0tg+uGLdb7NehoOjHDeXr
vvTBYRGbInt5CsYe6V1tnU2uZ9rGn0nGzPGM/cVFfTD1ab9RF+lXMwMe3Zau
7YOTOmux2YCCB+VNkrw7+6CjS3Ek8R4Ff1crDHeP9oF4ifKicyrpBxxXS6r/
6YMCn8ctP+so2CXUfPY1Zz/wxvow3i5QcOaMx++z2/shncO4MfMgFV0XT63O
Ivohyvx1lgWp/7leUfZvVuyHuwe+jDwg9b9IR0Vi7bF+yK+23xU7R86Le/SQ
wrl+WPncrC6KRiBTwkki0LIfBj5dGhI1JzCz4L+zE479YHZGi5OX1H8a5tuD
9Tz6Adz0eL6S/fZrNavso38/6A93mg0q0vB0XCHn2vB+6H8zf08zkIYdOmFg
GdsP7GssA2f+kPw6ctXpZ3I/1AdO6y7fpuP04wOJO7EfvoRE7a4XYaCrrOCQ
569+yNHJHs1jk0WuygHxroZ+EFdwtOPWZWKgfbbx/t5+CHg0eKxGRB5FBAKC
Iib7oWchX/nNOia+S71Y9nepH+KvzpuFdjKQabCX03jNAFALx92XpRn4dX4N
fBUagLdl3dknYuj4Vy/ug7r4ALRukvjy7jCJ3zGHhX/RB4BXa1igYpHEy8Ve
r1NKA9DM7ZmYkU3DvONek20HByA6P0VF+T4N2d+Ln79ybACWtVYGwxkaHv6H
JZPGA+BlLGB4Wo6Gficv7HWxGIAFgWv7HHhI/ohfesvuMACSzw+4lY8TyLPy
JZ+/6wAo3RipqK4h8JiB8t1NfgPg+V9P9ppv/8fPhsHXwQNAfMvN3fSewNpV
t05TowZA/OU+amIwgcJGgvnJHwdg3JArL9ybQKMvybKqGQNgEqSXF0vi9UtO
/ZeF+QPAJ20W9MmawLazE1zHygeAc+dR4qkpgWLJ/o6NTQNwInx3yZ4zBJpx
07vM+sh8IhlbH+kTGH2hVG9kcgD0gx08PY4Q2J9qmeW4NAAR+SGxvDoEUtdx
ySxzDcKwZ7sQXYvU02bvgh4IDIKS4MKmhsMEfso4uJJfbBBKyh8+26BN4ARP
99VwYhAcZ423tv1Hzvdl9ybJvYPw8PwlHs1jpN/M2n74k/ognA36r+XUaQLT
NnxP3qs3CJ6/cmxESX5esDgrlntmEKKclxJTLUh99/3PI53LgzBnd9FurwOp
pwReLFTbDsLUMLd+oRuBaLXX/NydQZiVTNJ6TOInW25tVd/9Qdh0/5Zn7hsC
D266AbbPBmHf9WKumHQCfa7yf1yIGAQxJ0dDv3JSX+Z/EfaMH4T4S0f9Gsl+
X7vlqPe6tEE4HkAkbVpDQz3b0cng3EHY+PFt/SSdhgGFD89vLxsEf/r34iMG
NKwSoZa+bxiEbd6P/10i+0XAoWivfM8ghC45vJ/MIeel2Dw6a3wQ3A4ES9xb
RccX2zk2HFocBFW+z2ocp+nY4vj27m/OIRAcq7q7+zsdRX8dGDLgH4Ila2WB
TC0Gmoh3nO7cNgQBW2X32fLL4hsn13wryhDcXLUj7D9VJvb8FmFO7xqCEsWr
BTUz8ii9M+vl3f1DoNZ5dfjZRiZauZzhXq07BHsfSzYlFjHwY+WcY4DBEIgx
xriHWXQckw7p2nxxCO76jewSPUNHpuuuo2+vDUHtM7VirzYa2tdUZdGch6D/
M4/6bScaplLtZNK8h8DDN8k8XYyG8268wfB0CBpb97W7VBOoXJ+wsvjlEIgL
514/7U/6S7ruNf33Q7D5UKtG+FECv3sONTUnD0HlAtduYSECVzQ9OHw5Zwik
ew89HOqgogZTOmWsZAgOHdd/ffkzFX18fog51ZExb0kPmzvpX1ouPl7ZNQQi
riOXDU5RUdf3tbnAwhBob9s61MxORf+OzQshHMPQ3rTd3amFQvL5s4eb+Yfh
mlZGB3caBfmfrBN9KToM9E2lXxZeUPBEn/cXUWIYkuRzxjKek/ivuqwetXcY
mHYusqwICtYFOdVKHByGnaknPm/7QurZkUmLd8eGwcTRJODoLwoaaVj/kTk3
DOUdl93uzVDwZVjPow+WwyAfZMnWT+rXtslz2xk3h6FsftzjuQ7pz7XrE794
DAPMy1YnWlPR7PWxgwpPhqEx+4eDsT8Vo+eK61LDh+HXSNwxTCL1rJ6GpeL7
YeBJ/3tCoJGKlku7/VVzyfP82ZzoT+J5/MnPYlg2DCWbFl4bGxE48kEmWb1p
GIxXVKhde0ggY9WbQz/6hqF4jCP2NBJoa7S14TBrGFoXTnf/XiD9cmKQVcny
MDztPbmujMT3aS6eJd11I1Dluvfaa1ca7jG5/6RceAQkDWgN4mU0dEpfIa6/
cwQepOgEbJCmYyaPc0qNHBkPhLzJCiDx9jJL00BtBHps3n+9t4GBat9sGht1
RuDoyYj0qHQG3hPosz5rMALMmbQ2thhZROsL/9oujsBBJQvWh3gmsuU3BJja
jsCbgo1Lc+NyeHCLvkTPnRFI8+5W1NvPRB+70lRz3xGYK/wpwTSUxaKig1qD
wSNgKDNWWPOW1CNi35us34yAhbO22mMJBure2nt17NMIvFO9/50vl47+v78s
22aNwJiZUwfLjo4VO6mBrJ8joCNzasmVSUf+u28lb9aMQKurwS3FBRqerBFJ
n+8YAQflzxHNxTQMJkK0XUZHwOrp6/mG1zSs8+BtWVoYgd897x3479JQuOnB
NTfOUShJvp+Qco6GRnJsK1dtHAWWwEev7eo0fPnA5Zn39lHo//VIrZ5Cw7b2
6Z1ctFHg27Mh11mAhmJ7r2X4KZLPDe6OZa+koZl/v876Q6NwQGVulQnpJ6N7
TVqfHB+FjT+HdOW7CexTabrOf34UzNhav6+tJ1Am6ARbsNUoOG3kVvz1i0Cr
4V9Bm26NwuvYOXmjAgI/qGtKh3mOgu/xcxVRJP+MvMj5KhIwCkPDVuJBpJ9m
TCrqRr4chaYXJh+kUsl+0Upq2xE3Ci7O9Rwnksl+iSTsolNHoXNT6BchMp6e
jV4lnUfuf9X+j30KgXv0REPifo/CinM5666SeOsU81yG1jwKD03VBHmySb3x
ly/rU/8oFNuIB17MI/DvCb8jctOjcFA/+Me9EgLVPqzqSF4xBgNN/GecSb50
Y7trv2f9GNQEUFXtOgjMPTPL/nXzGITs2dHgS+rH7MvKpeY7x6An7PDaoiWS
T+xcnwrIjYHsws0iRV7S/9/NM8hTGQPeb0G7BSVoGO/LKWqrNQZjtgf63yrR
MDpYp2fbyTGYZ/SVq5ygYWSUf3zphTHw1+is0LOlYVhCle1t6zGQ7E8qs3hK
w6CvQnulb43BIQGTrP3pNPT/YbRU4zEGZgN2hyu6aPigMiLfw38MqIK841cE
6ejR2uXLDBuDgPH4bSPH6Hh3UOpYW8wYfHZSaZIKpaPTjJXQo8QxyLMOfPhg
nI72Kz+3KH0jz7/KtTntPKnH17Pe9BeR+fCEPYubZqD55r2WwTVj0Bbi8DOs
VhZNdrrIanSMwYZGiS+ShUyy33JmJobHIHT0vdSuODk8qboqO2JuDKJWKDy8
K8nEo9qHPXRXjcPLQ4cyO4RlUefUQ60/POOQxsG+z+MUAw+alvO83zIO/t+8
RpbzSb10dWPtKalxcPnJ8VbzKB0VbxuEr5IfB4NV91YajtJQ3jvcNFF1HPYb
FP2LD6Uh7Wm79AXtcQi91tPbfISGUq8kxtadGgfOgy+dv5B8uiPOIiXTZBxi
b7ZlvSojUCT1g/MVm3FgrVn/1ofUO0K54/uFnMZBVkQlKYTUL2sab5XZPRmH
rYI6PwtWEcjem/Vse/g4RHy+9mOpgYrLE8tnyt6Nw2BcZ77n//9e+ldDzCVp
HCiX2//w+1FJPHvQJ/N9HKyKfizaX6bimMCvj3XF4yBszX74hjoVB8T4HLxq
x6Hx0AXXMTHSP9BOKsl3joON3pFXZ7ip2KoYutw+Mg5lfArTihxUbDjY8uPx
/DgEXVGQerKaxGMZvsJtbBPA+XvhvDMfFc0Z8nHTqydARsrw4llyvYu7Tj4q
XT8BXuOhGwf2kn5V+eb1NxsngOY49kbFkIrn94fq3948AYetOkSEPaloqNsi
LL1zAt7371fzLqbiKf1/i0vUCWjL+3xUlfTL+oZi7TXMCfBb5ripyEn67UuX
YjxUJmBFwrzBHVKfaVv5PDijPgHP/BQ1BW1I/2T73pqpNQHNd1ZZBj0l8MCd
Ebm2ExOgtrVNUpPEDzUPHsHUMxNwmjj5QYSPhioPmPMPL0xA9JZEC+p+Gir5
6zebXZ6Am/cMxv46kHwQdOO7kvUEJJ2cr9L5SEOFsJAoPrsJsPx15BDHEA2Z
rzO8+m+S+b6+9N8NBh3p75osvt+ZgC3t/IbmLnSkfvyrE+wxAX9kFXK8q+n4
5FriD70HE1AYpm1WqMjAaab5fi7/CWAOq6JFMgONWFuycp9NwCH6O5uho7KY
k1q+2+XFBFBbH7zQF2SipJPXl12RExD3O22Qo4KJfspKxFj0BNz7kaXLWlTA
8b+jMbHxE2A04fiVK5+JJ3PeiJl+mQCLzK7Sb1uY+NXdIHxL2gTMMu7lvLaT
Jf33OqGarAmYk0gYfjDAQC/O3IDHuRMw5bLp+dw9Bg4WOa49/HMC1u5oObqD
xkC9h1SfFWVkvQXmlJL76JhypH1FZtUEuHR4yPd8oONmviAXhwbyvreMMtRJ
P+RapTVLa5uAx5ZCwTuOkP47aMm2r3sCPsqdizwuRUctg6ThyMEJ6Jd8mDBJ
6sVPmy3Mz4xPQKaTb4JBLw03tmzt5J8h7/tVx4oVJSQfR1QY//ozATVz5pMe
iSSfmHjXea+YBC1Hiv/jcBpqSCgfB85J2NV3P7mF1Kfve8dK59dOwqTvZTel
mzRc//6tZtKGSTCl6+bdNCf1npVhrvWmSRDiqVl33ZCGDbT1Kju3TQKvtY/O
Kl0aqo7nprWJT0LSwZSYzQdo+CbxplyozCR0/aeU9HIvDbluEB+PMyZh303+
ImdZGl7d0yG1dtckhFZd8IyRIfXyfFBUgdIk/HV6Z7qBxOO9WdoirjAJ4vm2
N1NFSX68+y9k76FJiGfwKzzcSkO2/ckbJnUmof+fv5r/ZhpasF15FH9sEvwe
vTDOFib9VoHI6kunJyGEz8hYkHwuf7/SfdvZSXByNBYJ30LD59o+f+tMJ+H3
3JPg49to+HftvlsBFpOwgW1uVG0HDU1/j09qX52EEVW+N9ZSNCwMiLZZ5TAJ
AorsX7toJJ6dONOf7TQJ99P11yXtouFTQR6zm66TEOjA9m5IlYaz9Xktsl6T
ECnSphylRcOzYbcMBn0ngXrIvmjsJA1zz9Kq3jwh63nO13TSjMTD7Z26Z4Mn
4UDSQcUyexo+7Az+KRg+CYm85osJXjSceKujXv56Ej6vFH5XROLpafPl7Afv
JqHd0nvi3GcaZsmk7FX/SOZzySD2WxGpF4avJC0mTsIWrpnT/5H94ZOwjZ6a
PgnBLSnzXhx0HL5eFXvt2yTcLL6Xt45Kx2Py98Vl8ichOuvUmowTdEyd3veq
s2gSeF6I5r7zpOOW9IlN4b8noW7JVM0qi45ut2MCT9ZMwqDBRar2Eh179xmt
52mahGa/Yw45ugzU+cfz4Gc7WX93vZn7nxn4BfPZ3HsngX1LS85GpiwKejrd
VR4m63nqlcPXHll0PkSfZ02Q99vmv7Leh4kXHpRzUOcmYbeZhkt5qjweLLXb
aLJEnvfbGMs3m4kUHoEdIaumYN70AO+eQVnkOZ7G+MU9BZLfJu8lsMsi65mh
ChvfFOS1UwwPmzGwoe6PtqLQFJQ/lb2j203Hb5tfGVwTmYJPf49su+VMxzdn
4XK0+BSsD14xUClGx/uRnfZNMlOgV/bi+oEqGtp0ebrxyU7BdpPKXMlHNDy+
U8pfc/cUhH61nUgi+3/PlaLwO/vI7x/YXY7lp+HWD1ZxSQemwII2QN/YSvqZ
sXXpA4enYHGwY++BDwSWOByvOnlyCmIeXZIqJ/3v5zRWu5/RFFgHHuMzlyYw
aCF4FE2m4OzK5yZiKwi8raK4OGs+BbHrt5/MbSL54V4TF/3qFHRe2LQsmE76
o7w7QhcdpqDI2+IQK4iKMhzbJV/cnoJd+cXfu0h/tF4rV6783hT8u3Bt/PUd
Kk75XQQOnylgaptdk71LxfoyjiP7Hk3Bdcr83AuSb7L53hvZBU6BeV7xjh0B
VIw6oXMlNnQK2ENkGepvSf8VMuLYGkHW49VFq5/fqGjd6O+5MWYKBjRprF7S
rx0TkXuq/WEKvHY1KDrwELj7QnXEvcQpaN0+0KG8i8Atbxw/pqZPQURovfDg
cQKXezZlDn+bAve+ntAmWwJ7pDN/7iiYgv9yHu2RJfnpU8K/rscVU+C2eWrN
yzoCn028nsivmwLfM5J5/H9JPamg8W+hZQrEY2bkEkj8UP96f7P5IFmvpGJe
b2caSv+lSL8cnwIrPg3ex/H//335r11VM1NgdDGDzZj0s5Pu19S5/pL7vVvb
FCNEx7oCvmNqbCywS5zUuXCSjlmrk8/d4GJB39renRWkPnutc8o6nocF2/g+
iBb10tH78ZxThwALqm1437FUGWhV8cJHaCsLlBMTwTOGgUc3qgTp7mCBzoba
i88lZHHX6bYoD2kWuLppZrT+kMXNL9w+Z9BZMELblk89zcR/zeLfxhRYYK38
F75JyGG36I8SSWUWbFkd2dL1Qx6LTC0ajPaz4IPsoq9mHRMTorn7AjRZsMq9
26R2HxMD+z+wCnVZcNxn46Xv32TxFlVv5ZI+CyKYO29VKsni2asTPApnWKCx
RrLDsYaBB74EilheYAGK0z/XezBQirWLGnmZBTcsHXbzAQPX7qnfW2vNgigL
J+nHHAyccLp9aK09C9S6rHUWSb6uy9p64oATCypjk5Ny35P1+vfN5JYrC14O
7Hyd5UH6v/BDXBpeLBhlbeSWv0jqR6Wyzzx+LCj6WKUyoknHe3UnDZqesODy
b0dVNzod0aHlX0wwC8I0vJT+//8MbBsuvbMLZ8HVNWJ2UyvpqPFp+IhqFAsU
pHWfnRinodd/DjNcsWS+Bzk2+5P3WTjw52XNRxZwr1886lJOw9U+HgdfJ7Fg
MPJh559cGmpJrBmxzmCB8E6H5MlUGvrh02d7v5Pr1zis0f5Aw9Jzm/etKiDv
Y/5s22gU2S+Lr7t+F5Pn03h3ouIFDfVCZfzCysn348T1uwNp+GT3FznzWhZ0
hEfKizymYUXV3ka5Zhbc+jjqav+Ahhtsc9yWOlgQ+YIjt53Ec/31h2WK+8h8
r/Scv+BB+of43+VBIyxYc8fafcyNhrWHT98ymWLBm47tHI/IWKi3VZQ2T9aH
b+sNRXcaGnpcLpxbYoFN6wDXLPn9i+2jV/NXTQMM2mcWedOwKfuG4BPuaRBz
dzue5kvikdHfbCPeaSjSzn9Q6E/y0ZznJSnBaVjrM6q4KpiGEUFr101tmQaB
yqlAp5c0bJd7lvxNbBpubjK33h1D8kn5FmNfqWlgs/oX9h/JN2Y2b9hO0abB
70bh7YpMGr7lpsaLyU9D8tT9O60/adjzLvH4yN5pEN478i+gjoY7DyotpKtO
w51jS1q8/TQ078TXnhrTwDHa2eNJ+un3rlpaR7WnIbR50UyCh46DWyvGtxyd
BsZCTwZ9J6kPvxo87zs5DUIhlq6TanS0Od2ulmQ0DaxMG9sKYzomsMz77ppM
g37l9fZDd+g4FjD2WNt8Gk69oWydeE1HWcbN3YI20xCf4vYlooSOtqVLLR12
06CSsbLwyh86Jl3x9vp4axoGtPa0VMoxkMWxnuZ0dxr+fGpK43Zg4K63QdUa
ntOwaBeZezGXgTf3i7jw+k4Dv80dUV1xWUxvfSve7D8NhbkyXl6RsjjvTJS8
C5qGuIeHLXOkmKgknGxnHzYN1S73nmgnMdE5VXmz2utpcA/gbGsTksds/Tzk
fjcNOUv/XONPyuHSuPaV2g/T8P1I8MzWK0xUe1zJG5U4DZV39DaINsiiG/VM
uk36NEhInlzBT5fF3J8d5xW/kfXVmFNzjmMg2+UrnOz503DSH05Nk3ikwTaR
UF40DRH+MyUJXXT0irx1Kvw3ub96xCqxZ3QsVFn+a14zDd1ya1qv69JxdZNP
tHzTNMS8e7IzaR2pP2/x6P5rn4ZgBl/NI5IP/QRCWMW906D2WK+D7RU5H0dj
1E0np4HOXpQzqULDMpstd+PmpqH1smR+w3rSD/s9SZ9cmob14vMmEZ0EHn3P
PqXEPgMCZQ2retIJ5Cu8TfNYMwNT6TMvzwYQWNk9Zl7CNwP3vE8+LLIiMHDl
pSj+TTNQETgUPaVJ4Intjc1G22Zgnc51zk+SBAqo6gm9lZiBujpK6MM1BNYa
5R8bppDPs7cM7F1JYIiT4kMF5gxQzqh1Fv+lokFIwg+XPTNQ6nZ1SmqJisIp
4isKVGbgwA7qdQM2Ahsrnyuv05iBhVtpZ++vIzBsfJ3jSe0ZCOa4WbpGhEDj
9R6fXx6dga21OxPM5Ui/SswN9pyagUw9LRWTIwS2atlI0s+S738fFNhkR2CE
eed5R7MZUDlB1ZSPIPCC1+kX367MwOqOAKMcJFDsTWk1x/UZ0Oxs/0prI7Az
Zz+PnuMMxP8bV2wm+e1Na6pWiMsMNNw1chsSoaHk5tffpB7MQL+q1q8CUxr2
7hGcv+Y/A+9aIn+O+tDw3Uk/+fSgGbjWIrRu7ydSH9sv2yyHzUDExZWLg/U0
lAm4EXs4agY+T/w2MmEn5y1hsPNJ7Aw0zZe8495Fx/jS8yINCTOQx7813d6C
nLfB6tNiKWR+03yixyNJ/7Za++mVzBkQ32QbEdRCzpvk99IvOAPXg0Z3eIqR
ek9dgXOhkMyv7VlFvw0D7Uze7z9QNgMZf9I8LQoYKO+6zcW3mrwv/nULkgSp
18IDUysbZ6CNd9cnyfeymPJ19cTmjhmov/Am+IokEx3r71DN+mZALE+phBrC
xD0zk5fiR2Zg6FyPo+IFOZzjt4icmpqBB0YcEd93K2AGs6VReWEGzPPbPfdu
l8PbescFPJdn4ORSs0aNOxOVbQr1SjlmYe0J8cQYCSYu+u7z3bhuFlrXWtS1
58piduyXfGP+WWBvlNpzxVgW7/7Y+e+t8CzcDzBgtHHJolp3mOKI6Czk6HKl
HCTPs7yCz2HXzllo7ImbWvJlIIp6J9whZsHoldK6LwYMdFf5018gNwu7d3YP
fSMYqG50XXy94ixQN6/4t8zOwFVOPWdPqc3CyeorWeHkfBYEn3n+6uAsnH3q
uHc4n9QXyb8re3Vm4dpzi4yrJL9qVmqsYxyfhSjb8GffnpDzOp6hedNgFuq4
0//zJf1k0TqG+/dzs8ApXZfnf5mOvtS3WZyXZuFSoVfpc1Lf62gJz+pZzYKk
d1DsLQ06rjV/zHxuS9ZjXJnGvZuOvzzZrNtvzkKXxwtjugwdH0fdipG+S64f
ef5EiQgd9XJG2q97kvkYqzqX8NPx1ovpxDDfWZhornp6YA2pjxz+ev54Mguv
aDJvx9noWHyE/fRE8CxU5jQoFf+l4ZT0OpmtL2chf+gX/cccyU9sAn8OvZmF
6zd1r7awaHiwZesv2/ezMDT7vYZ7kobX0iQiwj/NwvqzBL8OyffPAwjbwpRZ
UCmUfBY+RkO0UlCfzJyFYq8Td/6R8dDBfQIiubNwsU0p/sYE6Y+3a/Rp/pyF
PE3VrJXk+ioLOhl2ZbNw8I25xIdZGl6u1vd7WT0L7/C7jtMiiVcJRmd/Ns6C
rEBiuj2pN9LvmzGm2mchst3t8DsuOnaYWq3Y1kfeL/3jrR0b6MitYl91eGQW
5EtlCma20FFeyDnafmoWCk43blck/bvxhPvNV/OzUMUI9V+pQOJvia9W0b9Z
EM7hHr5+gOSv6KdbWOxzMKPv3PfuOKmnXF+MbFs7B5Lq3AaVpF5acSbqu9aG
Ofjz1WxS3ImOFIW4AIdNc3Bwq+iLJn86qScSzSK2zUFqYPSDQ2R/3OnP2FUs
MQcpnB0p+QV0jMlFzmnKHBBO1HW/e+j4O7yoQZQ5B4c1akKWuRg451gRr71n
DiZFuZQl5Bkodqzhzg0V8vvb4/u1TRmoTe3Qi1Sfg5wjQa+GnjPQnn1ArERr
Dtzebxrc2cDA8LbxqWm9OWh+O/aKuVMWCzLmCrafmoMP/wW5qXrJ4mjgcoiO
8RwsjhSkBPyTRaGrqy0dTecgwo4yG32CiXCYd99rizko4bvdWtjAxCs7Nq0v
vToHV+vObEjZKI+Bi6LtMw5zYFq4x0UhXg6zaqUSxZzn4HNbcfJ0HBN7PjM8
/3ObA/QtuSVKYSKP355TN33moCI7vLzmjSzuvaQmHfVoDvhX8GpmiMiiiZrm
QmngHFDa53b5kf7UV1ivdDZ0Di553H4scIKBSVOnXu2InIPBZYWDUWwMbP51
7rpuzBzcHT72fR/pf9ljLx+49WEOaCcKuwZJ/0h3v7rxTeIcnLIsMdLaT8fT
xo69v9LnwOLIHraT5Dzc2303fe4bGfvc/KfdQOodXm9f8YI58Im6wxsUR8PK
wUfGR0rmQFfbojPrLg3/5AfRnSrmwFdUKMjsJA11naIry1rmIF1020YOLho6
6n98O981B5usEpof9pD8QktxlBicA1GGjt6bPAJ/cmYf1hufg1iHpR3ibwic
6MjffHtmDlzitlCCggjcnFU6/HaRPP9Rf8f8hwSqB1d/+71yHlYcUd7d4EOg
zfXmJwur56ErkOd6pjeBwdrdppI88/DWTJty5QHp31wryno2zsPsxjDDS/4E
vk76phSzeR4qA0NHOp4TuLM/PubydvJ90z0aAjEExm8N3SC1cx7W8Suk66YR
yDzmfbePOg9JX++0zJYSmOplP/iOOQ/jQVd3xPYRqPz1wimLPfOwclNancxq
cr5HdXOlVebhfWbZfyEMGh4SV6YPHJiHB2faDHSO0rDktPSL94fnwfd1yUyw
Jamfc1baUU7Mw1d4mnqY1O9G02Mtg4bzkEKr1mj7TsMOmRat+PPz4Oclr17Q
SuLF0zQxwmoe3P7w/ltP+n/bwrePhq/Pg0pwsWoxiY8zfwLmPzjOg2JI1Q4f
Szo6y7pesnGZB6kNz/UfPCXn85J1Bc19HrwKPGXEs0m8DjVUGfWZBzrt3OGv
g3RcU3bofcKjeTh2ZhWzbAsDA1YqCFwLnAfropjOFccYKLhHzI0ROg/Msoqr
FD8GhlmtHxl7NQ/dLev7L5WQ8xj5x+Dz23ko5T9H2c8vizHV/fnX4+ZJ/hsq
mL8oi1SuWlnm53nYFecSO58ni19U8sInUuYh4LJGotUWJu62+7w6MZPM51rk
cI0pEzNjXjrYIVm/jc+sbfKYuL/Jt12ucB42YJ+tppEcFvLc+m+qlMzXnv3e
q0F5/E/jUnpS5TwUKAix14zJYcWt4xIO9fPwmxUbqywoh6c/qj1RaCX75aLv
34a3TGzuIBZZXfOQvyOxxMqAiSaCmy1SBuYhqkl9SFKUiX3anNU3xubhz5t9
xoc7ZdHalaW2e3oezmutPLUvRBYnkjriZxbm4XB7VuL307J4s79MKG15Hso1
P+3hEpPFxa1ZHjc5FsD5Xfny3gkGuh17P7Zn7QLQVIYrFn8wkNM72GiObwF4
YxXszr5m4MOvHoXpQgtwpC+vKtKVgXxj1+WdRBYgcz7p0R4TBoaIn4tQFF+A
nnju1s8HGShioLNmQXoB3G3wVSLJ11EP9978Sl8A/RbRtCkB0h+jZNdthQVI
5jhN3buCgR+nN+gpKy3ANr/i/UdG6ShHWf76R20Biv5qm68l9VHauZGdWQcX
QKA8NFTvFx1VAhufuugsQE7rYbmFb3TMLSxc2ndsAX62Lc9OfiH5fTHZ8u+p
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
cr42b5rccJLL3cPlIUfvc58PSE6TS/L8uN6iPFQT4p3iKjdNTgeou+d85qKF
+5UUlytOk8ebuHeuPOOi6Kyhuqll02TrhIis+U08//nnHJ5oTpMSr1aJLCni
olUV3v+dI6bJ+T/9gr+nY73VpJQUoT9NrtbfZHkiloumHw0tMjeaJp/I93T0
beOiLf3namRNp0lm6rm6Ilcuav7obfPJYpo87PdW+pEF1meTSqO3bKdJ02PD
vsarMf6yh/cddZomN8Z8bXurw0VvZYukfTdNkxmba0IvqnDROg2fyhVe02Rn
wCGbeFkuOm+gbMnynyZnXRT2uIph/WIxPNQXOE3+agmUUmVyUYBr0e6K0Gly
8Inw78E57Kf9fSQSoqfJvgz92HiMZ5pRylcc46bJ0diDnhM/dVBG8vBa1aRp
cvigxIX1X3XQzoVHQiJTcTwJ29WXfcL+vdTozO2sabL41IOPX8YwX+p9vCdx
cpr0vGqQdWEU8/Od3B8+Z6ZJp7wIig32i9+dzBSuFU2Tmf5usf0jOqhr5IcV
5eI01qfGYa54/3rEuSj7q9Pkm/n8imb8/Ukhu6KC69Pkia0KxjIfdFD08anH
nxumycg0oyN++H63pZf+GbVOk3ERlsnlOL5VNa7LMu5Pk0WzQRl/fmH+Xyvs
0N+Bz7ekdVhPYb3RdW2vZvc06VHS71CH/djrrV4XdvdNk5WjAjNzES669UP0
+YOhafKezlpzlhQXFSQ1zMqMTZNf/wtqEVPiov0SAZrbP+N8iXP9wrW5yLtY
yrX25zSp0Kz70ArXy0RwO5E+OU1+37pO/boVF6m0hVY4U2ZI7Yj/XF64c5GQ
o8KrEsYMueOs4YLenVz0bviR8E/RGTJIdqDsaxIX3QvbTZhKzpBrHax13fO4
6AJV3SNbbobc+km3wvc6F6Vmdx8aUpwhp+nCCoG4PwOVk2p4ajPk+LBBwch3
LrK+xhuM154hj2iai26X5iFtkzecJ4IZcnC9hko9yUPznqXpy6+aITcTES+G
dvHQF++VW4PJGdI3Kmu/JcaTp99GMxvNZsjn2ipdf95h/Z9wvJ5jM0Me7/d5
uFeWQNniJqObHGfIecZNIjIWBAo/90X8ktsMaffcNPx0EoGciLNG/zxnyHcg
bXntOYH0kFWAhf8M+dJ3erLUgY+kHP4ezwmaIdVS2jO9PAXoz2Bpy2jYDNkn
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
TzZfWwQS9ynw+LVX2CI7n0iNds7f/YCC47sygxrf65OMBcFsfyMFS37D93Wm
+mTeAUUdz4cUqCYXyD/uEJPH5Ipm2yPcz5PyuEfRH2+TtJq6qgX5XJ3D+mwQ
E7klbyfWPqbAP2eySQIrJueOHFQwfoL8q1dh9pIvJgvuTuIVPqVgf0vdeJ8v
LHkuVyGj9RzrHSsZ/+MxSwIs7cekt1Fw6dqmgOIqlnCPfx4RdqC+2Z1WJp3D
ktzGqMGjL5Cv24OW7UtgySKBRv/fTgpa6/NMasJY8sKGvN35ioJNn3zvxvuj
3k1wet33Gud1PBmucGcJ3fqjza2bgnGe5zW4q1lSoJTw+GkP/v4SXpDPUpZY
rNVpXNGLeDZ6wi80ZklIuyeZ9x7vuxKwOR/9vN79ng25HyhozFq31xPx8abK
85/SR9xHN57rlSE/ny7oyQj/hHrkuNAnmYv7Kt1z4WA/vvfLwhMjuP8kY3o6
3b8gfzs2b3j6hyHloZ77Hw1QcH/F0PUZwwyZ6uZZfWmQgh1JLsa/+pB/bHqc
Jg1RYPkp2ymolyFRZp6/o38gf0mffLL8NUMWMj2pI8MU6PL4cwPRD31T9zTy
GcF94mji1f+UITkKPW1Pf6Ee5ET2lLQwxEnKM9h8FPH+uXp3XRPyZa9Hhfo/
CuaMly2tvsuQPU+718aPocGs58/hNPRbOnc9hv9J0KB7bvBCdQ36s/Lu5G1j
afBVjLNSvYn7I8/DoFOKBolon44y1AuWp7ufWMnQICkr+/nENdRDUR5B12Rp
0F8daZlZgfyyt1tx1jgaJvIrej6UMcTH16MkRZ6GcInCJ36lqKecu+1luDSo
dLZ4aqGeb17hMbiTR4Pbcc3h///9VMSC7oQePv48RnGyGc6/0VwPxo6iQXb1
tohM1C+f1bqbCU3DqWW1MmKMzws8dugq0BAbxk38exX9wZhuKkORhnmBhy3+
Ycz96n6VO54G4foP6wzw90lX16oQZRoOTf41MxvjoBb3Lx8m0OD812DecrxP
+3ZXzDoVGn5G/p2jifm8LHafe1eVhsCHPx8bY74J2V2N+pNpEJx7Oe0Yvmdp
kvvWbDUaFqtm6yuVM2T0SBdXYSoN5wxopw6sx9Vd7gUHp2F9fZ7wXmG9vDZ1
WQ2o0/BZV/PPNNzfE9e5f3SdQUOl6qggB+vdtKwrulGDhogu6S1bb6Efn++u
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
         "]]},
       Annotation[#, "Charting`Private`Tag$581118#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., -25.282960521083005`},
    CoordinatesToolOptions:>{"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-25.328436022934504`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26.937873935368604`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26.53240882726044, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26.244726754808656`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26.021583203494448`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.839261646700493`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.685110966873236`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.551579574248713`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.43379653859233, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24.635288842374557`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24.229823734266393`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.942141661814613`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.7189981105004, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.536676553706446`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.38252587387919, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.248994481254666`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.131211445598282`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-22.33270374938051, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.927238641272346`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.639556568820566`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.416413017506358`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.234091460712403`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.079940780885142`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.94640938826062, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.82862635260424, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.030118656386467`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19.624653548278303`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19.33697147582652, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19.11382792451231, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.931506367718356`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.7773556878911, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.643824295266576`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.526041259610192`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17.72753356339242, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17.322068455284256`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17.034386382832476`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.811242831518264`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.62892127472431, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.474770594897052`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.34123920227253, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.223456166616145`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-15.424948470398375`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-15.01948336229021, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.73180128983843, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.508657738524219`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.326336181730264`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.172185501903007`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.038654109278484`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.9208710736221, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.122363377404328`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12.716898269296165`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12.429216196844383`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12.206072645530174`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12.02375108873622, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.86960040890896, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.736069016284437`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.618285980628055`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.819778284410283`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.41431317630212, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.126631103850338`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.903487552536127, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.721165995742174, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.567015315914915, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.433483923290392, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.315700887634009, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26.937873935368604`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26.53240882726044, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26.244726754808656`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26.021583203494448`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.839261646700493`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.685110966873236`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.551579574248713`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.43379653859233, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24.635288842374557`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24.229823734266393`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.942141661814613`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.7189981105004, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.536676553706446`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.38252587387919, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.248994481254666`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.131211445598282`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-22.33270374938051, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.927238641272346`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.639556568820566`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.416413017506358`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.234091460712403`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21.079940780885142`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.94640938826062, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.82862635260424, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.030118656386467`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19.624653548278303`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19.33697147582652, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19.11382792451231, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.931506367718356`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.7773556878911, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.643824295266576`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.526041259610192`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17.72753356339242, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17.322068455284256`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17.034386382832476`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.811242831518264`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.62892127472431, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.474770594897052`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.34123920227253, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.223456166616145`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-15.424948470398375`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-15.01948336229021, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.73180128983843, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.508657738524219`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.326336181730264`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.172185501903007`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14.038654109278484`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.9208710736221, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.122363377404328`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12.716898269296165`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12.429216196844383`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12.206072645530174`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12.02375108873622, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.86960040890896, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.736069016284437`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.618285980628055`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.819778284410283`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.41431317630212, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10.126631103850338`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.903487552536127, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.721165995742174, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.567015315914915, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.433483923290392, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.315700887634009, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {{{0., 
          FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
          FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
          FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
          FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
          FormBox["100", TraditionalForm], {0.01, 0.}}, {-0.6931471805599453, 
          
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.5108256237659907, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.35667494393873245`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.2231435513142097, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.10536051565782628`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.6931471805599453, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.0986122886681098`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.3862943611198906`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.791759469228055, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.9459101490553132`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.0794415416798357`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.1972245773362196`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.995732273553991, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3.4011973816621555`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3.6888794541139363`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.0943445622221, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.248495242049359, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.382026634673881, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.499809670330265, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.298317366548036, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.703782474656201, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.991464547107982, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.214608098422191, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.396929655216146, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.551080335043404, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.684611727667927, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.802394763324311, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         1.6094379124341003`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         2.302585092994046, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         3.912023005428146, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         4.605170185988092, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-0.6931471805599453, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.5108256237659907, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.35667494393873245`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.2231435513142097, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.10536051565782628`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.6931471805599453, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.0986122886681098`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.3862943611198906`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.791759469228055, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.9459101490553132`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.0794415416798357`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.1972245773362196`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.995732273553991, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3.4011973816621555`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3.6888794541139363`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.0943445622221, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.248495242049359, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.382026634673881, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.499809670330265, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.298317366548036, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.703782474656201, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5.991464547107982, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.214608098422191, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.396929655216146, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.551080335043404, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.684611727667927, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.802394763324311, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None},
    
    PlotRange->NCache[{{0, 
        Log[100]}, All}, {{0, 4.605170185988092}, All}],
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Quiet[
       Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
       Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.868484473087626*^9, 3.8684844805827847`*^9}, 
   3.868484847092607*^9, 3.86848507400252*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"86820b76-8da4-4d21-b9da-12c5ea4a7e26"]
}, Open  ]],

Cell[BoxData[
 SqrtBox["\[Placeholder]"]], "Input",
 CellChangeTimes->{
  3.86848657938682*^9},ExpressionUUID->"5629818e-4264-421d-9b94-999fdee8d5e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"1", ",", "3", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.8684834337907143`*^9, 3.8684834368555098`*^9}, {
   3.868483470480604*^9, 3.868483485174642*^9}, 3.868483723262211*^9, 
   3.868483856757784*^9, 3.868484072725586*^9, 3.8684842709011297`*^9, {
   3.8684843305856256`*^9, 3.8684843310200787`*^9}, {3.868484444249679*^9, 
   3.868484455356718*^9}, {3.868484772036331*^9, 3.8684847722260437`*^9}, {
   3.8684848382078648`*^9, 3.8684848383768377`*^9}, {3.868485015004017*^9, 
   3.868485015183319*^9}, {3.868485113469331*^9, 3.8684851149484262`*^9}, {
   3.868485433487556*^9, 3.868485437676477*^9}, {3.8684865230821333`*^9, 
   3.86848652409431*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"6df2250b-04f6-40b2-8053-8a064e3b2da2"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.0006295223890416`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 38, 53, 
   31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868486526062495*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"1870289d-e365-452d-8652-ae91eed0c344"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"100000\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 38, 54, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684865260858*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"a3f17629-b9b1-4f54-b2f8-70569f244b36"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"100000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is insufficient \
to compute the value.\"", 2, 38, 55, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868486526116926*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"0496eb51-0076-4bad-b905-2d64c6b1d3df"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"100000\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 38, 56, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868486526120701*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"46942a3f-7f46-4478-b985-3964333cbc3f"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"100000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is insufficient \
to compute the value.\"", 2, 38, 57, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684865261237383`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"cbdc254f-ccff-4a9d-b178-d6b40e13b32a"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"100000\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 38, 58, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868486526126636*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"cda681f9-8b98-4d85-84a2-28d5b926d449"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 38, 59, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684865261294737`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"a826b509-c604-4f1f-92a8-0553748340f1"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"100000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is insufficient \
to compute the value.\"", 2, 38, 60, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868486526132551*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"821f3e0f-16fc-4abb-ad3f-43ac610f9ffe"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dprec\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 38, 61, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684865261366253`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"19087268-dacd-45f0-a495-44b2771616ab"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.0027174393293272`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 38, 62, 
   31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868486526156328*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"4875e294-c131-4a19-b699-a212cd7776e0"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.0051178888325323`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 38, 63, 
   31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868486526184062*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"1394f695-11ce-42cc-a54d-3081fb2d5934"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"ndsz\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 38, 64, 31105401581804409695, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684865261876297`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"26b0a809-b71f-4061-9864-ff3fa04ea324"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
PIBtUhdWOxW4fLW41prnnUzqr2ExDdp2cdQacQHXpKLrLRnk8aik5sIBzqQC
nqX4z/rPXivDDTGTuln+t292q2KazEOZ1INWse/O+RfWeLzmrUltSnQ4sa9D
QU3mo0xq1Lo8wz7ty68l0vI368/j8HCPk+3zaTIvZVK9V0fmZlW242mjnzkm
5d/Z19W9iq3G4yu2ZpX8vmHaxtY2GpdXCpuVjW1I7/jAvJrMU5nVp6JPU0Mv
W2vcjihrVid9937fVtZak/kqs2r+clNlt6A8GrfvXc3q8tKRfot+W2kyb2VW
Pydt9vky2Urzp7fX1KzUwBKnWqX+Mcr8lVllXe1/slHxP0ZvHtAwqx1B7zO/
u+UaZR7LrELiCqmc8TlGvj72Nqu9qz2rlDmurzcueJnVvHtNvBtnZxm53DrM
rI62+BQ/zCfLKPNaZlUqYXiB+COZRs7GJpuVVvfY+cTimUaZ3zKrV5FR8xL/
zTC+eUsXFrNKDF1fyyc53SjzXGZl9aG986Gh6Ube7uvMKsbR1mbRuzQjt8O2
mlXKfwGF5wxJM3J6HGJWw4s36dLiy2+jzHuZVdmPO5aMn/rbyOWkY2ZVuMtY
uxib30aZ/zKriZ7LLpTa+ss4jdovF/V/f7lCYPF6v4wyD2ZWhvlnGs69nWqU
34+b1dpibksajkg1ynyYWZWrlO2SnS/VKP8/ArOqu/belOOHfxplXkx/HhVr
lK7V/aeRj/8ks1q+ZW+0R1aKUebHzGqhY/ju+LAUI1+X081qxY8iKx/3TDFK
1PquYib0GVXYNsX4P+H7+aI=
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -16.29815287052454}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox[
          "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
           TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-16.29815287052454, 0.}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 3; l = 1\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxl3GVUVdsWB3AvF1saCwPF7g6sZaFY2IqJjRe7sRVsvSYWBqCIYGJiXfe2
GxWxsShB5RwDBQvfnnOOcf4fnl/e+I07BuPE2mvNNef/vLLDJvQYaZUrV67O
1rly0f/+m3EiNOtqdIsbHfJmnXtUQ48Zk33bc4qLCp/6NbrL9vJ6wp+TL850
r6r2h8QtyWxaTjcl++9LO15PnX137Hf9cW66qUOR1C8tm6ihtn5H+zwrq894
/HTt/FEt1e2kVt/6ji6rZy2PrLn4QBu1JsftR5WCxn9vNuP2is/t1IYfBV4N
OFdGzzZ5+K1t3FH94z450Nm/jO4f5pxv07wuKq1olO2TpmX0X1Gf4roM66aq
puYul5n7/73h6uhSvbsMUVs/dM1To1MpvfIp7+6B/4xWN0c/WL3mYAn9Za/w
i09aT1TfrcOywpe66FFdtieYu01VHcY+cBmzu7g+rV3Qtzw+/uqhZ4Hbl9OK
6S3UKvvS4+ao8IETlt3rWEzPXbL1xuDmC1Tf3xMaJFwoqvsVa+EW0TZA7boV
0OajZ1E91rnJ4SOdFimbjZ2LRiYU0Rs4NGz2X48las4s38+bZxXRg23q3rje
b5lqssZc9luZIvqf/DX7xA9ZoWKSw6x9YwvrI/JUTXrlu0qt9Ro1OGFhYf2m
VcWJ78evVvW27fo2v0lhffOftfN+NlmrCl9c6bony1m/+dvWY2GLdWpGmfSw
86ec9d8/VxXM23q9Kj/fcWXfuc56rR8F4lZ5bFDTbHwybDyc9eHZy7Y4dghS
o6KmfV9t56xvNN7tls4bVXD4uIJBCU76tcxFFUp326QmuUf7vt7vpP/4bPVh
d8/NasXNTf5qrpNe49OCo1X6blH5HfKPDezmpPuYc/wP99+qBo+YXnxRBSd9
fcYc1WBwsIrrUd219C9H/cr7H7nPDt2mIiYtqlo33lHPTve/3XLkdhVwb8XQ
8IOOetW0b+uvjt6hRpRwfjtgmaM+IHVqv85jd6rPK9KmtB7hqK9O/uwaNyFE
Ba+5l6ttK0d96KTGX/a7h6rjU4fN83J11GdNnPFo/NlQlR77dXP3HAd9w4ST
p+s0D1N2v2/Ob/HSQT84/uv2zPNhKvTkrYt5NQf96rj6C2Ja7lJLCoe4hYU6
6K/GThk+6+IuldPUatqfAAc9e8zRds3b7lbrLu9bWmyUg+405lOVXFd3q6DZ
D/MmdXDQq/vVtrnUPlwVi3Id16emg97unwkfF98IV+6J1d76OTnoPqMPPfDs
tEf1i9rUpfh3e32Gb8bJgnf2qLKn/nIc8MpeXzeqenCsV4SapHLqVb1qr+8b
OWbuunsRqvSFxQ0XHrTXL4/YN6RXj73qV2JSkQEb7fUXw9PbFI3fqzyjM9oe
m2uvZw2rXOlZ70h1b9HI7YtH2et2w3wL7HgcqfoF+PvEdrXXKw+NyPDpF6Vq
OnrVXeFur7ceknLP7XmUKr5xQdGT5ez1AT7lj6cM3KdqfL08rqutvT5t8PDN
kS/3qYChjxL2frbTVw/aNWvMkP3qVZVS/QNv2OmRA98Mqpm4X+XkuVy7Zpid
fmFAmVafhh9QEW8OZO+Zaac/709/8ID6vSW4YHoPOz2z3868M3wPKqcxsWu+
VbfTC/Z78c49/aBq4LN0aWxeO72Cd8nYX36HVKVZR1MmJdnqLfoOOKJ9OKT2
lV4SlajZ6t59goMCxh9We2ec+bv8Dlt9Uu+nMzw+HlYdun1Z2mS2re5RdVUN
a/do5dt9+4Tq/W31uKhqISkzo9WIiye//tXEVvepcsv+2plolW9X08dXXGz1
95F+AZE/o1V2OdtCS37Z6P6VC2Qub3ZE+Xd0e97rlY2eOzLK+AaOqKgen1Z0
vGSjr6/U4XHn80fUgaA29ZZF2uil96Z51vxzRH328U9stsZG31dx2Rm7lkdV
o3ejB0TPsNEbRVSqbjwSqvhos7fPMBv9coVrO+IuHFUBT4KXB3az0bvtGWV3
3OqYWpc0ZXbrrLwtX5bPs3BjG3hM+J7P0xfBWeU8RnhfgRftTn7onue4xQ7l
FrUv0R7euavc6V9L4apul6q+vA7HhA3bruU/YXHbsla2YR3hu6Fh8wNWwgPp
670Np4e8HuZhc9Li6a4L4it6wVYhru3yrYHXlNZi0u/CJXcONr6RGIujSuUE
H+gON9ixo9Dq9fDFks3nTXgAd6Xt2fmUxc9LzBlatzfsu63EA6dNcKbL2bZf
H8ELg/uffFT0tMU2Lj8qnfKGg7fSP7jO1qrFNsbD17ec3bTW7ozFQ7Z0Lryq
I5y1+cWGpYvh1ZvHOwbqcAXesOFzxl+b1fCsxb02lV09bRL8buPRQpMOwMZi
WTn2LWy8uPyj3c5ZfDho5LLhg+D2dHxtgV8ar67/A3jahmLWfWz/s7jQhqiA
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
U0jxiMhEbSDnm0zqdOjUiOQdiZoXB7BNaln5U9V7b07UWnHeyaQa1t7aZX9Q
olafG7jG65n95X7YxkStEm9wJvXiutuj71sTNRceiBn/PaGC46ywRE3yUCZV
tmzxJqb9iRrHa16b1J82/aZUPJ2oST7KpGxj+z7/dj1RS6HlbzYpvUZwqUbP
EzXJS5nUlKkXilw0J2pcLv42qeZhNwKm5UnSOL6S26z+q2Y6Xsc1SeP2SiGz
ulDZ3vupe5ImeSqz8tM8G3Y3Pk8eR5Qwq43BT/MsmJqkSb7KrGomhrTyCkrS
eHxf1az6eYzJ2nMiSZO8lVnF1/I7NPlJkjaMXl5js1pwaHbrsF9JmuSvzCor
bfN1V7dkzZMDGmY1/nbTaS88kzXJY5lVRlGvxTcnJmt8fexjVrfmtqvyZGuy
Jvkss3pw13ty9qVkjdutI80q/6TJrUqbkzXJa5lV194hjZqXMNYbVWNTzMo3
wyWyg2eKJvkts0pfOnFl4+kp2qvXdGExq96n46f8CU/RJM9lVqMrTwkIik/R
+HFfZ1ZRLa8NMlmnajwO22JW4S0CK1s3TNW4PA41q1VFls+845uqSd7LrP7O
9OrVOjhV43bSIbM6sOtH2QF3UjXJf5lVI4/f++z/eqtNp/HLf2bVeHBDh4EN
3mqSBzOrEpWW3Gzo91aT34+b1acjV7YFh7zVJB9mfF9HywctfPhWk/8/ArM6
rz3Nl1owTZO8mFmZR1RYd7F1msbHf7pZlVm91cpxVpom+TGz+tknYtzdI2ka
X5ezzapnxnCXb+lpmuTJPqpIl6DFC93Stf8BKN9JHQ==
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -16.321372024358237`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox["\"Log[Q]\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-16.321372024358237`, 2.995732273553991}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 3; l = 1\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8684834919051533`*^9, 3.868483732623999*^9, 3.8684837665544043`*^9, {
   3.868483835834511*^9, 3.868483865350635*^9}, 3.868484082791533*^9, 
   3.86848427717806*^9, 3.868484340287621*^9, {3.8684844491728573`*^9, 
   3.868484463917172*^9}, 3.8684847817616262`*^9, 3.86848484687243*^9, 
   3.868485025162505*^9, 3.868485124114369*^9, 3.8684854479096537`*^9, 
   3.868486528694717*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"59857532-6a38-4c8f-9e26-adbf7bdaf331"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"asymvals", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"(", " ", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["rh", "4"], "-", 
       RowBox[{"192", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Phi]0", "2"]}]], " ", 
        SuperscriptBox["l", "4"], " ", 
        SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], ";"}], 
      "*)"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "20"}]}], "}"}], " ", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"ss", "[", "rend", "]"}], "2"], "*", 
         FractionBox["rend", "2"]}], ",", " ", 
        RowBox[{"\[Phi]", "[", "rend", "]"}], ",", 
        RowBox[{
         RowBox[{"-", "rend"}], "*", "rend", "*", 
         RowBox[{
          RowBox[{
           RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], "[", 
          "rend", "]"}]}]}], "}"}], "/.", 
      RowBox[{"odesol", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}]}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.868443887939736*^9, 3.868443893055936*^9}, {
   3.868444010806406*^9, 3.8684440600355997`*^9}, {3.8684446102929163`*^9, 
   3.8684446244616957`*^9}, {3.868444715133399*^9, 3.86844472265226*^9}, {
   3.86844481080482*^9, 3.86844481500989*^9}, {3.8684449856264133`*^9, 
   3.868445025604411*^9}, {3.8684532419467278`*^9, 3.868453259470333*^9}, {
   3.868453300077703*^9, 3.8684533048649178`*^9}, {3.8684535368479853`*^9, 
   3.868453550907642*^9}, {3.868461313533247*^9, 3.868461323317602*^9}, 
   3.8684613568926992`*^9, {3.868461434873954*^9, 3.868461448315082*^9}, {
   3.868461488980864*^9, 3.868461506488057*^9}, 3.8684755773036757`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"9f03cc6d-6fc5-4b36-b1f1-1c225dfdb39c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"asymvalsdecoupled", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"(", " ", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["rh", "4"], "-", 
       RowBox[{"192", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Phi]0", "2"]}]], " ", 
        SuperscriptBox["l", "4"], " ", 
        SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], ";"}], 
      "*)"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "20"}]}], "}"}], " ", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.5", "*", "rh"}], ",", " ", 
        RowBox[{"\[Phi]", "[", "rend", "]"}], ",", 
        RowBox[{
         RowBox[{"-", "rend"}], "*", "rend", "*", 
         RowBox[{
          RowBox[{
           RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], "[", 
          "rend", "]"}]}]}], "}"}], "/.", 
      RowBox[{"odesoldecoupled", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}]}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8684753577597713`*^9, 3.868475383196967*^9}, {
  3.868475573786656*^9, 3.8684756035014763`*^9}, {3.8684757780391903`*^9, 
  3.868475780149293*^9}, {3.868476176045271*^9, 3.8684761770517263`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8ae142c3-4553-4cbb-9e6f-60a824483a8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phivals", " ", "=", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Subdivide", "[", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]], ",", "10"}], "]"}], ",", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]], ",", "0.1", ",", "100"}], "]"}], ",", 
       RowBox[{"Subdivide", "[", 
        RowBox[{"0.1", ",", "1", ",", "1000"}], "]"}]}], "]"}]}], " ", "//", 
    "N"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868444692191601*^9, 3.868444703503525*^9}, {
   3.8684447351384974`*^9, 3.868444746951045*^9}, {3.868444965034512*^9, 
   3.868444969153479*^9}, {3.868445325074354*^9, 3.868445336118436*^9}, {
   3.868445917940257*^9, 3.868445924126381*^9}, {3.8684464244859962`*^9, 
   3.8684464360485363`*^9}, {3.868452472797268*^9, 3.868452477373605*^9}, {
   3.8684525130208073`*^9, 3.868452577891109*^9}, {3.868452629083909*^9, 
   3.868452688719399*^9}, 3.8684527761978893`*^9, {3.8684536249112864`*^9, 
   3.868453631456491*^9}, {3.868454022209413*^9, 3.8684540363570547`*^9}, {
   3.868455299590055*^9, 3.868455302576934*^9}, 3.8684596656428556`*^9, 
   3.8684596980203247`*^9, 3.868471907339374*^9, 3.868472041394738*^9, {
   3.8684724854494867`*^9, 3.868472541576234*^9}, {3.8684729594300013`*^9, 
   3.868472964248909*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"d16c994f-02a9-42f2-a812-a6a1346c24e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mylist", "[", 
    RowBox[{"l_", ",", "rh_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvals", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", "l", ",", "rh", ",", 
         
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868444861579915*^9, 3.868444924714356*^9}, 
   3.8684449731387367`*^9, {3.8684450751544867`*^9, 3.8684451121389112`*^9}, {
   3.868445266620206*^9, 3.868445268598083*^9}, {3.868445724622143*^9, 
   3.868445725945362*^9}, {3.868445944168755*^9, 3.868445944258614*^9}, {
   3.8684463872979794`*^9, 3.8684464086654*^9}, {3.868453354058766*^9, 
   3.868453393363132*^9}, {3.868455069722703*^9, 3.868455116284226*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d8ab13ea-dfc3-4528-bc91-ee9f95e3f3e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mylistdecoupled", "[", 
    RowBox[{"l_", ",", "rh_"}], "]"}], ":=", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvalsdecoupled", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", "l", ",", "rh", ",", 
         
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868475394892947*^9, 3.8684754136499043`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"30eff812-87e4-4318-b1d8-7d8412bd8e28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"asymvDD", "[", 
   RowBox[{"l_", ",", "rh_", ",", "phi0_"}], "]"}], ":=", " ", 
  RowBox[{"asymvals", "[", 
   RowBox[{"phi0", ",", "3", ",", "l", ",", "rh", ",", 
    RowBox[{"rh", "*", 
     SuperscriptBox["10", "5"]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868446419248767*^9, 3.8684465339677134`*^9}, {
   3.868446569067192*^9, 3.8684466018942003`*^9}, {3.868446792983719*^9, 
   3.8684467940638227`*^9}, {3.868446932185182*^9, 3.8684469334831448`*^9}, {
   3.868451840289419*^9, 3.868451841024732*^9}, {3.8684524578591537`*^9, 
   3.868452460228105*^9}, {3.868452781802559*^9, 3.8684527844854593`*^9}, {
   3.868452851504339*^9, 3.868452852736185*^9}, {3.8684528835011806`*^9, 
   3.868452883674533*^9}, {3.868453397556905*^9, 3.868453493668119*^9}, {
   3.868455124769383*^9, 3.8684551416417723`*^9}, 3.868455175096243*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"ee9bd2a2-a221-4093-aa5b-01ad875f9e52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"getplot", "[", 
   RowBox[{"l_", ",", "\[Mu]_", ",", "color_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "list$", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list$", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"phivals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
          RowBox[{"asymvals", "[", 
           RowBox[{
            RowBox[{"phivals", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", 
            "rh", ",", 
            RowBox[{
             SuperscriptBox["10", "5"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[\!\(\*SubscriptBox[\(\[Phi]\), \(asym\)]\)]\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[Q]\>\""}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getplotdecoupled", "[", 
   RowBox[{"l_", ",", "\[Mu]_", ",", "color_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "list$", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list$", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"phivals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
          RowBox[{"asymvalsdecoupled", "[", 
           RowBox[{
            RowBox[{"phivals", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", 
            "rh", ",", 
            RowBox[{
             SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[\!\(\*SubscriptBox[\(\[Phi]\), \(asym\)]\)]\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[Q]\>\""}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8684584556546097`*^9, 3.8684585513437223`*^9}, {
   3.868458659229899*^9, 3.8684587209434767`*^9}, {3.868458862174424*^9, 
   3.8684588649858837`*^9}, {3.868458910415257*^9, 3.86845894077864*^9}, {
   3.8684590499117413`*^9, 3.868459065167838*^9}, {3.868459222130397*^9, 
   3.8684592285375423`*^9}, {3.8684593252195387`*^9, 3.868459364280149*^9}, {
   3.868459615671277*^9, 3.868459832478126*^9}, {3.868459920271881*^9, 
   3.8684599387018747`*^9}, 3.868460199043989*^9, {3.8684602913884087`*^9, 
   3.8684603064861403`*^9}, {3.868461398920333*^9, 3.868461426770871*^9}, {
   3.868461457505577*^9, 3.868461471640436*^9}, {3.868461581119595*^9, 
   3.868461589470826*^9}, {3.868475421787273*^9, 3.868475430174644*^9}, {
   3.868483428871234*^9, 3.8684834293689137`*^9}, {3.868483743477549*^9, 
   3.86848374902503*^9}, {3.8684837895201797`*^9, 3.868483819437134*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"01a482d5-c4be-4be0-a101-233ff1342842"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"0.45", ",", "300", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868539433451149*^9, 3.8685394562952023`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"08e9bf88-5ad7-420e-91ed-dc62d5c3cd68"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"1.7959668961763703`*^-103\\\", \
\\\"3\\\"]\\) is too small to represent as a normalized machine number; \
precision may be lost.\"", 2, 18, 13, 31105749669977833827, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868539436183468*^9, 3.8685394689749947`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"0ad87ff9-3b4a-4d9b-935b-27322756dfaf"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"1.1146329966957794`*^-103\\\", \
\\\"3\\\"]\\) is too small to represent as a normalized machine number; \
precision may be lost.\"", 2, 18, 14, 31105749669977833827, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868539436183468*^9, 3.868539468983138*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"63121845-a319-462a-9492-db92f129405c"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"6.914391210542692`*^-104\\\", \\\"3\\\"]\\) \
is too small to represent as a normalized machine number; precision may be \
lost.\"", 2, 18, 15, 31105749669977833827, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868539436183468*^9, 3.868539469002733*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"5988bb6e-0841-47a5-b6dc-9d1cb849b695"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 18, 16, 31105749669977833827, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868539436183468*^9, 3.8685394690061197`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"50e0cf64-65c3-459b-82a5-d12d04daadcb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {
        RGBColor[1, 0, 0], 
        PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
         "]]}, {{}, {}}}, 
      AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, -17.634384267357238`}, DisplayFunction -> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         FormBox[
         "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
          TraditionalForm], None}}, FrameTicks -> FrontEndValueCache[{{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, {{{{-16.11809565095832, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 
            0.}}, {-11.512925464970229`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 
            0.}}, {-6.907755278982137, 
            FormBox["0.001`", TraditionalForm], {0.01, 
            0.}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              InterpretationBox[
               StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1, 
               AutoDelete -> True], NumberForm[#, {
                DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
            0.}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.605170185988091, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {2.302585092994046, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {2.70805020110221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {3.2188758248682006`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}}, {{-15., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-10., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-5., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-20., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-19., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-18., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-17., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-16., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-14., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-13., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-11., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-6., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-3., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-1., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {1., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {2., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {3., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {4., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {5., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}}}, {Automatic, Automatic}}], GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {588.16015625, Automatic}, 
      LabelStyle -> {
        Directive[Bold, Medium], 
        GrayLevel[0]}, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 1.}, {-17.634384267357238`, 0.}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 300; l = 0.45\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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

           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -310.92838864224507`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox["\"Log[Q]\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-310.92838864224507`, -3.949100487096002}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 300; l = 0.45\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{3.868539438068359*^9, 3.868539469994546*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"5f74762a-d116-489b-97f9-dfc5b617fee5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"0.45", ",", "3", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868471827177401*^9, 3.8684718279179897`*^9}, {
   3.868471942772437*^9, 3.868471983550932*^9}, {3.868472126315137*^9, 
   3.8684721694076014`*^9}, {3.868472213583969*^9, 3.868472234064374*^9}, {
   3.868472292297934*^9, 3.8684723172551327`*^9}, {3.868472436484049*^9, 
   3.868472456753438*^9}, {3.86847290572587*^9, 3.868472953322263*^9}, 
   3.868472993423767*^9, {3.8684730527701273`*^9, 3.8684730949198713`*^9}, {
   3.868473125527363*^9, 3.868473212197484*^9}, {3.868476982164138*^9, 
   3.868476983590599*^9}, {3.868477146297202*^9, 3.868477146953681*^9}, {
   3.8685393291217318`*^9, 3.868539330687092*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"dcc56565-3ff4-4b86-96d7-b9e70ab2baea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {
        RGBColor[1, 0, 0], 
        PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxlXGVYlFvbpbtnSMFAMED0oCgq4G0DYgeKInYLNmKhCDYiKhaiYIBgB42w
NyXS3TUMzDDDMEO3wPsE36+PP+d6rpGHHXese601Z9LeExsPSIiJiW2TEhMj
/3tfGBXS9+f7ok9NVyNSt/+HY47159id0YMHF3L1dC5NxTWj0bXxG0xgumOo
LtKbgkVNHh95kXPAqPRdyaiDMRbZa3G7Fi+E2G0veZPijPD58kr/qwcXg51f
adhkWyPcdyd85o3Py0B7ofXiXv5kfN76fM7dzpXQ8T2ndNrLybhftOKo//xV
0BwysoLtOBl7vGHKPfVcA8p8w9gwvcn4X0RH0Zq960Fb3y8vtcnw/z0//nPY
YMua3XDEbCP3nM8kPC122wbvI4eh8+1Ru+Soibhu8/uUiqUnoXji2SvthhNx
xJqgmrb1Z6HRw61aau8EfG5lQK/MLg9wP5cyUPBhPF4EvmrjXS/D/kjZtH0K
47G0/tIngTbXYBKfpax43QAf1VlkGLb8OjzPmTEnX94A5zEXfvvh4AOrrk/3
cnitj+eqz7NO3HgTHvqZT2Da6ONA5dmZf51uw1Yra5tdTePwqPxMx5Ldd6HO
q1e38NE4vF/GpLH+kC9cfbLMcYftOJwlMeWkwM0P3I2vPJ4qPg4/G/X3HFro
D7zI+MHbSA9nDaus8Fr0EFLW+kzr9NLDw0O+irJLH4FedtKg0FYPzxpUKPJd
8RgMG2U36Knr4X39t59r2AeAVGG7sVGtLn5C7Pb56ifwLlE+KO2TLs7o9jEe
v/4pvI1+E590WRcPdkq0vtv0DMIjtnyqXaeLzTqu/Zy+9Tl4PvLZ2mWki3e1
jXh82/4C0l5MW1s+pIMfCS/DXJdAqPgp33CgRAenCwalE/a8BEWMjl/9qoP7
+R45iw8EgUKtaYrsXR1swut99OfwK9i11/kj56AO3sE967T6+GtQe33pqsQK
HezX1Dmh6EQw3J0RWmZvpIP3nJrf9WlBCJx5eMQyQkoHXzx5vswtIQRuO1yo
U+Vq48cnouPMbd4As+T8Hbe/2viLW09Qd9IbOJrrsirmkzb+42pxLWbxW+hV
NdlT+0Ab1x8/s+9iyltYpZamV3pWG/cf+7nSZvk70PbcEfl4uzZmHOuYLvbn
HdRonl6qukQbzzj6n3Kq7XtQrGa8XDRNG688cqL9RuZ7mNaetFRXTRvvOvy1
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
         
         "]]}, {{}, {}}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, -17.627830027608347`}, 
      DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         FormBox[
         "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
          TraditionalForm], None}}, FrameTicks -> FrontEndValueCache[{{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, {{{{-16.11809565095832, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 
            0.}}, {-11.512925464970229`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 
            0.}}, {-6.907755278982137, 
            FormBox["0.001`", TraditionalForm], {0.01, 
            0.}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              InterpretationBox[
               StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1, 
               AutoDelete -> True], NumberForm[#, {
                DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
            0.}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.605170185988091, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {2.302585092994046, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {2.70805020110221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {3.2188758248682006`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}}, {{-15., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-10., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-5., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-20., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-19., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-18., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-17., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-16., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-14., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-13., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-11., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-6., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-3., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-1., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {1., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {2., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {3., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {4., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {5., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}}}, {Automatic, Automatic}}], GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {593.625, Automatic}, LabelStyle -> {
        Directive[Bold, Medium], 
        GrayLevel[0]}, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 1.}, {-17.627830027608347`, -0.08375415580984989}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 3; l = 0.45\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
4b7D+60XI4a+ksP/A0IU75E=
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -15.584557895909839`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox["\"Log[Q]\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-15.584557895909839`, -1.6521147465363442`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 3; l = 0.45\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.868471831302126*^9, 3.8684719182313232`*^9, {3.8684719505695066`*^9, 
   3.868471988967702*^9}, 3.868472045138152*^9, {3.868472136418583*^9, 
   3.868472178876369*^9}, {3.868472223561854*^9, 3.868472237423519*^9}, {
   3.8684723017581997`*^9, 3.868472324640143*^9}, {3.8684724463532963`*^9, 
   3.868472464629196*^9}, 3.868472549293133*^9, {3.868472908534378*^9, 
   3.868473004191575*^9}, {3.868473058971116*^9, 3.868473099353362*^9}, 
   3.868473130805458*^9, {3.868473177903257*^9, 3.868473220094585*^9}, 
   3.8684754462390633`*^9, 3.8684756242138023`*^9, 3.868475801339366*^9, 
   3.8684769942651052`*^9, 3.8684771598325243`*^9, 3.868539340982184*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"cf599839-1d2b-43a9-8abc-68b7485af647"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplotdecoupled", "[", 
  RowBox[{"0.1", ",", "3", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868475448953671*^9, 3.868475449499384*^9}, {
  3.86847698791222*^9, 3.86847698880087*^9}, {3.868477142531859*^9, 
  3.868477143709841*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"f4fd0fd7-7389-44ce-b6f8-4c8e2c0832c9"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJxlnHdcTf8fx5tUKkWyErJC2SPznVHZewsZ4RsK2ZJRSJKsEKJUoqG0i96n
vffet9u9t7tve4/fPafz369/vo/7wOmc8/l83u/X+/V63u/UUzZ7LOVkZGQO
KcjIkP99IYr41pkasvZj5Zl//LS5RNSFruxNthNgFEv3wd0XekT1YGRN7O45
cGFn32U9w6mEmHXrFzd8MXDD47VOH59CiDdrc1qNV0JG1mUNlfeTiZtlFW73
zxrD/rFnV6iF6RKdz/znPQ7cAPdyFgz70zWJuLn6ZrZziykcepUVrX10EtEl
NrFyM9oC+lEz1J8V6hC3vLSU3O23w+w2xj7NIzpE38/mwu2ndsGBs34FW8QT
/+/zm9Tzk/Zvt4COJ/fNfAzHE/rRh3Y7/Hce+C+eLp/tNpao3eeTWL7+MgQF
vP5jbaVN/Nz+uVqy6xpkB/g4XX0yhrhu+rZj2Ilb8OfkqQdjs7WIteCioXvJ
DnbM0xxuN0+LUNRZ/85jzQPYtni7ROQ7mrAat1bPb+MjOKKe+ua64WgiV2vl
79CtjvB91inj4IRRxFLNZav/7XkC6S97JxhYjCI81BZlpB92gsemjN0zho8i
BpXnHSi2cAbtYYKpayM0iTPD5jTUnXOB8QHyc87/p0lkys28LLB2hbhdJ5Rz
9DSJ94Nu9r0r3WD+/TQOMjSIzH51k4drX4FRxDbzMG8Nor/XZcTw9a/B326R
yaLzGsT8HpVCF5M30L9tq33lAg3idJfTh1Gb38IRgeVAaNdI4p30aT9sewcx
vmG5OW9HEmltjjN0d7mD5shn112XjiR6WuSE3/e+hwdXloJzpTph2Pzgz+yD
H8CmbWnnGQd14oRk4NbvIx8haEtjWM58deK1yA6WHveA8cf4Gvfq1IgUQY9i
3MlPkNU5Cxe/ViO6eLeyjS0/w+Z/iQdjzNSIOdyO16nnv8DlJ7WnqwZViaOc
a4e3XfSEh1PvuV6MVSVcWS2TC22+wo8d+l0bbqoSJ68YtQas+AZeC7t8Vy9T
Je5cvllqHfcNcsK4w5Z2jiDe2ETGLFzjBb/D7Z+rx44ggqzbP7fFe4GZ24tt
QfYjiNRLSx5EGXvDraOu8Z0bRxB1F21P30n0BpfMmzalqiOIrgt/TNds/A6b
7M/nLC5VIUZfaJ4tk/odRoQltfV+UyEMrBaoJZn5gFmYp6POJRXC9D+bpscZ
PuB3/+Utx5UqxInzwUWbtvrCyWdjhk9XViFunhNFjsjxBa3ZHQ7CcmXi1VkD
j9wdflC3TtY0/6cy8cvywr1X+X5w4nr6y8S7ykTymV8W+/b8gChL9p2oHcpE
zWnehrHFP0Dd/g77u54y0XlKf1blfn9wmO938l6nEjHy1DmVL2X+YNX5a+bK
HCVC/6Sf6MThn+C3+r18wXclYr0FO1+v6if8Ow97V9xVIo6emB7ONv8F54pP
NVvtVSKuHz/93r/2F9hZVCw4bqBEuB7zvnPBIgDWqgYWjhimRPib1x+bxwyA
zp8D/RcZw4mEo1PWNZ8OhNPa4UZ344YTVUfICwaC2fQYiwXvhxNthz2H3zwX
BGPKWL5PbIcTIw7X8FfwgsDo83HHW7uGEzMO6eT2WQWDaNAOZeYNJ9YePBqK
wmAo52scm6A6nDh0wOPtI+vf4FowyovgDyOu7K+4adL0G0bb+CtLMoYRJnNc
DBVWhMDVwDtbvX4OIwp/zv3Kvh0CZsb7dhQ9G0acmJ2lkRYbAmXmcnMeWg0j
BP5Wj/x7Q0Dt5pVpP7YOI27pq7Q9Wx0K+bkyv9YZDiMU/X9KVyAU2MLh+7eP
HEa8nrW5bFt8KGxLfVaf2qxI6P7gbpo3GAqvvTUXBBQrEr9mOsWONP4DXRsi
13dGKRLL/WYZSI8EtM00XuX/SZFInpH2pTDhD/zttTkcd1+R2OV7dmS4XBic
TDjVbXhGkaidPuzhuw1hED9L83X/JkXigo9vyw3HMHDR4obNmqdIdE4zOXMo
Rfr3D98a/mu0IuH4nVWyYlg4sIpXbXvUrUBoTnM0m2gWDqdOWh8MrlMgPL2n
xfQ9DQe2dvcog1QFYo5e0pza9HB49NTarjtQgYjyOvUZlSMgOEbbR+utArFx
qpy615YI0EPlwLt3FYi8b173Hz2PgJ+1B9MMTisQ5uTyZkeAzLG1K2ZuVSB4
XxmnTNQiwV/h/L6zixWIG5MfFM/cEQkunkZ3BBMVCLmvk02VXkbC/S96E8IV
FIiXuhjFy4sEv+3DQuNF8oSO53HpikSBCedjunKZPPFz0oBH4O4oSORWdLwh
5ImlX76our6OgkkbHtYc/SVPJOqssbcpioI1kU6zLd7KEzvJ8qwVDVoqQa+/
2ssTVRPtTi7aHw1jvHsrx/0nT5z7NLFotHs0uKpa5mbulSfaJsRtbC+NhtB5
+9eHr5UnHnociSwdGwNJEbvGFM+WJ9Qm9MyKPhQDE+3ez5s9Rp7w+Ej+xAC4
Z937IyNPLPw4Z9y74hgImOV+d6NYjkj/EOfuNjIWhrFUFGSq5QiLD9vGuGyJ
Bc37a46yMuSIzvc1b54+joUXHw0zm6LkCNf31qMciFhwnvPJc7qfHDGDKtix
sDGtes79t3LEX+nV7iyLA5nQqJTBR3LEPveprtevxIHy6xWZvlfkCP67P6pX
AuNgRvGb95ct5AjpZnl+sTEORtt1uZ3YKUdIb075vN5fkLl5a9LVtXLE77eW
TqeP/YV/Zg0/fhjKEWZk+/rwF37K+XsO6sgRtdK7O1L0FzY6RdneVpUjrr8Z
p3BA/R9oSM591uqTJVTf/Hy0e/M/eKB++FW+QJb4/nql7HbHf7B90pHcwCpZ
YtXrrPub8B8cOrCr0D9Llih8ZT6woecf9L3XnZwcJ0v894os+PGwseXFioEA
WULmlbQ9XY6HaeOX/zzwWZagHjcgHo6HXOzKdpEl5rl961rIiQerczPDLe7J
EqkvF940nIrAqRJe0LSWJcxfJrbrmyP0rEgNrT0uS7S57r02/T3CktfTJqTv
lCWcqYaAoF6TuyrHWJbQTIuNfjGMgHs+Fb9FC2WJGlP5WyOmE/Bwm4vm7Gmy
hH/q1uXP1hFQ2bp/wF5LlrhG9XcCbDl/x0gUZQlIrY5wtCPg5qed3bc6ZYgR
pjOuy3kQMHKF+zYdngxRmkI2DAJsPihElFfKEN4mka39xQTEJgsrgrJlCOuU
gT93Wwiol1w58ylehlhhYna1e2QCPC+/O/gtRIZQTCEfMAFeff51MN5bhsjf
WN7UtiUBfrZumdj6Vob4nDwl5Or5BBiVu6Vn7VMZ4txGsqEkgMXeeX5et2WI
xcmh86y/J4DTGsXCCRdliMENPSIBkQDeLhaLfh2XITKT1gf9V5sATS833du5
W4ZwJ7dLbwKUGi+2UtkoQ5xMKpprOT4RvIU9oZXLZAiDDToC5rJEWDKnRJ2Y
LUN0JZINJxGcxm1ZHasjQySTl7uSCI8b5namj5Qh3MjleJkIR1xc+wVyMsTR
9Wu5FYGJ0MK+P8lUOIgzE5/8OJiZCOarH5RWFQ5iy7q8syWNiXDwge3PDzGD
GJ8wduZexSS4yW+faPdtEJ+tIxtSErRfq454/HQQ9yf4++wwToLjS2fJRlgP
IlV+jiWBtW7bM+UDgygkVkzbcjcJLs68WvtozSBGGz9ipn1Igie5xa5TZgyi
A5HpZRKZBDh8kyFTdRB3Go+WPnISaF1lbU9rG8AJBNmwkoDT8v1JXvUAcsCn
Ll49GU5+PWDTkzyAf1DoudogGUy63nuZBQ2gvVS9xG5OhhHXkqMj3w3gJrw3
yehcMjTtk+w2sx9ALWrDJMPk9PIR3WcHkBGv/nmxdzJkb2U9ydo5gIFUQ0uG
14dHWsYbDeDN+K8T5tckg8Ze7uaCqQO4gXx9PclwIfhxpfyIAVSPXyCtOCkQ
b3Hv3/62fqxcc/uQ/9IU2OJY7ZFa049+/8gXmAIfjSbrHEjrxytrVMq+X04B
/1h9oXxoP0rFpbSCpMDysFVReR79qLTm0/6vASkQGNMyJ8axH4v/NmhNykiB
COUVHWjdj99WGxR7cFJgptWGjIZD/Xjh7zVpRUgFxw3P9k/f0I/LqAumQgDr
3/aHhv0o91dxlPSZYV1bhmXP2H7MXbWj4JV5KlxVS9nzUq4fPcjyeCcVop9I
MkHUh5ar6na+eJ8Ku04GPh5R3ocL4maNHBGRCoYWd1e1JPZh38rLuU6FqWBk
0urbGtSH1PFtSoUvi//eH/mxD9+Q5UctDRYsc3Y0cexD6WKoys1NgwDu2Cvv
bPpwzkqyIKVB2fqp8oNH+rAjptK53zINvjge735o2ocJ5HZxSIOWdfdH6y7q
wxcxF5S7v6VB7osZo4om9eGhFeHpN+LTYN6G+shvyn04Xdo926rSYO2FuclP
2nuxyYg8wGkwiCf7Het7MY68Pe102L4lceannF58akRWhHTInHBOMSOmF/dE
6z4W7E6HKJ31J9T9elHXiDzB6SAvN77X6nUv8qN+yze6pMOA2cNvtfa9GLGc
PHHpULS3eux/F3rxYRS5odNhsd/eOSqHenHbcvKEpIP7jBKvhI29OC6qQKZW
LgMO24/c/HJhLzYsI3d0Biz6YC24qtuLwZGn7lesyYCjU8btvziiF6XFVroD
M4A/i7vnblcPmpLl6lYGJJRc+vOV3YOjqAXOgHdzuesqCnuwRlr98sMy4HnN
+vxZRA/6L82RrnAGlKwabfg8qAevRYzpzRJnwKDhO335Tz1oTB4P1UwwBv83
L516UDXC73ba7Ex4FpcNC270YNkSifQNZsK/6imDrNM96B1OPnAmZA8/7hO0
uwetSfn9KBM0x5fKOUMPriSX42smFOBl8W3DHlRcQg5MmbCQ67/q3sQezA87
3B5TmQn3FjvjG+UelB426RWlv98+eOe/zm48H8a3jRiTBRW2qxK72d24ZDH5
kwUm8xmiTcXdOCitziG7suAXt/Dnr8RuzFxEFtQsuPk7N0c3tBvdyXb7PAu+
LNBc5Pu1G08t2r9gzs8siHc69HuNazfO+/NF8iM1C9hT63W5dt3YvZATPIOV
BW6fTx/xudCNVHmWzYawpFGrrx7pRjeynU3OBrfnHz13b+5G81CywGRDx4Tx
x9YbdaP+QqVAnSPZkFw7c+/GWd3YGrLrgsfNbDjxI9P8oHY3UuXgXTaI8uwO
3FXsRueQet67P9mgbjN9UkhbFx6Q3t3o/GwocBvj2t7QhXrS7vFKlA1Zt0c+
3VrUhaL55IHLgcaWlZzQxC6MJreffg6Iv+g76//pQsf52/xUTHPg2p683b+9
unAXJSByoOORs47pqy6UFiupQs2B4b/GZQofdCH5tA6eObAPP678frkL/5CP
+zcHtoe/2PGfRRfeozZgDuzpKuSs3dWFm+cNTu3vyIFJCr6sacZdqBVsVn9H
KxfOCz1mj1vQhQxDUgDkwvVe3/cTp3RhYFD5iRs7c+Hubg3NeRpdSL69tou5
EPD87q2dMl24gWxHzrmQfqUu5H5TJ6obkguSC5q/nL7EMzqxMrDH/FJKLlja
jtVTLehEP6rB5cIDS3u98wmdKF3cqvMyeTB7uaxDYWgnriHL36Q8mOW8WH+r
dyeSq3FmVR60/e3sKHjdicXSbsk8lAcdCfeKzzp04rcA8gbzYGrfOj/la514
YW6HVPHlgexU1T2xZzpxOXncQvOgfLL43639nSg396l2RW4eiNQ25G807cTc
X3klB4R5kD422EZ3eSdul6pHvkI+7Lg53kFRvxOp7TY6H3ytI5q7x3XikL7L
h2izTu9e5U4cKL7Fm7kwH8wPfbBX6e1AlrSasyEfSlXeXZwp7MDMfWQDlX7m
z92/s6YDQyg9mA/+kdVTHud2oDt5uYv58OXaueg07MC71ILkw0uXLIWxoR14
ct+eWd+e5YMl21Ry1bsDKXn0IR8chu0/WfWmA6nX9SMfxq8J3rjrcQeOohpg
PqxIMXUouNGBXXsbfD8l54Nbx/bhJ8534JDezIeca4ZxXYc7MJmUH8x8eH7a
6Znn1g6UPqtUAeVD4JeVx3at6cCXpLwbzIc5TQenqs/vwCF9WgDzD81NKJvS
gUeLyAZWANc2LtMPGtWBVHufWwAVFfPXuyp0oFRcSCVrAYxYpdB7p6Mdh/Rs
ARwpKlpry23HlsLtpzQOFcBln5buG5XtWD6KVCgFMO5947gn2e0YT7bP6wVQ
nHvB6Vt8Ow7p3wLYJWO1NDWkHZ8V1jJGvCkAz8x+1U7vdrQZRSqOApg12rZv
0bt23E++vpAC2HzGpPn203ak2hMWwOsdkyuybrfjlEKbE8NzC+BZdoWX/sV2
HEa9QOn9/ry7wu14Owp3kw2kAGS5Rq5yu9txSF8XgM/Cq673N7RjNFn+lQth
uHG4/vBl7fhF01eqCAphYEfU1o/67eiwe/OXBzML4aDrcc7Sie04pMcLYZ17
VGO1WjvuLCAvWAjimu61rjLtSJXXPYVwaMmTqs2tbThhd6V0oiqEBas4gSM5
bTik3wshvyHLu668DTn5elXd9oWwXqwRFJPVhuR0Hf1C+tkqMu5LfBuGkuXr
cyEsW8mKfx7ahu8pvV8IEz5w/Rx82tCOKuCFsPnz8jOP37ehdDGkHbgQtFOt
Gt2c23DTrr5xtmWFcPSJ8VS/e204NB8Ugl/WJ7mUy22oRQnmQjB1c7ATnW7D
npE8aUctAkUrvQeTD7YhQ6o2rEcVwfuJqQNHtrQhJbenFkHgrDre1zVtGEAe
v/lFEGAps1i8oA1fkbe3VvrvP9RmmUxvwxs7dbWttheBnsIuP7+xbTg0fxTB
3xHbwjVGtOF6Us5aFYEojd/oMNCK+lI143e7CNx9zyyWaWlF9Z1kAS2CbfKj
nj1mt+LQvFIEv/OtqkZXtGJlbqf0hBTBsvnDJgVktyKScjG8CHZqeRhvJVrR
dwe1o6FR2GPUFtaKz6n5pgi2rJ/Y7fujFUm1VMsogk0WI65ZfGrFA1QBLIKY
vq7P01624mpSjg0UwQLGvHOSR62oJ50mJ6oVg5ybVmrSjVZUyh0vXeFiuNVt
GPTNqhXFamSHKYYNuhM1nhxvxSLyeKwoBp3E90zbPa0YQ8qdTcVwd/zdcVam
reiZQxawYvC6HeV7fmUrOqqRD1wMz5SP2NvMa0Wr7a3SJy4G/WvO7vZ6rbiL
XA6HYvj5yZn5TrsVl5Fy4lUxRG6PPBCh0oo6amQHKAZO16PG6oEWJNXezt/F
oHf6/jPV1haUNiuRWnwxaJzcu3BjYwvmZJM/xeDsikUOVS0YRrbrqmKQV/pi
mZXXgtQ4zi+Gpuk1VROSW9DehRR8xTBm8bO5V6Nb8Ez2sa3pw0ugbFHi5oLA
FtyiSlboErj0lphr5NWCC8h2OKMEmtuLUv3etaA2WZ6XlIAN85TGJOcWJMVP
0voSiHzF7/ewb8H6EWSBKQG9nwOOU2xbMI0cLy1KYHr/pk9B51owiGw3NiXw
d++zZevNW5AqB/dKIGTWu221u1pQOpzq27uUgPvFg0UPTVrwuPTu1nySXn9v
PmGwsgU3kuPbzxLw1xwzom5eC86hDlwJRPns9P8wrQU1yO2XVgKan+NdD49r
wfYth58YlZZAQF14+FS1FqySquFOVglwbn3UaJZtwQRyPGotAeHRxg9pHc34
Q4UccEshdaHhRl9BM1KPq1kK06epKTszmvEqNWCXQsb31bXXS5rxECWYpH9/
rWPs+cxmXEuOH2tKYelpfHsKm3G6VG3P31YKCQurT58Ob0YV58mnxUdKIXZL
le6Fn80oySAH1FJgfc77e9uzGUvIdnRLev0ltUtevmnGOFLePy2FLNW19gFO
zej1jBQ8pRBVs9wt914zPskgG1wpyDXNONV1tRkvStX8ubBSeCGyFeifb8Y9
ZPlLLIVx4Z7TLI41oxE1YJbCTP0lcp57mlFX2i196krBTanInmnWjArK5A2W
wvvEOa8M1zQjbxMpWErhnmnvgvuLmpE6biPKILxa60DZrGak5OmEMnjfe7Br
6aRm9FCa6Hl8dhl8mBQx8tOoZnxADYhlIP/B4O0wpWY8K+2+1aZlsPxq7r1b
/U1ILe/+MrBZE5vc1NKElPw7UwZCoe5JG24Tjh0qgJAUvHJrW00T9kunkbKH
ZSCXcuTu/aImlA670gmrDE6fqOJpZDQhdbmvZXDp+qyX/vFNSMmr4DJQ8Yo+
bRrehG8pu0d6f93aFvyfTXgnbba0JZXBGUm53duvTWgxnCwI0ueZ9f3PxndN
SNkVvDJwP6Tf0+PchJR86SyDtJmzt0U9aMIhf6Uc0mWved2+0YSdZFwwphxG
ybFb1l1swmrKbymHnlTLFRqnmpCyAxaVw6T9okusg0045L+Uw7r2+8/itzeh
K1ledpXD/dHzH3tuaMIhP6YcmLrjjziuaMIjT8gBqxws//tP9vL8JhzyZ8rB
VOnQtZMzmnAGaZ8+L4fc8NmBhyY24ZBfUw4HguZ779dswubH5IYph0z3tJ2H
hjfhkH9TDpV/I80TeiQ4NM6Ww+DyROsajgSH/JxycORGpCsUSdCJfH0N5fC+
M+jYcpTgkL9TDseX1E65HiDBfaTckK2AYVWvFOPfS3DI76mA/eZzBzUdJThZ
Og1G61aA/MzpslcuS3DI/6mAgAuqg5XmEhQokB24AsyanIU7N0twyA+qgP/y
zf/lLZVgJDmOHa6Arm37LY/oSXDIH6qAl+7HyiXqEnykQF6wAuw/XlNx6xXj
ecovqoBdmcGSlVwx7qAKdAWwWpbaNRWLccg/qgB9mc0+IQliHK9AdpAK2Jm/
yvxusBiH/KQKCJW9+WHXJzGyHciKXwGqiTe3L3AS45C/VAH3PfNsJlwXYwg5
TogqgLl3epv6KTEO+U0VkPp1fp7aTjHaOZADRiWwNLFde7UYT1H+UyWMrQ0z
nzNbjJvI7aJfCUXBct1m2mI0pPyoSph1Kwxt5MU4mjJ0KmHq1npfryYRdlP+
VCWUzY79VlMjwjo58gBXQlKVve+0LBEO+VWVEJn46KdttAh/PSIFUSVMD5nr
neMrwiH/qhIU45odF74R4Q058gRXgpb2CbOvD0Q45GdVggtnZJ22tQgpeymu
EvZO/LPuw1ER7W9VwtONipbTNouQah8VlfD9QuXa6GUi2u+SPo9gdMqB6SIs
f2gr3dGVwNviKxrQFNH+VxX8GPUmOGRQiNLhSboDq+DSr5b+CyIh7YdVwf6F
/IIFVUK0eUgucBVEHAqZMpgupP2xKlABF0ZppBApe2RnFazYWjI82kdI+2VV
sEGp1cX7tRCp43GxCvbIHjvr/kBI+2dVMNnTw/mNtRALSTnpXAUZg+ubPpoL
aT+tCtpq+l783CJEspo++VEFh87YH0k0EtL+WhV4arzYxpopxP9kyDusAg+3
/iMjxwhpv60KGr+F2W2QFyI13jOrIEvg5f+gWUD7b1Vwn5tRklonQBnqpxpS
Y1f1jskV0H5cNVSP0taw/ivAbLJdTqoGVHsyIu+XgPbnqiF6TBrL6KMAh/LP
ajBJ0nsT8FSA9yi/rhp2xzepzbohwNP3K9bcPlQNxFf3bQFnBLiZ8u+qYVXR
U1OjvQKkxtPr1XDwtklrzjoB7edVg8qW41suLhBgj73V32tvquH0TesNoycL
aH+vGlzcJpcmqgkwlSwHIdUwz1K/504fn/b7qqGVu+3HKgEfKfmcWw0Pxx4v
Uajk0/5fNbwpX2FXms7HYwPkgauGK6zMNyFRfNoPrIYQfyWtN3581KcETA3M
MOxsu/eOT/uD0s/dfvOuOPKxrZ8cCGtAq3tJzEVbPu0X1sCUM5kul0/xkSAf
d2MNHPD+7GW3m0/7hzXAXCSSuBnz8TkpD07WgNdr5ctB8/m0n1gDXL2tEwp1
+XiQGuhrwE1jbOOAGh/XUP5iDaxeVZu7uJ+HetK3x/hcAwydSZmXhTzab6yB
B6FHCyKqeCgm49/YGjA4YVgjl8Wj/cca2Fy7gHMwloexpN1WJv19UzXY4T95
tB9ZAx+MHxSO/8jDx9TAUAMLjq378cSJR/uTtdD/Ute89yYPd5PdclQtjMsX
8W6e4+Fyyq+shd7ql5v7DvBQh4yHFtSCsX6TrZMpj/Yva8ETFU7pLOMht5cE
Bmph9vJc1egZPNrPrAXvNwcvHR3DwzDSLrpQCwuXRtoNU+ThR8rfrIUJicpL
Ytq4SC2vUy0Uatq52LK4eIbyO2thzrh195cWc5GSQ361QOS7Kw4mcWn/sxbe
zUkZlx/GRW1KUNZCaeukP/7fubQfWgvVKX2ZTm+4SHZzs/pa2N2can7ZgUv7
o7Xw2kpgccKWi0Gk3TFQC0simfn7T3Npv7QOYkvm+e3dy8Vbd3wNNujUgdOS
o5WHNnBp/7QOGG/7zlou5uJGstyvqAPj/hCT29O4tJ9aB8G+ky+/Hc1FDcpA
rANrdlddpDyX9lfrIGRKhyujtRGlw6D0gNTBm8iKG5qsRtpvrYO5EutXm4sb
8cdtUnDUQSnvWblTciPtv9aB9/PhpnnhjUiqjajfdVB/KadIx7eR9mPrQJyd
cffKu0ZcS27nnDoYc7N1ec7jRtqfrQPPuM1yC240ogop//h1oHKkuPjj2Uba
r60Dmyvff6ocbEQrar8woN8m784js0Y8TgkUBnyVu71e1qgRKbU1igEihYye
J/qNSLWfCQxovdz0ZfT4Rtr/ZsD1nfozfyg34mxqIGTAFP/QF+t6OPT+YgDr
Skkuk8/BkZQhyYB3DqwG5yoOvd8Y4OC4PG1FNgfbpWrO1pQBm2vm2Ur+cuj9
x4Bi/0XMgCAOVlJ5JgPMff+o23hykBqXzBkQNGNmq9FLDlLl8zQD7OVUnZUf
cOj9yYCa5/wcxmUO+n0iBQIDGu7sjIk/yaH3KwN2NeSZft/DQRdyHHnIgAcz
lK64buDgfWr/MsCC8WnRgyUcvDqRHMgYcL9h6ZNbMzj0fmbA0alOZ29qc/AQ
Gc97MsDfa2uu3XAOvb8ZwLQ1jnbqYiN1/IMYkOJlOPkTj03vdwZM1KvvD6tk
4zRqwzDgWdb8nUVZbHr/M+CmWbta9182KpNyOosBcxW1ls4IZtPngQHNBtfx
4Fc2So6QDZoBh94o+bu5sZFJnQ8G+AYm8/IespGyp7gM2PHA7/4YWzZ9Xhjw
6nPomZNn2BhLbt9OBhiqNL0J28+mzw8DNhhfVVI1Y+M3yvCsh9njdv6zMmIj
Zf+o1cP7hO9BebPZSMlBrXrwiXxTvHIimz5f9TA+ZJNhoCobSffDe1o9FHxs
+TNtgEWft3oY8TTNwkvCQspeWVQP437IL5pRz6LPXz00rOBN/V3IwuVUg6yH
ZEdiLiSz6PNYDyvTyraURLBw0hFyReqhf77DnSs/WPT5rAdGgU7k6I8spOTM
8XpQ/6jQHefMwnbqvNbDLONva63sWEh2F/NL9fDF5OgjXWsWfX7rYUK9H5af
YCFlD9jVA7eru/nDbhZ9nqXPO7ZA68QGFoaT9rtzPaSfDJ42dymLPt/14PB8
/IT+mSwcys/r4Ubu19bicSykxu9v9ZBdVxTwR4WFVDv2r4c+9va17n0N9Pmv
h4k2AX73xQ1Iuq1jo+pBcvYlw5rRQNeDelis5t14urABt5LjbYr0/gRuUceT
G+j6UA/FOerbTkQ24FBeXw9N4UXfLP0b6HpRD8oFn0OveDTg2ArSgKmHEzcM
7ji4NND1ox6uam3p8LBvQKoctNQDGiROjb7cgBKqntRD+OazXZWnGpC8uwIZ
JnxuV70hv78BS0g7VokJCaGv3BeaNeAQH8CE/0TF+y1XNNB5ERMM+uN+e85t
wGDS3tZlwthRC7/VTGpAry4yQGCC3sJp0/Q0GvAtaXcaMuHGnCdLLso1IDX+
LGGC9qs9+XFtTKQedxUTVv153KLRyMSL1AZkwvgXU99fqGDiCcoAYcKDTIPY
rCwmnUcx4Xv4n4ML45loQo4Xh5nQPC/pwucQJhpRgS8TeEFXW1S/M3EuZTgz
Yeb8ysZH75h0fsWEkwvHbhp4ykRNakGYcC9w68j7d5ioQBkYTPir7LlC8RIT
Oyj+gQnyOiuS3E4wkUflXdLP47b5T93DxGqy/L1lQqSLCjtqIxPzSDvsExPC
jgZe37uciYmkPP7OhJjQSwfaZjPpfIwJ0wddHTx0mOh/kDQgpO+/aV+3yUgm
fiKPWwwT/pxTCu+QZeIQb8GEj7YdvwPb6pGSn2lMaN18mXeusR7J1V2XxwQv
yDLXr6zHs1L141XKhMAEi2Hi7Ho8TC5vLRPW7nBlRmM9nb8x4culCJHTn3oE
ik+S/nnAqunHfetxERVQMIHv6vzI6EM9DvEdTBC+G6k47nk9ndc1wEaD1f59
9+pxBGmXqDTAgO/j85zL9ThAyifNBnhsZLm+5HQ9ktNw37gGUGs7uCjjQD2d
7zVA69/aJYmb67H0gHB+3KwGsDCxNyVW12MGaUfMb4CEYXg6aX49DvEkDXBm
leGzLL16/E3lgQ0wv/xQWPmYevQuJQO5BjB5UlLLV6rHId6vAao+r1SS62Og
kzZ1QKBtwjQDXQmDzg8bYJeXoRkwGXjpACkIpZ8v9u23LGGgBWWYNkDj9qX7
3dIZuJfiVxrA58fDdUQcg84bG+DfGdex7cEMXEEN4A2g3zaieJ43Aw2oDdMA
6euDbS+9Y+BkbdJBbACPCIPWECcGnU82QO+09Tu77zJQkTI8G4BXEOhoasPA
LvL1+TbAKat5bh9OMXCIl2mAjO7n1pL9DDrPbABj7gudrZsZmE/av3ENsLZt
0D1gNQOTKJxBen2D0EqNBQyMpOLNBhgusmXdmcag888GkBRPCuVpM5Bqb+UN
kJvydM0xFQZS9iqjAfSiJ6oF9NbhEJ/TAJuLdUf5MuvovLQBnnFqHPwz6pB0
j+d2NIDztunmESF1SJXT/gaoCUl6m/W+Din7UoEF1TJvZwns65AaZ1RZYHHK
Vl3rbB2dD7GgfrbpBtPtdUi6HUoTWXAyvwMfLqmj8yIWvONdt0+dWIeUPTib
BeMnxN7Skq+j8yMW+KsR/hf4tdjcRhqGLHh4yVkpu6CWzpNYkF069fXSmFqk
tosZCyYXvAX/b7VI2W87WDAspVNlulMtUvLqAAvCWs6I/W1qcYg/YsGv830N
yw7W0nkvC/x6Gtg5a2uRur2LLDhmZCa+NLMWnUh7y5YFF84c7NRWr6XzKBbc
vbC1N729hs6HWTCj6kSbQ00NWlD5FAs2V5RWm6XUIBUXubFg2sSuYK2gGjqv
YoF7tYYl/20NUu3jKwtiymy70+1q6PyKBZJVt8+GnKnByW0XpTuaJdW79n7f
ttXQeRYLuGMawz4uqaHzZxbE8SY8+6RTQ+dbLJhQ+HSKn0INCmzJBWaBS9a3
azHCajrvYoGsdu39kuJqOq9mAWHwb3XP32qk7A8mC9bHE76zfKuROh48FoDP
5YhjL6rpPIwFeVWHz36+Xk3n2yy4fk89rOFYNZ2PSdc7Yob7YtNqfETaC8PY
8CNulYrLvGo6L2ODW3azski7ms7D2TBiqvjlgcEqpOTLJDZoNla5pzdWIWXX
T2fDsJUXxm/Ir6LzNDa8nrh7VGp0FVLx+WI28C6Y2e32qqLzNTb4MVX3sJ9V
4XiqoLLhyXBL14dXq+i8jQ0ac8cZzDxaReftbPA40TqjaEMVnb+xoftK+g0n
gypkkzjvCTZ8Zl4abzqmis7j2GBXG6+kOlBJ5/NsWGj0CSo5lUiNn9fZIHuy
MTokrxKpuNuODVNOudi8jK6k8zo2ZJfcPH7Dq5LO89kQzvj0wNK5ks7v2GAw
V5JvbluJdqR89mCDe+XFLebmlXSex4ZKZy3uaZNKOv9nQ74Z38d2XiVS2y+E
DXlPOu4+H1uJlF0axYbVU0zPB8hU0nkfG+Zv5p8p4lUgFU+nskH7RddF+aIK
Ov9jw+M057ur/lbgaMowYkPNJHx+17eCzgPZMLc76kOSawXNF7BhlMznL6Nv
VdD5IBu+ari/u3CyAuuukAY9G3atLLmbtaWCzgvZMC7aZeviJRU0j8CBzfzW
Qe9JFUi1I2UOcHaZvp0wvAJ/kbi8Bge+Pk6S92gqp/NEDigs+715amU5zS9w
oHrS7pMhSeV0vsgBM9l2E7OgcrxBlj9DDiz4wW9hu5fTeSMHPIsen3Z5UE7z
DhzQXq/7ZqVVOVLx1AYOaH0bea9pbzlSdtVWDrx/GqMTvKacziM58Pj2/Uu2
s8pxFmWQc+BqebqVsWY5nU9K/32DjMaY3jJUowJ9DgwGux9qZpXReSUHdk3r
h5LcMpqn4MCD1l8JRHQZnV9yYITHhIow7zKsIOXQEw4c2Zv5MNilDLOpPFN6
P+NWR4XcKKP5Cw588Gi/FmtRRuebHEhZ/SAya0sZ+lwmDRMOTNH47yZrSRmd
d3JgRa5xmMLkMprX4MC+4k+WBspleI8qCByw1B3lfLS1FC83kQY1B2A96Lyu
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
             
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -14.977182997740876`}, DisplayFunction :> Identity,
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
             TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{
           0, 1.}, {-14.977182997740876`, -0.003671844508486185}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.1\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {360.53333333333336, -189.525}, {
     Center, Center}, {676.0000000000001, 361.00000000000006}], InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJxlXHdcT/37TipkxDnnMxpkJTMyk7hJkZktKhmPmZRRlKySXYSMlEglEWmq
yJ321N5775SsjL7vczr9/vn1z/O6X3Gcc973uO7rus4zZrf5hr2SEhISBlIS
Eux/HVtDnvyID1i0PVF63O4B6hhm+jNV77gCLLNfsCizfCKW9ISWRqyfDDO/
VbwdfkEV22pO+TUEz4KxGV++VQROwLYVwrqvizUhU++2+cjRE/BkfuGtc/sW
Q2BJ2nXL1yr446qvmsOrpbDzSmTp2vUqeFLrZOq1zmVgdm/D9teSKvizTffQ
LY2VsGPRCcomajyeesoMvHd2Day+YR8zw248/nnRkbVm9zpoj562xW71/4/v
xB8YuXnNTjj03zDLLS1jceI7g/X2Bw9A++Mv+akjx2LZJq9PBdoWIF7iOELq
+hh8scatpH3dCYhMvlcqKz8GLZfd/S5jcgq+3qud+CVyNC6CG8NHmdnCxdfz
s6TMRqO0kraL68Lz0DNZvqx54mg8JF401kfHDm7W4w3bQmVMZzTfvF11EVJn
eXdlmSnjnBFztT5suASfH/xT1hmijK5DZyYlbrsC6lPuVp0LGoU9g9S25Oy8
BjLfV3u67xqF/8lMri7ffwPyhtiYRQpGYbLkBIvmI07wcHL1l92fR+L9nltn
f2veAnuzwSobHUdi8t9huhcWOcPkRY9tbfRH4t/fNwYP0L4Nq6zd0ocJRuL0
btmsG7p3wLLUxSSlVAn3/LzygFpxF8q0I8THXiihC3naB6tdYNrFXbLPTiph
QtdFlVHr7oG9FGSo6ylhd6dky7ON96FG9vfrFAUlnNZxPnDS1gewwCXKbW+7
Ipq0/zv1ZvtDWDfn+rDIOEW83WoLc3a4wo5it+Vd7ooY19wtHbnrEQgb8Oj8
k4r4s/FU6uK9biC5oktebYMiTm74fjv+gDssrbf5dkJNEQ3rTmxbffgxTOhu
G0YPUUSnmk7lLHMP8JgeZp/cpIC7jmp8fTn/CZwxWZJkmayANhYn845EPgGr
+90tf/wU8I55aLj6wqdgJnHBNPiGAvof+ebWFfUUwmv3P9I1V8B4s9nnwxZ7
wnezOc5hGxSw/PDxPTafPEEpe1N05lwF/GkauGyhzjO4dWGCdryiAtKmHZMk
4p/Bvu12QQf6KeDUQzOGxiz3gpsnHQ5+rJfHZQfNvzgkecGKoJ/omy6PJgde
Z+ut8oZ3d8NGLQ2Vx5P7W0MHp3nDf8ZLZfY8lkfnfVNd09f6QOW057JjL8uj
317TM84ZPjD41K6xqy3kMfY/v52bNjwH76IDT0Xb5bF0T+NSUc5zaFHuum6k
I48/dk9ULdrsCy4706Tlp8uj3O79su75vhD2Y3/TIgV5nLjLp9Vk2wuIy74c
kistj9o7azPGFr+AqKtBdGmHGA1NxgfXGvmBIzXgiXaZGC137LnvW+YH56b8
EFMpYnQy9rQx3fkSNDM2WC9+J0Zfo0pjtaqX8Of+UAq9xRhtOHpJx55X0FSn
Zvz0jhiLt7MXfAUahqkXAy+IsWvb4wEn9/vD7PeW2xZZiHHwttKm+Y3+sN1B
tlrBRIwqBkrpfw69hu7gck/ttWJctNXw7ceW19Av7cegoIViNNjietfuyBtQ
z3p+fcc0MR7dXHhS98sbGLjI4LnRSDHqTr4xTWp+AMhs3G/sOlSMWS+meNRa
B8CBSq01Sv9EaDIpZXhCRADEOlxTyWoTYbPvITvf3wEg9bk4I61chKcmynZd
1XoLY5SvlP3LEKG07wtyAm/hTMGLs6afRHhbdUX+6qi3cNFu+PfBwSIc9bxB
T63nLTyf4PSl2VuEfhOuRMgtDoSJyt2+Mg9EOM9HdSopCah1PTtt8zURxqok
uGdFB8IJE/N9mbYiXOe9Ty5YMggcbk30tDYXYdl4mQsuS4Og4b2Sl+FuEZp6
eXdaXQyC9T7bHu/fLMIf43T/M4gLArexk6y89UR48VlN7nyZYLjyEDX7a4lw
xLiLyxWXB8NT/TnDXaaL8LHnuPA/l4PBatnysE3jRDh5bMzkssRg2Lx0u/4C
kQjDnu52+zgoBDyMdfNWDBahzhjJYU9XhsC6q20WZ3uE+PnJ03N210PgKXMp
LP+rEI3Y400NAfPoEfs3NQix0aNit+7QUGjSHKL0rUSIVsrncyasDYWzy5wl
YzKFKOmhvGzgzVDwmTG8KyxeiDdHfQxr/BwKa4u3zcFIISo93kFOJAyisi9O
6QgQ4ouR/1xfrQ8DU2mlfet9hDjH3X2I0+0w0NT48T3qkRA/KS08a54dBkfX
ztVb7yxEfbY9M+9gQNg147+XhFisaLtr5uZ3cPLvDP0yWyHuf6SYTd97B7dt
652SjgmxSyFS51veOyg8f2lWxgEhXnDdHponCgedTduDfuwQ4lCFbtV3BuFg
qWbzeNFmIbo+ZH/C4eDaPxFPVglR/eFksUtOOKS9TXz5S1uIiQ8i792SiwCd
tEeqBzSFuPPBasGNlRGwR0LFv1ldiD/ul9657BABn/xGpdpPEqLT/SOUPUbA
rKrnLdPHCFGFa9gR8MdrtH+7WIjvydVs5kbC87dZg7OHC3HTvTFOlkcjYa/k
KN2wgUJscgkccvRVJKRMTa4IliD377L0+uH6SFiU6qsc91OA5OYGHRj7Hi46
3lXr+iLAN3f3Xtlj/B7i/h0wnNIowOXs+HrwHqAg5/SJSgGWkbvbnv0ePJZb
D/hcKEDLO2KpLcM+wPP2BWSiCXDInRd261d8gOb3ix68Sxbgs9ua/dZc/ACh
0Z4NG2IEuOB2yjm9jx/g7Pn4nd8iBZjlbPRvaTf5/bCNO3yDBXjQmW34UXDz
U/A1U38BSjiT8WQRBaaP244v8hEg97gvo0A5xFg8xkOAaree/FSvi4KuXVKN
1AMBxt9UPzltzEfouvlytsBZgEY3P32baPQRCsPCyydfE2CX08YT4+9/BJu2
G9H69gK8xg2Ej3Ct4NIFe1sBjkiIeOcog3BCTY+KtxRg6bL+pwaPR/AJjJMT
mQvQN37VvKtLENpssjdYHRDgCW6+Ixg/s/Ks3iVAiC8JuWiLoHk5UHqvoQAH
L1OxlHRFEM6b8adtkwDz4tiBgVCHGmfOrRWgp27o1785CJHMDnkVPQEeifsX
eLoT4T/Trvr8JQKcr7v82C+5aHibbvHh/gIBSsexDxgNF7UHjTk0R4AZOgVf
ulZGQ5mxyg2d6QJ0ix0dcOxANBjn33o8ZZIA9+uwAyUaZPK+qymPE+Cs2Ldq
R55Fw/m6fcOVRwqwZ2l3azNGA06tmqQiEmByjLb/wbJoMPLQV100grxvNl1+
R4NkVD/N/YMFuCsme8pe+U9gnVdy+4G0AKcuVWqumvsJ2haG38/tYfDnJ3bg
fILwrfYzRnUzGMte7ugnuLTjwtRjXQzeYo/j5ic41HDUPLONQUPtRQ2Frz4B
NUyQsqCRwQmfLj3fmvwJti6wn/W2msHOJZ/35dZ/gqC2N2bqZQxGRYsmbJSO
gfRVgRrvCxi8uoQdSDGAFiv912czuDna12vt4hiI2TTlbEcag1z7MY6BZfdV
Ux8lMtiC88etPB0DxV5zC/RjGHy32K4q4UEMzN9G7R0WxaA9Jj/VDY2B6iua
G4veMai/mCaPHANvz1WvCwhiUAHZgRUD4zwN5t96zWAdeJVHDYuF0Qua+tu8
YDDwY8tjramx4Pf5yT0zLwbPEvQSsSIWXjzb0GjmwaDexzMjNfbHwsHGzZdP
uDLIcAkTCwcuH553xoXBiqhhbrM8Y2G1zYSH928x+IobaOT3crLqkdcZPBnl
oTC9NBbU7ZwGNFxicCn7+rpjIbi1rGOkHYPDomaQjhMH5pNt7u05w2DRQmsD
3zlxILm2Qf3FKQZ9PrAvMA4myIUb/TzO4NGFsvnPLOJg0sPXsMGcQQIuSQeJ
gw5Py6LgQwwOXPhos8fLOBh6rlp59D4Gc95XMyOT4mDhzjMtd3Yx+ERrao5r
XRys0myoGWDMoOn7E6QjxEOIvu1QRwMG53IXjIevY/cdUtjEoOR7aYo8M+ya
tzstXJ/B9AVrM52N4qFWwqJs8yoGXdn2aBMPTZ2L834tY3DvgnJ9x/vxYPWw
v4u3NoMzIlXlBofEg+qLkufbFzH4R9Mi/UpWPPjVpceJNRnkyvdLPIyrLikq
m8PgHbb9DE0A+5N7XrxSZ5AcxhDJKQlwYGSymt00Bidrsg0pAa7M/bbWZBKD
38OLrv3dmwBv5j4cpKPCYDSbLvYJIPgdvGLGGAYdw00H/XqSAHKVOn/GjWTQ
YH5wolVUAqTp+VPK8gyOJ9OzqzgBOj1/nBojYPCLBlvACXDi7U+VKSMYjGRv
T5gIs58X/l0wlMHLGmxHSIT1VhP/bRzE4IZ3oxya1yeCsPmZ1HFpBkdpsBWc
CPKTT4142I/BprA3/etvJILmveqB8X9pDJnHVlwirFDSbfn1i8YLYWxCJ8Lk
1aP8Zn+ncfU8tkIS4UDUNGWrThrFYZkSZZJJ4HKwbUdUG43Vc9mMTgJqzC3F
oc00vg7dfa5wYRI4hBdd311PI2m2JAOTQL32QGdaNY3L2HZ1KgnqjTZtUa+g
keIOOAluv12y6FEJjaWk+2UEJcH9HJnXMoU0+s5JIyecBHLTBlaeyaXxRIjg
d0pbEig9jbr5O5PGxWx5DEmGxNUznc6l0zgkxMc6YVIyePumvxqUQmP+7Hby
BpPhulvoCNcEGj2D2QdOBlfPkXYzYmk8wsJvu2QIcvghTkMaNdnj8EiGYr3p
H898oFF6NrswJYPOsO6VqhE0ZgRt+xZelAy51ltK8kJpJMVGrpgMKwcfsL0R
ROOBoKbjIYIU0Oi0m6EXQOPsWexPCmi1SvoO8qexh3TngHUpEMc8Vsx8QWPy
TLahpoD3s8/Kj31ovMeO2+spMMI+vd3iGY27Z26eMflFCgzdbBCy4gmNaoHu
7c/jU2CF8TN9VXcaf6nXvVapSYFlbeI/g11p5Npzv1QQOHRu/36PxlvsOFNO
hQ1HN1nW3aHR6C3bYFIh7OqEhuJbNE5UH/hKaXsqDI/afbnKkcavAetMXU+m
Qsuwh/7V12jk2oFLKsSeubuu6TKN1wIqG10CU0Fa88Lu7xdp3ELujs5IhVSm
LH2AHY1jyfRwbk2Fe+4n3486R2PrdLbg0mAcykkvsKXxHZt+E9NgkF6RvZE1
jRenr/aRXZYGh4e93GhvReM6DkCkgZzP9YtvjtNImhVBqGng+WVQWoUFjezT
2j9OgySFvLWiIzQGso/7Pg2m6Bwr3GBK4xkuAdOgv5xK4J0DNK5Q6xnz93sa
LHq2+2jhXhqZ18srbZh0aHGbYTB+D40V01gAkA4bVFwsT+yk8ZV/gYmVfjqo
uUWMSTamkX17XYfTQctpmKWKIY1L2XF0LR2mfqoNdzCgcdg09kDSIWd/R3PT
ZhqLXnUbmcWlw/WkDrnNG2n04QZcOjDL1glj19FIDrf4gMRnON+wuGfeWhoX
su1v5Gfw9diWGLCKRvY0/lvwGWZEzt6vtoLGHDItqww+g+ro81EBy2h88pK9
wc/QFT26YZ4OjaZTvhPE9xliL4dmxyyhcR5bbm8/w4CrNsc2AY2SUy4LC9M/
w5RZ1pGNWjSm+33O3dLyGb7uPRZhr0njGoIem6QyYIBVieFYDRq5dKMzAIKO
ucXNoXl8lwFDzq6xMptF47+cU40T1DNAf3FXhbw6jTWkm9dCBrQVWBQnq5F8
3sQO0Az4sDPM8PxUGgM4PJgB59be2K45meQ3e7nDGWCR0pj/U5XG09yBZJB+
cSU+UoXGXZs2qD65mgHdRfEq9uNIv+DwYwbMFv+qWjuGRu51Pc+Ad/12DlJW
Jv2DG4AZMKX/IK+vSjT+3Fjt/Sg2A67YmTinKtA83syAqwu1E16ISX2w8KMq
AwojhsTeEdJInpUgoAyIkb6faM3QeJOFdz0ZoBtlJviPonl8mglJqx74bRhO
o2E2O8Ay4YrFMkvdYaT/sON9SiYU2DZYaQ2hkYALAlkzQTJTaYy6LM3j2UyY
tcDaZ8ZAGjuz1uwebpAJz5aYbpgtQ2MBxSKUTHi49sA4LSlSb+z4tMyEGY/0
KT1Jmse/maArna5gIEHj1ayyisF3MuHUztx5h/9RaE6xiCMTNkDVwYt/KNzM
vr6ATPBMWv3Do5tCbjx9zASmA5biTwpHZ5mbDEjPhJ1RYSq13ymU4V5gJnQe
SN479BuFLevZAZIJjzuW5S7+SvH4OhOmtWmOPNpB4Tu2/Q/KgnhV0Pdup9B9
hDdBBFmQJRp3orSVQvv1K9zPT8gC0R3dS/ItFI/Hs+DOhFbbbU0U6meyF8yC
XXLX9d0bKOTa64YsuDBDW7a2jkKF9UVko8qCv/ZXb82opXj8ngWTdnb+PldN
YV3G2OJfZ7Pg2oqmmdmVFLLb9TvHLDDS1pk+uYLCt2z7cssCrWs6/R3KKLzP
4f0seBjneau6hEJbroFnQap8Y51uMYXkMMgEzgLpB40VLwsp1Fv3R3w8Pwsm
q1oGCgoofj/IAvOd1Zr2eRQyHGDOgp0DV5zqyqGwW66RTNRsmG0YZHgwm8IK
gjaOUNlwaEpRZmUmhRzcHpMN7c6yI7dlUPiSLb/p2XBAQ3lkYTqFzuztLcqG
KUk3oozSKLTSHyU8tCYbjoeIflenUPz+kQ0/nyzIOZJMoTYLZw9lg79X47K/
iRROJGjGxzobvKYP1b6ZQOEwfbaBZoNFVHXW+HiK31eyYan8sm8fYiksSv9B
KiQbFBPW3tseQ+FHFi4GZ4Nqw5Ck7mgKvddyGQ1vPXROPkYKr3P7TTaMHxDv
qvuRQhYtlVVkw4DxRxZ9+UDhFq4BZsOZqV8MH7+nUIuFY/+y4eai7sHrIikc
S7ZJxaE58PXedYUhERQOTJcnJ5xD9iMvn9h3FLYNZSdMDmj467qfD6Mwmy2P
+TlwvbKq3+JQCsNZuKOXA/t3TUyRDKHwcRrbwHJANrL1V2IQhReHsg+cA6Fv
O6/cDqTw0Jqv5IlzIHNirqXJWwrXscdhnwNSAo+o6QEUzmXhhHMOpDT5Gfd/
Q6HSUHYC5MB9yW+bivwpZNGe/psciJQ89yj4FYVkWLUOjcqBZ0/CZ99+SWFa
KvuTA/2syuWP+1EYxI7r4hwYGz5y+dYXFHLreFMOjI6c93GRL4Vnb7CALwfW
vzY9O+k5hf+lGq9KHJAL32oqT4t8KFw5hO3QubAiVeHdQG8KZ7DjUCUX6jwb
Zv19RqGQbc+zcyHCa2p9lyeFLPiJ0c6Fyfd+F7Q/pbByMNtgcuGXnc631icU
JrDr5c5cCNQ2XNbuQaE/O27Mc2Gqj33K18cUcu3gTC6IHASnf7tTSJbTiWdv
5EKeRK2hDIl3kLtb+CgX0kq272HcKNRh17cXufDz+4wbKo8onMwVXC5UL3mU
M9+VwuFs+iXkQlTldZ31Dyn8tnLbJY28XFCKkCoxfUBhMUHDP2pIPGSczdX7
FEaz69HXXHggVevgfY/C57LsgpsHJjhuU5ILhdzjjsgDdQkL+ttdCo9xC3Ye
jDQxHqNMYgMOMOVBwkxdzdV3KFzErh8L86BhvMQe29sUjidoe/rqPHj+wdvI
z5lC2WvKe9q250HFgglXKm5R2J7ELqh5cHDNEKEyiXPZcXQqD2z2um4zvElh
JAvvL+eBQ5ext6sThU+vsoAnD9x1Qr6XOFJ4KYkdcHkwx1h36VgSHyZofn9Q
Hixrynx06AaFG9j29ykPwgWDckKuU6jBLZh5sCaoW0qKxKPItPQqz4OjLdUu
+tcolBrE3mAefDhqfuzFVQob9VjAkgdT/awfSpCYK7fB+aD5xCF70xUKOXiq
kA9ap/wy316m0HWg4uMdk/JhT7FJ2AgSn+cWxHxQ06i6fOIShfvI9C1Zlg/D
6VlaRQ4Ucse7OR9+7XCP1yMxB//+y4dOr4D1wRcpFPU2QEhef/nDWBL/JdtI
/oV8qHazU3Kyp5Asu2TDyoeiYPvlkiTmLueRDxXzd+4+Z0chB69e50NmmuvC
rxcovMvRPfkwx3zLX3MS2yRMIiMpH6z0Olzbz1O4cwDbEPJBqVNy0DESc3RF
Yz6Efzyx6sc5Cjn48iMfVnmcWuNA4l5+pQCSQxLWyZL4BysXCAogWGLdsAdn
KSzh+JYC2PZx70k1EnN0wMwCyJUNj4g+Q/H8SwHMahuRvpXETmx7WVcA5wuL
a5tsKZ6PKYC4UEvnSyTefoldsArgxpP1g1RI3MvPFEBQ8dI58acpVGHp0+sF
4Ph4QZE5iXv5mgKo2YF1w0nc4cAmTAFMLRQaRNhQPH9TACrajdf3kbh3nS2A
c8YNJwUk7uVzCkAgW6aUYE3hFfb1VRdAx7D4M6dJ3MvvFICeXLLTTBJvYuFG
v0Kg/7hsazlF8XxPIZzyOZ7hS2Jlsg2+G1VI9vcVf/eTuJf/KYR/PeKiSSRu
lmIncCEMerXVpO0kxfNBhfCf7N2HISQOZdexbYVQfnug3kUS9/JDhdDT/arf
ahLbSbEXLATF9pFzFEl8gOOLyPWea3l1WFG4lmvQ5Pcl+jeiSdzLHxXCLV3T
gAcklpdiJ0ghuNRZHT9G4l4+qRAoDcv8tSSutWc7fiF4xDeWTSNxL79UCFa6
shZyJA5g14lWcn/DksO/WlI831QIw3aYOheR2NaeXTCKIPC8Y79YEu/m+Kci
GLjLZlgAifXYdJlYBNPu/X7xmMTTOD6qCKTeddbcJDHNETpF8G/rPR97Ev/i
+KkiWPZqg6QNicsl2QIugrUuEu3HSNzLVxXBiCxm3xES+9mxgKgIdqzNMD9M
4l7+qggMldOkzEhsJclWcBEk15+aYEHiXj6rCHQnf82wJDFHL0UWQaf/8dfn
SdzLbxXBKUPN+Csk5sZHYRGEOytL3SNxL99VBI9H7EnzJnHBheMko4vg9d/p
onck7uW/ikF3+diaVBKT5YlkYDHcTNw2s4bEvXxYMfR4r+j3j8TmF9gDLgbj
UOl1CuR99/JjxXC01l4wn8QcPaJfDP02Om/fTuJevqwYxkg4KZ8lMVceh4th
0rWfhl4k7uXPikHqYf6QNBJnsXDyWjGsf75+/k8S9/JpxTD12YdCFZJPbDe9
9LwYrP771bqZxL38WjE4brt88gqJD0qwd1gMELPRLozEvXxbMVSOvlXP5jO3
3lcVw4Gic1FqJN97+bdieN2tK2tKYgnupwRag9LiXpC4l48rgbRb67CGxKns
uBxZAk4pJufUSL318nMlcH9jvO0JEvfqnyVQ/Uuz5j2Jz3B8XQkUy4QFDSD1
vOdc4UJrgxLwu1fRtInEKzj+rgTO/l152YvE3HpqWQLr+mde/U7iXj6vBMzH
eH1ZSfpH99lD70/cKYF+njcinpK4l98rgeVTo2q6SRzPtoOAEhBnVFhsIf2p
l+8rgTcPxhoFk5iDz+kloNwp/5wh/a6X/ysB3btGB61IbPyPLbgS2KK7a1MJ
iXv5wBII8dkeuJT0z4kcgCkFYF5Y+JO4lx8sBf9LNxzkSf/t+ssuhKXwpwx/
nCNxL19YCqcnqhd8ITGyj6tTCtOgbuh/pL/38oelENHk2lJB4ussPNhVCgmT
jMIMyHzo5RNLQbscG7NIvJVb6EvBUT94mh6ZLws5frEUhssU9k8g8Vjy9irc
SqFeNlpVj8yjXr6xFB6GScdkkbiNlX8jSmHXDiej9WSe9fKPpSA3+veVChJH
sHRbfik0aA88sZvMw14+shR+9GtUayexA7cwlEKo7qE4ezJPe/nJMhh0fc9D
OTJv17PTkioDj7R87WcknsfxlWXgOCWuZBGZ10qsPDSjDLapH1ycSeJe/rIM
xqlNfHKUzPeG36xhoAw2SjYcG0jwQC+fWQb33LZaPSdxEEsXmZaBjErRCz2C
Hx5y/GYZpFzuVmshMXe8V8pgglpQpzPBH/9xfCe53rXJyxcTfMLBIR9yPUmz
KTUk7uU/yf2fnzrtPsE3Qg5QloG1m9NfXYJ/evnQMriYnS77g8TsNF9eWQYK
G5PuPyN4qZcfLYMXAwUDthF85c/SHf/KQBhjOldE8FcvX1oO705e18ok8Skb
76lLlcrhyEL7WEeC13r503IoPlbVoE3wnA7b7ueXw5jdOyP7E/zXy6eWQ2rK
FYwn8XCOQCyHFfdSztwleLGXXyXX8/9psIHgSbIMkgIph88L3q5WInizl28t
B1Wjqd/rSfzcmgUc5bCoU7kolODTXv61HASBRuaXCH5l0UbYm3IYHrOyyoDg
214+thws1XUOTiP4dxGbzmnlsLBstroUwce9/Gw5nEubMLGUxLIs/Gsqh7+H
V4W/I/i6l68th/6VLr9dCP4+xOVLBagoRyhaEny+gwMoFWB3m0ncQvA7h7ao
CghfZOyoSfA9N34UKiB7zDin0QT/9/LfFaA4/6jvQC8KJ3ELYQXE2enWdHr1
5VcF1FkXbygn+4McR0hWwNKdg2vSfPryrQKcW9K2RJL94xtBc8eXVcD3u3+P
vfXty78KMPNoN/ch+0sRp2eSuN+0O+5kv+HWJaMKyJTKzb5H9h+ufe6pgD9/
+mvcftWXnxWw9/CtTzfJ/uTziAUIFeD+Jm7vzdd9+VoBCS6xo53JvnWDXUcu
VMCbXUFSLmQfO8flbwWE0meoR2RfO6bILmTkz3/RmPYssC+fyf0qeO3xJ/ue
ASvPP66A4Zm5BeHBffldARcaVk9JJPshV/7+FaBbZJJRENqX7xWw9vjnM81k
vxzHJUwFROC0xRLhfflfAQ6GcbIisp8OYuF0SgXo+++fMyOyrx4q4Hb1KpVV
ZL9t384O6ApYvdJ55wGy/1Zx9VEBBpMGS12JIv2FpacayPms7TfW72NfvVTA
iLMrT6STfTqCTd8f5DwH+6Z1RffVTwU8Pa9oPpLs4084wrMSTqt5dywn+zpH
/wythLjhju4n4kg/YuEgUwnixbfWPIvvq69KyN6qKp1D9n+W/fAcVwnWE9uC
ZZL66q0S5k4Icl+QTPoVd8CVYBYkN/dYSl/9VcKks5OWvkwl/YsbkJUQG7Pr
W21aXz1WwlP5E+1jP1M4cjt7IpUgc7xAfndGX31WgrzHzIHPMkm+cQtJJej2
1A+pyyL5xtVrJZTbrypUyiH5VsgSpJWw9aNq3H+5ffVL7k/1gf7rPNL/WHrA
thKiv234+iu/r54r4Yy17KPlhWT/Yen3a5VQpVY36X5RX31XgsfV+lcNxRSv
n1fCPqeB8VqlJN+4eq8ES907Ac5lJN/YcexbCfN21mo1lvfVfyWMzzXNXFpJ
Icu2isIqwY8e/sijqq8fVILPXFuHv9Vkf2LX27hKaDXr8Tau7esPlbAydK7v
xzqK1+sroa6wPGZcQ1+/qIRpp5KcrzaS/aqQJWAqoePfmaCOpr7+UQkbI51s
DFtIvrHtoLMS3Db47U1oJfnG9ZNKCFKc/Gd2O8k3cneZElXQZbHv370vZH9l
6diBVTA5aa/iwE6K9wdUwVCfhOGnv1K8XlQFrnu95nR0kf2MpbdHVYHvv3+h
B7+T/fYnKyBUwY0Bf0bV/CD7Gkt3TqsCm3jzZJNfZN/l9KUqeBhbM6esm0Lu
cReQ34+w6TD+Q/ZfLgGr4G3ryu7yvxSacARIFcQVhdfs6aF4PaoKJIbWeDRK
0KjLrhfbqmBR1LJmS0kaNTjBtwq+5Eh79fSncQpHOFdB7dK0+OvSNK9fVYGp
1MYH8gNoHMEdSBVI2pufdhtIoxRHYFTBwtp5atNkafzO+R+qYMUiq86Pg2ls
5PSuKmh4eid001AaS9j2d7cKtB80VTQPo/EzS4c9qgIlnRYrh+E0fmLh8bMq
+HM7K2oM1aePVcEQp+4jH2kafbeyBAR5v20B400END5iyy28CrSyvmZKiGje
b1EFytVjRV5iGjn4mVAFbidNj6xQoJE93SWfqyBw377aL4o07iPo52leFbw7
v+zPw5E0bmOPt6wK1hTlVOso9+lvVVBlGVLTMZpG4PxJ5HmnOz54MpbGmZxA
UQUZjrXb1o+neX9HFWzYbdTVf0KfXlcNPZ0Ddr9TpXEwS5fIVoOO+53wI5No
/MfCpxHVoF86T1J1Co3sNvxHXA0fdaNVKqf26XvVYNV+fYa7Go15W1qmR6pW
w6rIypGGM2hMYumI6dVgbvD6i8JMmveTVEPMQWvvklk0vuH0wGqw79694Mkc
Gj3zWEGuGgyNnoXvnUfzfr9qmFt3c+K0+TReEXIFAgswYPd3zT79sBpsigbf
jtai0WwLCwirCf5uueS0iMadHGFaDaMkms8ZL6ZxI+dfqQYVgcBYTbtPb6wG
WVu1fv10aJzPLeDVMCar4V6uLo1TuYSpBm+3b7KvltOoLGQZxGp4EHHr1MUV
ffpkNXwXiT13rKJRmiM8q6F1hGfDgjU0/mRfn3c1bFn5db2iPs37ZarB7YLW
qu/r+vTMatAd7jK1YAONGSz9G1kNMsNHFUduojGGszNUw1p3W/OnW2gM5eTN
atAwsu931aBP/6yG/quOb7HZTvKNHW8F5LxuxBfsNSL5xtKrFdVQdtNn4sYd
NO/PqQbJz4NWau/s00vJ+wvS2DVrN8m33PpDU76T5x0RMW7CfyTfuAZdDbXU
lWqFfSTfOD2oBnrK2q1HHCD5xumrNfDs8Z6YQYf69KEa6H97mKLUYZJvlmzH
r4HqB65aEkf69KIa0o/3TPltTvKN02NrYE/7BLXfR/v0oxqIfCNq+nOcxo4u
ljCsgc89nvclrPr0pBoYG8JIy5wi+cbptzUw/WepzlAbkm+cvlQDtzSOHBXa
knxj4dWWGtgnu/7EmLM07z+qgd23To5TO9+n99bAj+JFnjp2JN84/akG3sRa
7dp8keQbS28dr4G9nu7B+y/16VE10Lb1SuXpK336cA0cX9/P1ekayTdOn6qB
p8/7ffK5QfKNlYtu1YAiLPdFpz69qgYSxq7cUXKL5BtH2NWAy+K/pb9u9+lX
NXAlV3GyvAvJt67DJKNr4NGE6R4a9/v0rBqY9OSyjeHDPv25Bgb0xMw8/6hP
3yLvK/rlfR93GpuPswdcA9saV57J8OjTu2ogoNn2yJ+nfXp1DRSPPvtrkhfJ
N07/qgGvwir3bT4k39jyaKyBielurdd8+/SwGhgoc6H6g1+fvl0Dq1SiNDpf
9eljNdDSaXRp4hsa7Vh6QaYW3kmHee5826eX1cKI9fdsXf9PD6+F8y+UynJD
aOTgy8haMGvupul3NHJ0/fhaaDr7q3t9RJ+eVgvuP9673X5PIyefz6qF6Hmr
B+dG9elrtdDTLlaXj6ZRnmuotdBs9UVsEtOnt9USvBiLPnF9enstnPwZPP1L
Qp/+Vgs//B5uXpBMYy1r5zWphRTZkepXUvv0uFownllUl5fep8/XglheP2RM
Jo3c+mlZC49OOpmcyKaRk7ttayEx9mdkYm6fXlcLZ+TyPo8q6NPza2FW3hZX
q6I+/a4WpMzagnJLaLRl4bNrLYy2+u2sXk7zel4t7LKg6ZuVffo/eX+efze0
VdPIpV9ALZyaPGeFfh2NHF0aVgtVWv063jbQvN5XC/0mXN8obKaRk6fja2Hk
s5rDtq00r//Vwp4PQ3Rr2mmkOcKoFt40UQ7LOmleD6yFg58mHw7s6vMX1MJs
bf8Bo3/QvD5YC9oLl2rd/EVj+VGWoCe/32M0VeIPzeuFtTD32MykY//6/Ah1
oFCwXFQvwSA3jgbVgePFcbRxfwb9WLv88Dpolc5PKJZmeD2xDpamZZ7fPJDh
/Qt1IGVrXp8hy/D6Yh3IDzyxTXcog1Zs+5tWBwtibb7HyjG83lgH405VTF1G
MbzfoQ5mnLaTTmIY5OSppXVw28D9zBoRgxxdtaoOmnXwabY8w+uRdZCSFGRh
qMSgKkeQ10HeiOn1NaMYXp+sAxvfrXIWYxgcygn6dWClUFH+ZxzD65V18MTa
Yev1CQzvp6gDyQRHS8VJDK9f1oFJwGFD/ykMFrJw6FIdXD7WVbxYjcFUTs+s
gwnTgcmbwfD+izr4EbXt3+FZDK9v1kGb3ng/6bkMelmwhEkdjAw91OShwfB6
Zx3krvz1ZcEChvdr1IFasKJz4UIGz3ANoQ6a5j5rtV7MoMUXlqAm7292hsuo
pQzu4fTQOtieOywkRpfh/R118En11b1Degyvj9bB6CUms+hVDC7g6II6GLu1
WfXDGobXS8n7qnmdd2Adg2O4AqmD9zve9xduZHj9lJxHYUFl7GYGB3CAow7c
mhI1LA0YXk+th8sn/WaqGjK8f6Qe1k0ajinGDK+v1oP4La6128lgNpvO8vVw
OrDituYehvdv1kN4YdzIrr0M7zeph4nDDk54c4Dh9dd6oG2/nDlkyuBjUh2r
5tXD5nl3SyYdYXg9th6SkjOrmiwY3p9SD0qKMq/9jzN4ktNn60GiqOrcUSsG
D7F2+031ZF8YWzrXmkFjTq+th0ctS/L+nmZ4P0s9hARVHYs/y/D6bT1c8TU5
fPYCg3M4gF8Pp/acNVx1keQbp+fWg6EGhitcZnj/Sz209P8qbr5K8o3Td+uh
Mc7t+fsbJN84gpbcf8Ttjps3Sb5xem89uIwNa/zvNsP7ZeohbG+MOriQfOP0
33pYUTPig+gByTdWTvSvhy3FTSc6XBleD66H0RVjH0a6M7y/hvz9lsT4e09I
vnH6cD14dwzaZ/WM5BsLd5PrIXfo5kwDH4b3w9ZDd6vt/QUvGN6PUw8T9j5W
G/2K4fXjehhTFGgu84bkWxu7UNfD9HWTB7W9ZXg9uR5iZRbW5wUzvH+HnGeN
smN0GMPry/XQuXzHKf8Ikm/s7Uk3gHnq+H+uH0i+cYCoARxWjVO6hgzv92kA
1/qHgTYxJN+4BbMB6kd8KDgcT/KNXX/HNcBUR5U7O5NIvnF6dAMY/9pRsDmV
4f1BDbDAwTBk9WeG16cb4FaH+lzdLIb/fqMBpLwcJkMuw+vVDSC7oiNbs4Dh
/UQNMLT/iVEaxQyvXzdAoonRoHllJN+471MawLHi4/Z5lQyvZzcAPXqE6fwa
hvcfNcCFs5a/teoZXt9ugLLUeUd1m0i+mbGCUANsnj++Tr+V4fVu8vd/jMrd
+IXh/UoN8ODLtMIdXxle/24AFGRbHfrO4ETugRsg5EVSw8lfDHL0y5MGUJR4
nOL8h+H9TeT9yGnu9upheH28ARSWmQWFSgqQgy+hDeB342ldsrSA18sbwMRb
t7BioID3Q5H3r+F57OdgAa+fN8CPAQOej5ATILJ0ek4DLLE9cXoaJeD19Aaw
eH5YZ7VAwPunGqDa+Mf8Q2IBr683wLowv/irigLk5OmOBogpzE7yGyXg9fYG
GPL8DKaNEfB+q0a4v/+cYed4Aa+/N8LF8WbR4okC3MquM3KNMELTRmnlFAGv
xzdC5a7OuONqAt6f1Qgy0ZVST9QFvD7fCLmfP7z+PFuAY7kFuBH8h9qn/J0n
QA4+z26E9P2/EqYtEPB+LhLbOZqYLBLw+n0jtHyruHh7iQDb2PRb2QiKV+Mw
QUfA6/mNcGRlmvq/5QLe/9UIbR15RnNXCXh9vxGOLVGqOr5WgBEsvbG/EQyY
BMeg9QJe72+EM2FLCro2CXi/WCMkf/20bZaBgNf/yfW9hzw9bihATh50aIS9
gcuvftwh4P0AjeAUul+j/24B7y9rBG2twCt6ewW8P6AR1vQUld05IMD1HOFE
3ueyHLMSUwHvF2iE4P7HfSaYC3g/WiMkJRzddeyYgPcPNILw3+qnHy0FyNGd
2Ai3xx03HmYtQK79JZDnW2r+eoetgPevNcKDy6Dy9pyA9xc0QsKgHklpewE2
HGJvsBHaB+QYbr8k4P0GjXDtT8XawKsC3u/WCEPvx1+XcxTw/oNGGF48zu/I
LQEGs/D0dyO8mUfPS78j4P0ITfBc+qnZ9PsCdGXpnEFNIFUyx9HZVcD7E5pA
rd+QEd/cBXiOI3ibwMLup8z2pwLer0D+/Nr1WuglwL3s51OqTSAqXCg7w1fA
+xeawPtNQMj9lwJcxV5ubhO42be1SLwR8H6GJqgPnHTDNFCA6uz41WkCoX7M
2/wQAe9vaALVN8Ou6oYLkFtXNzbBgIGdFcHvBcjZCbY3wfSoo/8moYD/HrEJ
mh+M9naLEfD+hyZYuXxwyfAEAVY1sgtrE3R/MkWHZAHvh2iCY+NdrsmmCzCR
levPkee5MSXePlPA+yOaIOjCkPB/OQJ8zbYXpybYc/qr2ukCAe+XaIIqq9N/
fxYL8C4Lx92bYNVUV9NT5QLeP9EE+5stdNqqBGjN0levmuBX3OD2c3UC3k/R
BO+Vn2yVahLw3081wZ8W61HXWgW8v6IJtI6stxjRIUBd7nu3Jlia8VTdtUvA
+y2aIHn5rMdqPwU4hVtomuDkzZFJEb8FvP+C/HnrTW56PQIczsGNJmg0GbOi
WFKI/bkXSP49z4rLh2WE+J1dz781QWlP4vSeQULen9EEKVqzTtwZKsQSls6W
aoblkrs6Jo4Q4mfOr9EMBZLLNZER4idWLqWbwT5sY4OBWIghnH+jGVZPUPnV
qShEX/ZzrjHN8Cjl3WMnZSE+4vwczfAflfRgyjghOnINuhlGf9lzPnmCkPd3
NMNvp0aXQ5OFyK0f0AzihlkGQ9SEuJfze5DfbzotCFAXIkfXrW0Gb7m7FzbP
EfL+j2aYtPyZ8I+GEDm5z6gZngS/OeSjJeT9IM2Q3H3GdMtiIY7nBMBmiFc/
7zZGR8j7Q5ph/aVfzz8vF6Ismy42zXD0o6PSuVVC5OS0C80gv7tceYa+EDl4
dbUZBmT+vFG1Qcj7R5ohYPhAj3tbhMjREfebYaT2k0drtgt5Pwm5H9l5g6V3
CJGj732aIbTq/M8Pu4S8v6QZfrpFrD61V4hP97MLZjM4+Oz0X3RQyPtNmsEl
Wsr/z2EhXmbtH7HNsHFrpcJ7CyHvP2kGleknftmeECI3PrKaoW2GjBacEqIJ
BxCaYd3jPJn+tkLk1q3KZmjwHf3C85yQ96c0w6CFyfU37YXI0ZNfmqGy5Eyi
wWUh71dphgTRgp6x14X893rNkHfW4lSbk5D3r7TAwRRnn8jbQpTiBmYLXLK6
tuvOPZJvnJ+lBQb/yni7x5XkG1seSi1wIOieh9xjIe9vaQEZd6XCgZ4k3zhC
pwVu9Ljql3kLeb9LC7ju85sc8oLkG0u/aLbAjLbxux39hbz/pQWkt8/4te8t
yTdWrtBrgUU9btVLQoS8H6YFajIiDUaFC/ECZzhogf92a2j+eS/k/TEtELei
eFsxCnEf99MC82zbZd/HCpGjx81aID3GVOJxohC5cWnZAocSjiZfSBXy/pkW
kEx89XpfhhBncgC1BSBlE70mR8j7aVpgVX+NAXMKhCjmFv4WsP4atHRUiZD3
17RA8USzAYMqhPiPlY+ftkDr8wte8jVC5NYZ3xbQvDZpg2yDEFm2ZHRACxh7
hur8aRby/psWcCiZfaW9XYhcO4hqAY9vgaNrvgp5P04LjNrX+r3whxDfcHbz
Foj8+6E29beQ9+e0QJtHilRCjxBduIJrgW5m7OZP/UW8X6cFokJWlHgPEOFp
Vp5pboHDWV5FnwaLeP9OCwxQ0T0aIydCzm3xi9xPU+rUOFqEHL3RrxWmL/yq
kigSIfe4A1uBah+4P1VRxPt7WgHN7zm9VhbhVE6waIXHJ3KFWeNEvN+nFbR+
r1coURUhxa7TE1ph1rwfS+uniHj/Tyt88Hlz8et0Ef5k6efZrXBx1cgeidki
5MaRVis0P0tSEGmIsJT7PrQV7jzozlXVEvH+oFbIP1PRqrZYhDHc98GtIJqy
9qWOjoj3C7XCvpfZ2oZ6InzBLQytYDzXTPL4ahHvH2qFkE8fkq+vE+FN7ntq
8nwt79B7k4j3E7WC/9kHFWggQkuWXjvbCg8Xf11ZaiTi/UWtoJz8JLl7pwg5
OcqxFVqGV6XK7xUhB0/vtsK5DfB3/kERLmbtHG6tEBpR4mBoJuL9R60wsSFM
/+xREU5gj9evFUB6zgNPSxHvR2oFRmWfKNFahEO4BtgKZmMl1NrPiHh/Uiso
mv1dJrITYSdLHyS2QuZUv7/6l0TIXe4zic8dpi5cEyFHt+e3QmL6BnGQk4j3
L7XC0w/6sbW3RfiBtSPUtsL4V74B8vdFvJ+J3K+zwqW1j0T4jP2ctqsVyq6C
t7mHiPc3tcJ18aUHfs9EeJVt9/3b4Ij/I/W65yLe79QGKdELBsm/EqE5Z/Bp
Aw9V3UfbAkS8/6kNwj9JST4KFuEmrkDaYHj8wvKSdyJczvmhyPVCru9X/iBC
TVZ+m94GB0WrxXuiRbw/qg30CoXU1TgRjuYWuDY4pDdLOydJxPul2mDO2Vc/
R6WLUIYjxNpA7vWLHYeyRLx/qg2WnP4YGponwhYW/hm2QZAgTUK6WIRlnJ+q
DfqHP9XdVC7CTJYuOdQGiqqm8TerRby/qg1K9x97lV0vwjBWXrBug18nZYdP
aRHxfqs2EDVFdtt9EaE79z1yG+z6kCJb3CXi/VdtsCFeLnDWLxHacwOpDXxm
/1Zz/Cvi/VhtMD9vycz6fmI8yAH8Nph++/U4bRkxGnH+LPL7X/s63GXFuJYz
kJP7n7ABu4eJcQnn12qDC9O3eBjQYpzNEdBtkO8f5xQmEqMq16DbAAMkAkVK
YlTgBL02ePfOounUaDHv52qDw/MVzYrHi5GzB1W0Qeuh31tkJ4l5f1cbaA7v
UD83TYy1bPm2t0Flol1Pp7qY93u1wcNli133zRVzbqmvf9vgxpE5MYWaYuTs
N9LtkINJ/mtAjBw9NKQdLG5rxVxcKub9YO0wr0l5+e/lYuTkFMV2eHgT9K1X
i3l/WDu8bN9sI1ovRs5+MLkdfkhGCjduFvN+sXYw/fBzeMY2Me5mb0+jHVIH
p9Kbdoh5/1g7yKW+lC3YLUY9zmDSDjIO+54Z7hfzfrJ2mGMpnPzaVIzc+rul
HaT6m71VtRDz/rJ2yPhrX+x9QowcXby3HWI/HPs4y1rM+83aQe/+EttPZ8TI
ocnj7VDek+K2xE7M+8/aIeCj9PasS2Isr2AXrnZwWSsznRQV70drh/g4/aOf
boqRa1fO7bA4DR2X3xUjJ+c9aIep72Oi0h+IkYP3T9qhwe3VUFN3Me9Xa4fj
6R83SXuKkaPDXreDpd73Qx4+Yt6/1g63zh9QnP9SjFasfPShHU6fH7Q2642Y
97O1g+QfQZVpsJj//r0dlklcDJAOF/P+tnbwjFrh5/FBzP//FNrhlbOmtuYn
Me93a4cVS8rP5saTfGPhS2M7jHZnnI+miHn/WzsYTx98YFiGGLl1/2c7eBlL
PNyXI+b9cF9gzJCuq/0Kxfg/nuk9vQ==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -18.00032043121884}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Log[Q]\"", TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-18.00032043121884, -4.614671465958592}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.1\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1081.6000000000001, -189.525}, {
     Center, Center}, {676.0000000000001, 361.00000000000006}]}, {}},
  ImageSize->{Automatic, 402.2170005662906},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.868475455395564*^9, 3.868475814967086*^9, 
  3.8684770007932*^9, 3.868477149387471*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"8c68cfc8-3777-4d2b-bbbd-28740c34b3da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["rh", "4"], "-", 
      RowBox[{"192", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
         SuperscriptBox["\[Phi]0", "2"]}]], " ", 
       SuperscriptBox["0.45", "4"], " ", 
       SuperscriptBox["\[Phi]0", "2"]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]0", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868473333253557*^9, 3.868473402896571*^9}, {
   3.868473454923292*^9, 3.8684735217210712`*^9}, 3.868473560045473*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"d0468495-7d0b-4d5b-ac8f-5693e041507b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Mu]$$ = 10., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Mu]$$], 0, 10}}, Typeset`size$$ = {
    360., {111., 116.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Mu]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`rh^4 - ((192 
          E^(((-2) $CellContext`\[Mu]$$) $CellContext`\[Phi]0^2)) 
         0.45^4) $CellContext`\[Phi]0^2, {$CellContext`\[Phi]0, 0, 20}, 
        PlotRange -> {All, {-10, 10}}], 
      "Specifications" :> {{$CellContext`\[Mu]$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {156., 162.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.868473360682496*^9, 3.868473403322994*^9}, {
   3.86847345585721*^9, 3.868473522108536*^9}, 3.8684735605278063`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"25211f6e-f568-439b-8958-253f18e3f1d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"0.5", ",", "3", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{
  3.8684756657252283`*^9, {3.868476437124279*^9, 3.8684764398671093`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"f6f804cc-48c3-4d69-9bfc-9d719ad9c87f"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJxlXGVYVF3bpWFmaJBGxUIR8zEw4EZFRMJEBYtQxAAbRQxsxUTFwkQRUFEQ
QUVib7q7exgGhhlgBpAU1O/EvL+++fNc53I4s/fZd6x7rXUeI/dDGzykJCQk
nGQkJMj/3u6Kez2YGW3x1zn5od/Nmfj7gaF8m2N6UBRiv5W1fjKu//et4ed6
E3CoeLw2pnsiFnJ9P7TH/gd3sr797jUirldrtf2yXAzZJaeHNO9OwCeragL9
91jC9pezg7UMJ+DBgIiZVyJXQIQwWZWPjPDJpSfzb/RawwPNSWf1jxjhIeHK
/YFmtlD3syqp3NQI+4ZoKjw65wC2iSa/n3SPx6Pve0od3NdBbMSR8rif///6
QeZew00OruCl9OZyduxYPPWH0/pL+/bC6a1v9TZqG+JGx9DU6uWHYXJ7+unX
Pfr4vcPzetG64xCZoe37WUkf+1gHDci5+ML9kvWVLhv1sAXcUh3rfQa2WhZI
l8XpYlmD5Q+Dzc8DFFuUbZqhi/frWEwIs7oIcOXoq+5YHVyouTjqi91lWD90
MNZitQ6er7ZgadKGq/BpwVyzcp42Dlaam5PtfB0MGXOdeXe08T/GzM3lrjeg
CB93NDDXxrvlTFqaPG/BjddqObt7tHCu1JTDHQfvQNnw4c2CD1r48b/AcyOL
AyFyx4OJEvuIf/+jvPKCxT3QM07P1Zmuhf+M3GLJL78PEfeuGKPuMXjWb2bp
rZUPQPJlp9a9+DF419D1J+qrg6DubF3gkitj8ENit0/sH8LkPMW4kxvH4Ky+
y5PHrnsEZlZl1xQmjcG/e6U63258DO4BEbPiBzTxjJ7zMdO2PAENxZD72/I0
sYvor2/U1qewo91qaVaIJr7fdQbm7wyG0aWpftWnNHFGx2/ZBLdnUCQjCju0
URMP8X3zLT2eg45G6u3DMzWxSfvA/cy9L0Ama0FfClMTb2s77mzv9RIqvJfM
dmjXwHe4veNKD72Cn1ZXS/9kamC3I2a/Pi56Daw4nZ0pYRrY7/DJyoMJr+Gh
goB57ZoGfnDoW/wc8xBQlPt5D/Zp4E8H+5/3JYfA6e/H/tXbaeBM73nnv1u+
AX/FmjsbZmngJq9ju/xS38BoycFrQRoaeOhAjLW51VtYVl8y/smQOtY40DNN
IvMtbNiVsW9jozo23T9bKW1VKJjifXOT0tWx9b5D3VdyQqEtY+Jw/kd17LL3
c5mN3TvQmlhS4/dAHZ/07PrGKngHO94MnEOn1fG9PabBhWvCoOr8G82g3er4
g8eBs/eKw2CyUvbSXgd1nL77g6vjhnD4UMCRKV+ojht28Vdol4fDUsG3+v8m
qONB96nGtZsiYGIx846ikjpWcfdkvqiKgILFS+Y7D6nhqW5hXS7O72HH1LuL
x3DV8HLX1uIJde+hu2Oe/dJiNbzNZVJs6/YPsP5DuVNuohr22bnrcUTjB7Az
Db+R8F4N39nxxu+A60e4N1tqheJjNRyxvXnHTM5HsLJ30Iq/rIZTto1f1rMr
EjYoOWYnH1XDdVvJG0aC/8kOGz03Ndzn/FL+pOcnmD2VE529Vg2znBsEi/if
4Jjff5BloYYnOxkUju7/DPXtJzZrzFTDFlu2fUGdn8Ht6xW/D4Zq2GlzcNDF
g1EA/uvX3FBSw0c21Zxc2R0F55bw7kX/UcUrTW7NkFkUDQqGweP1haq49P30
V62nomHHwAZRVqMqdpmWp5r1MxpMH0uw4opUcUfE/osRI9FQunDKYzZWxb5T
mX0BS7/ATesr+TYxqlg24j1xAl9AcxZ7sOOtKr5vvLrKPvkL2PeX+WY/VMVj
w9ttZv77Ap5fMnH9NVX8Ycr1nyqWMRA+g7/e2E8VLwwzNiVSAvao2CaHeani
9MlZL0pTYuCJ4XCYs4sqXvduj0qs1FfY47QowWKDKm6cJHfh4YqvoBmLvzuu
VMUHQt/1nrj8FQY9ZPYEm6niwYkrdztlfIWUnMBnyqaq+PJbbsUiuVgw/HNg
UfQ4Vaw28fIq/VWxsNft4vRzGqr45ZuJ8aPXYmGfjcHek/Kq2GRCmkljdiwc
Wfyjcf6gCv4e4v4cMeIgtPb6w6ImFWxlJKUcYhsH1v43dH9mq+Ci1yH+F2/G
gfn+169/fVHB28njzY+D/l+th/2eqWD+K7b7SqVvgExETfZXVPCJcefLp6z5
Bms8NDfsO6SCpV6Ns1a4+w2q5bMXFTqr4Ltj0Xd+0TfwLujX8rNSwQYvdxIn
8h3G9u8/cWCWCn5v+Dc4cv13MEqw7nmtp4Lnv3iheOf+d4h7fNRUV04FpxqY
nztU9h2WpBhVl/Yo47Vkedb8AUlntkTlNyjjOv0zbnM3/YB5xcdOyuYqY89n
+mUaj36AYGbmv9PflHGfXoJVf+UP+JU22WjWW2V8IXjrt0rteFghdTfJMFAZ
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
s9+0Kdg5Af0fL6lkMw==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -16.45921260650303}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
             TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-16.45921260650303, -0.10683601330348613`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {360.53333333333336, -189.525}, {
     Center, Center}, {676.0000000000001, 361.00000000000006}], InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1: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
             
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -15.529271642385481`}, DisplayFunction :> Identity,
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Log[Q]\"", TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-15.529271642385481`, -1.4662626561872707`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1081.6000000000001, -189.525}, {
     Center, Center}, {676.0000000000001, 361.00000000000006}]}, {}},
  ImageSize->{Automatic, 409.44625294702286`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8684757054763308`*^9, 3.868475879948295*^9, 
  3.868476450879087*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"4e00a254-9f2d-4938-87bf-34a02e2dd721"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplotdecoupled", "[", 
  RowBox[{"0.5", ",", "3", ",", "Blue"}], "]"}]], "Input",
 CellChangeTimes->{{3.868475667106374*^9, 3.8684756749702387`*^9}, {
  3.8684764303476543`*^9, 3.868476433625794*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"e059939c-aec4-4837-bb3f-e3f3c2e04a15"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[0, 0, 1]], 
            PointBox[CompressedData["
1:eJxlXGVYVN/XpZ0ZOiwMREAUxW7FrSI2CogI9k9sEERUBLFRTAxUTERRQCyU
kjyH7u4epmCYGboE470x/08vX3zuM3DnnHt2rL3WuuofcLU5JCcjI2OvICND
/ntPEh00kBmxYnBW+hOvOzNxrNNg/np3XXiVWeugbG2E6//FNMRbm0C9U7nl
j04D3M47F94aNQ/adqT2d+sT1xtGCXpWLoV3DWe7dO5Pxh5VNQ8uHV4JAR+W
3R81YTIeuBU28/pnc/hxckhGiPSxx3KP/Nvda+HHg4gj49z08WC7xfEHizeC
QkTF2/IZ+vjcWx3G04uW8OBjfOWzzkn498euUssDVtCtEhUWHf//r/0zj07Y
brkfyrLnmmRFTcRTf9pbXzt2FHY/z9C0Gj0BN9q+T61efRICJ/8b87JrHP5o
+aq+w+o0rEzsUg9RHYfPrH3cr7TvHHDabJO2bdPFK+CuxsQT3tAp8PFLjR6L
FcevfvLC7DIMFi22W2k6Fh8fs2JyyJqr0HUUXCuixuBCnaXfvm/yAeMj74wm
bBiDF2guXJ5kcwMUrB3ffGoZjV+ozs3JdrgJCzOHWbF+o/E/5ky78v234cSm
sx+4y0fjg0om3KYjd0E+ql3VoGsUzpWbclLk4gcMKOUGho/CAf8eXBxe+gCs
s6ZsCT9KfP5HzeLKiodgucWsJdZkFP4zfFd5xOpHcFQr8LZN50g8a4hVetfC
H7pOHRw5Jm4kdhy8+Uxrw2Pw2+15KdpnJH5C7PbZ5icQeCmwlWszEmf1+hhN
tHoKZ1Rmbj9sMBIPdcuJg7cFwMeTH0Uj+nWwadflH9N2PINfFqaPXuTq4H0d
f8992/kcdkzfWN4XpIMfSbxhwd4XsGnCIpn+czo4QzSkmPDfS7DZUuZy3kYH
DwrP5a889AreG+hJjpnqYJPW/keZR19DSIveyjCmDt4lOO2w2TkQds4oTNJr
0cZ+vG69Utc3UJjf1p+QoY3/c1vc82lJENyaetXl+Adt7HXSo9IlIQhWVD/d
rXtDG/u7xsTNMXsLozb0eiYe0cZfXPpe9Sa/BZdrD8tWb9TGmSfmX45d+Q6O
5i9/H2SqjZuc3R29Ut9B2Svfebma2njQ6cdaszXB8D5vXFxUvxbWduqaJpMZ
DMbCHHO7ei084/hs1bR178HpNwr+kKqF1x5z7bye8x7M607uePFRC+87+rVs
/aYP8P5OtteMh1rY44gkRrngA0Rf2/nT1lMLPzw840XhlhA4+898ucoBLRx+
yOnCw+IQ8HjjG7Z5kxZOPxi+39YmFJ76RbA0FmjhBkeh+ejyUGhue1RqpaeF
Bw5MNa7dHgYWxxRzmSwtrH7gCOt1VRh83nNGdWGfJp76X4hkn8NHCPq6VLGE
rYlX7+cXT677CHdaHu+rzNfEu/YZRvF3h0NlpJny6jhNfGavY0BYYzjkf780
VyNEE/vteefltP8T4NTUhWb+mjhsd/OemZxPYCa6/DnjsiZO2TVpVZfjZzA7
82xHiIsmrttJ3vAzPHbqMq7frYl7HQJHeBz5AsFJJxYe3KSJlR0a2pYIv8Dy
A+NTly3VxEb24wt/H/8KbT/DTPdP08Qrduz6jsRf4d9MmT+FYzSxvd2Lx1dd
vsGpxqll1xma2G17jYdF5zfIdFtz8uqgBrYwuWuqsCQC5uslfEtt1cClH6e/
4XtGgNu/2zfW1GjgfdPyNLLiI2CG809ZpVwNLAo7fjVsOALGO9WvUUzQwOem
snpvLf8OHM/Cmys/a2DFsI/ECXyH17ZHdGNea+BHxhuqNid/B3x/p8PB+xp4
Ymjr+pn/vsMObaPYDVc0cPiUm/HqK3/A5li1mIPuGnhRiPEMIiUgzMmsNfKQ
Bk43ynpdmvIDVl2sbl9gr4GtPhxWj5KLBKeIpZ7CjRq40VDpyhPzSLjdNWdN
gZkGdnr/ofusTyTohW8ay56tgQcMLA7aZ0TC06AZhZMMNbBPMK9iiVIUjPHv
MfcbrYE1DXzWjVsXBdd+fjhsrKyBA98ZxP32jQL9yvUOlX/UscnkNJPG7CiI
eGs34ztfHce+PfAKMaPhZcZnh4YCdbxGX07t7cZogOt7lRxi1HFR0NtLV+9E
Q0XU1aOT36jj3eTx5kdD/9OjmYtuqmPhG/YBC9UY+OxVfSbATR2f1btcPmVL
DDht3FcHu9Sx3Bu9tYz7MaCx5f2xWRbq+P5EFCssigFVt+ygg7PU8fjAvcSJ
xEK5U6Fq41h1/HHC3xefrWNBtFR54wsFdbzg9WsVv0exMNohcCigQw2njje7
6FoWCx9XdBVV1KrhrWR51vkJqV/NrttkquG6cd7/zd3+E+QO6bJVfqjhIy/H
lWk//QmbkWqEfKAa7tVNWNNX+RMC5acULrithq+82BlTOToOcsVPx787q4ZV
dYeMf9rHwa9pu2+sc1TDL56TP3Fgf5P919BKDc95bjLmSXkcPPtt7d+xQg1n
P0t4+kA9HgTrjwsEpmp4/7PNI+9ujIeXk+cAa4IaHgho8Pe9Hg9da4KF9ipq
2C/AResajodpkhsLS4dVsRFVsOMhdMHq82dEqjiRuJvXwgTgLYzUXF2nim2f
6vudcUsAzyqm/aI8Vdz25IeK2+cEuLYoOMI2QRUTwXLHuSUB3N8Irjz/pIqJ
xTGPTk6EFRyDhYqvVPG3x4duOu5JhGN67ssC7qridWT7epYIo8qfyG+9oIob
idXtLEuEbpMa+RkuqviM/xgFO7UkkPH+FWW6TxWr+H+8ar0hCRZIlPy3Wani
4EdLZS19kkBivGnC61WqeNmjvEvrURKY6MyuZM5TxaUPd/81H0oCfz9j8+eG
qvjYQ7LgJ8MY9cfijaNUscxDoj2dTAbzuT/2TGSoYmq7n5Lh+4RrhtpDKnjm
g6DBOYJk2BgVWzJVrIIz78/xMNVHEPnw1eDeRhW8+35q39TdCBakK82KLlbB
vX7bThsGIJi2fJXq9DQVfJtqCAjUhEOmOFoFa2bF/7ynhEFyccHM02EquGGt
/DllQwx7qud/WftSBYdlblp0axUG6HHZvMhPBZ+m+jsG8UXvbxZXVDBk1kf7
eGMY2c/0djutgpXXGp2Re4HhJOQ4xB9RwZUZZMPA4Fzo2K23SwW/s4jp+VOO
oQFOdL3dooJdMv7+ON+NIc/ZTmHlahW8xGLdqV/qKWDWvr/21wIVrJhBbjAF
utX8DYumqeDiNdWdvRtTYI/R5ydoggp+lT4p4tTRFFC3GcvJ1VTBR9aQDSUF
zgW2oU5FFTwv/ftMl+AUmOCZLZg9pIz/mQ9JRDgFjt8Wqt9pV8a5aau/HGtM
gbImRv9fjjJ+SobLcArcP7p7+90qZfxfWtn0Q2NT4X3qHdHcfGU8w3y8iLMw
FYa2hXp0Y2U8mEo2nFTY/VkvPjdaGaeTt3NLhcWzkk4nhCvjB+Rx3E+FMbLP
jqe/Uca7Vq9orfmcCsYLNfbzHyvjKak3QnfkpsLqVZm6E28r4+5VRYcrWlIh
KtD/P5dLyjg5ZfSUbYppEBR/7XfFaWV8axXZkNIgQL0gyva4Mt6eEvZ+y8o0
+Omda9u2TxlT5WdPGsQX9oY+3a6MxXiJwcbzaeB1sd7LYZMy/rnyKifrWRpU
vjZ4OXeVMr6Gc99axKSBb79Hlf4iZbx1pTax5TRw3H7v3xRTZayLyYaVBsmy
Y3irDJSxAN43Jaulw8v9WXanxirjH0gcuHxGOtzGK01+qivjiwR6id+QDj2b
dedqKynj9ejChMVHiN+fVrn62m8W1qECJh2UfzTMYfSwMDtZ7dW8d+ng2eBd
8VbIwp+phpYODzMbFKzYLOyR/EZ3VkM6NG1TeKZVxcLm5OMbSgcf2dwjwgIW
VkueTVScDPDKq7EsT2fhWjNP+7AFGcCb/9mwLIGFQ5LIB5gBZq7Xsvg/WNjN
jFUVfDIDxrw6oqUSzsIEuCQqSAasMjXgWLxlYYbZy+1vPmXA0r2g4/+MhcsT
uToTcjIgL1vGt+c+Cwctn1H+QpABh7QPjj3iy8JOiaeJipAJzrG6nyQXWXgh
dcNMOMr2He97loXlEhW1iD3DkgNJW+a5sHDhsi0lD3dnglLmOYPuQyz8giyP
XpkgcJ50IW0PCx9a1rT1XkAmFGXjFaHbWXh2grG6cnQmGHxkbn5tycK/l54s
vFmaCWdebbr1wYKFqfTtzITgQ2fqkBkL+5PlRzULRvhoThUvYGHiMFTkpmeB
bKH5dpOZLGyylCxIWXByYtYGryks3B9Xe/vPoSwI0BKJ6yaycAoZLteyoLr2
4ZSto1n4XpwT81dQFnjozmwqU2dh+yVR2WeTs+BdNf53jMHChkT37K3LggNX
qtw0ZVm4czGZwFlwq++WXu4vJk4glzcqG+zCz/X4dzOx72KyImTDwarcahcR
E9v8nHhdZJ0NayNnJOzkMfHExWQGZ0NxUsGNHQ1M3Bb7Tb7lbjYIxuybeqiS
iaMXkRmXDQ0SzXvXipj4SiwZ0Nkwl/3k3Y9sJt68iMyQbNC7N3pHdwoTj4kt
kWmUy4HbY+D56gQm5i4kIzoHLqfPtA+OYuKvMQcu1ZjlwOCTK9d0vjIxUWyJ
CMyB9YoblZ+GMvFaslydy4H6OA228Vsm1qIOmLifVVl3zgsmbiCqX3FkDtyb
Kb/A+zEThy0oIE44Bwz3+jxb4cfEp6NHDue154D7mc/qmjeZeCWZHiq5EHZr
1b2eK0ysEh3imTUtFzxNPBUE55m4an4H8QRzof3owNHWM0z8LorccC7YtRR8
HXJlYhcSfl/NhcAer9zxx5l4KXkcb3IBhbdGbDnIxIrzyYEpF3qMnHc82MvE
xZEOfXG1uVAZkR7ZbM/ERLIRd8yFXcxxiau3MfHRyDb36JF5MC9M5kikJRPP
n0f+5MFFTddP89Yz8T+iOkdY5UHw7KzLaauZOHcuWVDzwCi+uPGAGRM/Jdvt
nTyYHRCXpLmYiQ/M3T7b5GMezNk5clTxXCae+eN1R2gm8ffx9ezXpkz8a47g
qxEvD+bqnhh9fioTU+VZNh8OaN6MPGLAxA/IdqaXDzyFbd8cJzLx7u9kgcmH
zal2iq5jmXjqHMbn8Tvz4YXRpYhbOkzcE2Hl9MIjHxZl6n6OVGdiqhw8yYeL
n2p7xCwmvh3RLHzyIx9sWaXXFigxsR2xOu3ifBhgnLW/J8vEk4nu8VCSD1V3
Xrv0/mZgySwy4QrgLvNK2vFBBv5Jht/UAkg4HG/b2cPAPrM2h7DWFkBM9ZpJ
1zsY2IoCEAUQWOJtOE3EwESxIhBqAQR16+2vFzAwudtrgQWgqmRZGshh4B/k
dhMLIFzWx+tkIwNfoAKwAJLVQ+ytaxl4w8x/+n/6CyA4qM95VSUD63xd1+yl
Uwhzro36ubKUgdmmJAAoBAdFtWVbCxn485fqfWe3FsLY8eYDzrkMTD69XudC
0PC/2P48k4HNyXZ0uxDk1ogmV6YysJopeSCFYGY3KkAfMXDt56HdJzIKIcun
w9I7gYFDqAZXCBUncjYKYhmYONy6ozJFkNrq8HBfFAObkeVvQhGMPhRv1BrB
wORpHFxWBButjqpc/sLA5US35NgXAc/HYqNxOAMHfSIXWASR+BmvIYSBnab3
E4ivCM4YqDUHBzPwIjLdvhdBVHSshWcQA8tN9x1VU1gERYOqY/e+ZuDC8KIK
O3ERbLvQ+Z/NCwa2JNBjm0Ix3PAJMbYLYGAq3LSL4WBYk9uxxwwpvisGl3tR
6+8+ZOC/5eeEU+YUQ+ar0KhkPwbmEdWcD8XAyfqQLHOXgXNtyQZaDM62I07a
3GLgCAoPFoPWjwelkTcY+Cl5O+diOOrg3mnow8DnqQMpho7ILeUfrjDwf7Y2
xkG3isFVbc6thZcYmIJHz4jrx890q7wZmHpcocWQvP30Y18vBtaiGmAxfLYz
kl9/joEHt3E/vEwvhoaPl9zHnGVI8WYx+D/O6x50Z+B0En5wimF1cqaf0I2B
ib0SCKgYvh//sL3NlYHvk/DuXzHsSta2Gz7BkOLTElDTWPRmvDMD7yojG1gJ
tJl/W7nlOANT7X16CcTNe7bxwVEGJsAFAVlLYMvkOwWcwwwpni2Be8uCai0O
MXB3qeUBDfsSWKZ/8lqcIwNXa5EIpQQMfUbWmh1g4GSyfZ4pgTW5M7tK9zOk
+LcEdNOa6s7tY+BbpY1sZf8SYBwr+zJrLwO7apGIowTeRZidH9jNwNvJxxdR
AocON9gX72Jgqj2hEugc93dX/E4GnlTqum9EYQl4G3i9iHZgYCXqAZbA2ReJ
Jqn2DCy2JhtICUT7pBmwdzCk+LoEqgf0X6sT1z/J8s8shWw7uW9Wdgz8WvMD
gQhK4U7g1FPB2xn4mvWG15enlEJOeu+/EcQ1jcdLQWR86NRFWwbeWkLesBQY
WmN5SsQ1VV5tSmHS1m0n324j8t26lpioSgFV/J67hbim8XspDPmErlclrgXF
k+t+XSyFB30PChttGJicrn/eK4XFBz5wUonr72T5elUKN4OvBscR1wEU3i+F
H+bnZ6cR195UAS+F6x+ff2wironDIDpwKczeGTxLnbj/eqvfY9yrSsFl23ie
NXFNzwelsP/yRmEoca1DAeZS6Fq75IAmsf4hdSHRUcuAPzvplB9xzSbQhotW
GRz85gF6xP4puK1fBvq/ayVpxPUnMv1mlYHt6JnvvYnn95Bc3ooyiOQ+uLWB
eL5nt04cddyyDD4ekMk0Ic6Dnj/KwEx919VJxHmtJuHs8TJ4uOtQqwlxnlMJ
NBPiWQaZWwsnbyTOW20rWUDLQGI5f89FIh7oeaUMhgampWftIepT4QCRIWWQ
vmLZ9SlEPCESLkaVwd4n3YUviHj7sIWKaCja0lhsSMTjHWq+KQOW0dOEdCJe
SbTUyC6D7jaMvYh4tqMKYBnMctbVXneEgZeTcOxvGTh7egqmHWPgycQ0OU61
HHYZV7oaOBH1rXAsccLlcMHMij+PyK92VbLDlMOd6gUXdxH5V0amx5Jy2GzO
cn9B5GccCXfWl4Or0r0/nUT+BhaQBawcHs1Osd9H5LePKrnhcthX14v5RP4f
t+whdlwOSJLt7nOe6CfkcVwrB7sJSyKWXWTghSSceFgOwfPexygT9Wa8KtkB
ymFdQHl27zUGJtHe1m/lkD6eaTJA1CuiWUlUk8vho/7fidq3Gbggn/wpB7f+
fsn6ewwcSbbrunLY8SSr8dkDBqbG8bZyMIxoXCpP1M+Ld0nAVw47tawsbxL1
9WD+nk3ZIypg696mA1NfMvBGFbJCV0DUVOVcbiADzybboVEF2J4eUxb/joFH
keV5fgWgxxOLvxD1ngQ/aasr4ImX9sgkoh80K5MFpgJOnqgeaP3KwFnkeLm/
AgyWrCueE8nAX8h241oBM0thMIDoP1Q5uFABAx4xeeMSGZgYTqdevFsBX+xT
w5IwA+8lVmf2sgLsEj53XMhg4DXk+PaxAtLjZeT3EP3QhEq4Clj88OW6XUUM
rEGGX1YFnL2cZOhZzsB9Gx1uLK6sgHaHcQqxNQxcR6DhAV4F6EV0Wo9sYuAU
cjzqIdbzU+vCYx4Dh7LIAbcS9nPkB+a3MTC1Xc1KMFrAmD9A4IFT1IBdCRNP
Lv1U18fA9hRgqgQvuXeVnGEGXkGOH2aVUNu4YZ6qHBMbEmh71uZKiF5gv2oX
g4lZt/Uc23dWwo3Jxj4FakzckUMOqJXgv2Pv1YMjmbiCbEfnKuF1qWrmpPEE
vibhvW8l2HzKqZcj8NPbWyTgIX5fMWuHsgkT38ghG1wlLF88lLd0DhM7E2j+
SGQlPF64sPQhgddsyPKXWglTrSxHaK5k4sXUgFkJndbzVOLWEXic6Jbvmyph
m4H+jdtbmViBSS6QWL8obuKNHUwsXE8Clko4UTPH5/M+JqbSTbkKnr4+e+zv
ESam4KluFWTFONzwPsnELxjjAvdOqwLrd4kBxp5MfJkaEKvAXAXtk7nKxIeJ
7lu/tgqM9To+jLjDxNTxbq+Crarei1YQ+JqCfwerYFz/8Zb3r5l4NF0AwWZt
od9yAq//IaaRqitVgJP+qSh9Z2Ji2CUmrCp4u6RhnRyB/6nbvamCvW6MGXMz
CPxPwquvVeBYNu3LU2KeeEzRPVWg8Xlh5uxaYh7Imka0pCpYUBTvKctn4v0j
yIJQBdw+o1JmJxNTdIWwCjarTOBsHGZiCr4MVIHLt6L0DCWWlF+pBo1xNoHn
tVh4gJQLRlbD/sLhlyeIeaue4luqIW9pXu8rExam6IC51XAjs1DIWsSS8i/V
cOGaf+ZPcxb2I8uLVTX87n/eHGrFkvIx1fDCoeRVDTE/7rxBDljV8ACNPbzV
iSXlZ6oh+21BLMuThY1I+vRONdxct22sKjG/0nxNNUjexujZP2HhrutkwFSD
oclmF0kwS8rfVMMilz2xhcT8TI+z1dD1qynxTwpLyudUQ9veRdbeJSx8k3x8
3GrYNVPefnMzS8rvVMOkvF+Zrl0sbEvCDdkaOKJUEtIqqyzle2rg3JsFOnFa
yliPmAZ/TqyBrZmlK7kGylL+pwZMBcdPH1ugjEUKZAeugY4J8mpb1ilL+aAa
mNcw+bq/gzKOIccxhxrI2znNabmzspQfqgG30HjnTZeU8VUF8oY1MP/w2m1p
j5TxUYovqoEhy3Cl0BBlvIUq0DWQI+r2+xWvLOWPamAhmI1KLlLGYxXIDlID
06cntg3w/scn1UBcD+9y+JAy5l8jK34NXN+XeaZGQ0XKL9WA1gW/hzeNVXAE
OU5IakDP3Tw3YYWKlG8irjdGrfWwU8He18gBoxaOmIT+h1xU8AGKf6qFEpNN
X575quD1ZLhMrYX7d3r7R7xVwaYUH1ULGXLTN2klqGBtitCphZ1xWkOJFSr4
F8VP1YLmqyWvVLtUcJMcmcC1cL2rbDRLVVXKV9XCjTOnQ35OU8XhV0lAVAtz
2i3r9NapSvmrWvD9pxq+9pAqPitHZnAt1E53dJnvoyrls2rB6PTq3s5gVUzR
Swm10CuSv+KTrirlt2rBcvhkwwBfFVPto6YWJstw99sy1KR8Vy0ov37yJ3i6
Gq6+4k5EdC3MvrF9S9dWNSn/VQcKCgkf1p1Rw8TwRERgHTjqGOtFvlST8mF1
UDIx7fvKNDXseoU84Dp4p1No8VekJuXH6uBepV/+0Eh1TNEjW+vAYOe2XWtX
qUv5sjoYUB3Y0H1CHVPp4VwH6oIr2zVfqUv5szpYGXQvKzZPHZeScPJ2HWxb
sSp4+Le6lE+rg84XLs5DozUwWU1vhNbBm6xreO9cDSm/VgcRl99rxFlq4GMy
5ArrQG03+jPmuIaUb6sDs6sLo+/7amBqvOfUwcQJWsazQzSk/Buxn74cC/VM
DSxD/dTD86RU6zUtGlI+rh7S46bPEzI1cT7ZLifUw9a1oXzdmZpSfq4ezhkZ
Df3apinVP4lrdtj8T+c18QWKr6uHau41S/sPmtjxUo2Zp309yE9UYs8u0cQb
KP6uHm6Mn/jY6Z8mpsbTM/XgtmL9k3WztaR8Xj18frrkpNpBLTx08Xjiaf96
MC1RPD/qpZaU36uHMS6tQxkVWjiTLAcR9dB3eadNgI62lO+rB0PfipCJ9tqY
gs+F9bC2/H6Y5lttKf9XD8a8X742ndp4z18y4Yjv+5iY92+tjpQPrIcc7ifu
nRAdPJUCMA3QeNrySrPGSCk/2ACrPYsZgTdH4t4/5EDYAFkX9p0/rTlKyhc2
gHjAfrgpYhTG5HbXNIBjzPeCK66jpfxhA4SNGRs6afcYfIeEB/81wPQZmZv3
+Y+V8okNYLNiSH6fwzi8gxroG+A/pt1Qc+hEbEbxiw3gNuvl595UfTyZeHrs
Vw2wRvHe2Oz08VK+kfg+K1mtB3t1cTsp/8Y3AN+s43Vq4xgp/9gAKIy3bFPm
aBxP0m1VDXBS0mqe2zpKykc2QGTZxZkec0bh69TA0ACZLz/E8B+PlPKTjXAx
iPVvkspIbE12S61G0FfofvvykQ5eRPGVjXAoU3HaHCMdPJ6Uh2Y3wqoMvbrA
FG0pf9kIskVOpxce1satw6RhoBH2n5vn8E1TW8pnNsKUVYpcRpoWjiTpIifi
86pNuWc9tfBzit9shJbVooJt87Uwdbw3G2HowKKdY3o08UGK72wE18V65dui
NTEFh0Iawb303LdQL00p/9kI+Ytup6et1sSjKEDZCFufr7zpqKop5UMbQVJ3
qHVTrQYmu/m65kbYUegVtOGjhpQfbQS33vDWWV4a+AtJd/xthAWjBo5WbdaQ
8qVNcGz44/4J+hr4nNeHGebjm2C02jdxhkRdyp82wXNVs61jiXqwhiz3S5pg
7m7t9/KW6lI+tQmuP/v1xl5GHWtQBGITiHNubOqMVpPyq00w795hj5ATapgY
BokEaYI9Lb8sdhqrSfnWJmj0u5Ep4ajiUE8ScDTB6e+iQIsgVSn/2gT2oU4p
6/epYhJtxH5rghuyD2ew9VSlfGwTVNj7R/Y3q+AVZDgXNIHwaVvBuQ8qUn62
CebLDDvbHlfBLBL+tTXBGnFP5bnZKlK+tgkOlenfqBxQxsepeGFD8DNtlX1Y
Ge+lAAobzH6oDCrcVsYU2tJig36BDU6wVcZU+9Flg3dr/xePScpS/psN97Zk
55pKWHgaNRCygZ8yvaQsniWNLzYUrng5Yf8tFlanCEk2DGu8fJtj/z++nA1/
tAarRkxj4T4CzbmvZUNHy9R4rSGmNP7YkKn5PYaTx8S1lJ7JBvmRx8JOBjIx
NS7tZsPoO48Ko92YmCqfjmxYOf9dxicLpjQ+2cBK/Hx5sy4Th7wkAQIbZtge
Mn9E4Hc6Xon7z3vzyoOYJ+6S48gVNtyvXfPfADH/XKLilw07TseFqhDz3alx
5EDGBucRL9J+bGRI45kNoRsrVvEnE/iflOcD2fCmW5P/ZniENL7Z0Llo97vG
8hGYSv8vbFBW0wl8/XWENN7ZoAOjptXcHIENqIBhQ/fcccn3HEdI458NjhFr
/8WuGIGZJJzOY8O8g7xIW90R0nxgw9n9lpn7+5Vwx06yQbPhuFHPqppSJcyh
8oMNFybcs074poQpeqqVDQmJh8wU7ilJ84V4nvHpx74fV8LxZPgOsIGhc3o7
Xq8kzR82WOXseTbTWAkHUYRnM5zYuZLzS1EJU/SPajO83XXulx5fEVNwUKcZ
mBca4gLTFaX51Qwqr75rn36viEn2451BMwReC2IF+ihK860Z7swsitI9pIgp
emVuM2w9/GtJq4WiNP+aQT71VamCsSJeRDXIZjioPjvLhaEozcdmWL3lsKth
mwKesJM8kWZ4ccp7jmG+gjQ/ie+b/fCK81cFTMGZvc1QZqLUPPxAAfdR+doM
BmxhQ7G7Aia7y+4TzTAh+5hWm52CNH+boWL0ZsO1SxUwRQ94N0Pnl5Pp3AkK
0nxuBu1Y+68psgo4iqTfbxPXz6NCG/ny0vxuhr+ZA5eW5MpL9fNmiBvXrV7y
VR5T43dQM8w47rLkvb88ptpxWDNktVcIvp+Tl+Z/M/Q4VLN+7ZHHJNs6OrYZ
SkzHBJ0zl5fWg2YYmlkXNmuaPN5EjrcZzWAbnjxzgrq8tD40Q7696+qVfXJS
vb4ZZL4eHA6ok5PWC+L57nnjYZAqh0fXkARMM1wUHq9rDpOT1o9m0B812br0
vhymykF3M0xX6Wf0npXDHVQ9aYY52j8Xr90rh8nVlchwoDj2w7hsCzlcQdKx
DA50rVjUfc5UTuoP4MDEdZ2y9iPlpHoRB9zOz31y8I8s/krS2xM54LFUa/g1
Xxa/HSQFBA4s0jX1lS+UxY9JutOUQ8wbVx8+jpHF1PgznwMdw5vOWr2RxdR2
l3HATL7+ycKbstiZCkAOJBd42K51k8X7KAKEA4HHF+le2ikr1aM4gDbwbdjm
stiCHC8cOLDXsenEMVNZvJgSfDmQ8+pXw9jRsng6RThzIGbnf2O7ZGSl+hUH
nOdefd7eJoM1qQPhgNZXUa1mhQxWoAgMDhiPXLxnJ5LB/ZT/gQMzZ/a+y/oo
g4WU3sWBkHbfOQ6PZXA9Wf4eE3+vOumh2iUZXETSYS85IOP8bHPLMRmcSsLj
YA5kbjvSxbGVkepjxP7dbqnLrpTBYTtIAoIDj5+4LFk1XQa/JNMtjvi+SS3y
waNkpH4LDrww0FKaIieDKfiZxQHzDc9++Nf9Q+TpririwIHB5XPHR/5Dhwn0
87aSA3uC9mbybv9DDuTxNnKgZMnBr+ID/xCtv3FA1f+76bxl/xBQ/iQOvLp2
+06s9j80lxIoOHB74oCWp/gvov0dHFCsDdPyyPiLaL2OC/lB7PqIwL9ImaRL
WFwIy9ieZXTuL/pLwidNLmwsnDC9wvovIqfh32O44Kv25GDy9L+I1ve4sI+5
voyt+BdV2olnJRhz4eyjhppl7D8oh6QjZnFhcqhsY2H8H0T7SbjgOWC1/vmT
P+gbpQdyYYyuhc+Lk3/Qu0pSkCO+74C+TOmmP4j2+3HBaRt7Bhj/QTdHUQkC
jZ/0LzbL/UG0fsiFRTJjj/9s/I1O2JGAkAvHuN7H0uJ/o/0UYcqFkMdnB2QD
fqNtlH+FCz9mPXro7v4b0XojF6Y6fIsdbfUbLaEGcOL+jt0iyYzfaAYVMFxA
wugffczfSG8UySBy4XK596OZLcOI1ie5UFHC036WPowUKcKTC82znqfMeTeM
BsnH94ELRyesnTp8aRjRfhkuqG+6W9mzZxjReiYXlIW9u8ctH0bFJP2bwAX+
P76lm+4wSqPsDFxYqRdg1jc4hGIoeZMLAfuVUkOqhhCtf3LBNEFy6nrMEKLa
WzWx/5CfwgdPhhBFr7K5sHiEV0r26SFE+3O4cOcw5+kM2yFE66VcSHJZyEic
N4RI9nh6PxdsvlhEn9UeQlQ5/cOF8Cf/we6eX4iiLxV48DzddoNz2S9EjTMq
PLh4ZadHSOQvROtDPBjjNcqV9fgXItkOxjge+MfdrQo4/QvRehEPJBVjHbZs
/4UoenAaD5JtnV6bLvyFaP2IB0nm57YuGP0LdfWShCEPWuS9xh0aHES0nsSD
bgv+18SaQUSFyzri+xc6/lyWMIgo+m0LDyKrcluaXw0iCl7Z8cD1pm7714uD
iPYf8eBvtNuFd/sHEa338kAUy9qQuHoQUctz5gGvfL7ib8NBdJOkt9x5sNxl
y5H/RgwiWo/iQY4NMhILBxCtD/Pg9IKegZf5A2g/pU/xQG6D7dOT3wYQJRc9
4EHnH4v4Y48GEK1X8YDN0Zvoe2YAUe3jDQ8S3k+9kG0/gGj9igdHZz/0N10+
gPR6nYmI5kF4l+vEGL0BROtZPMBzEuv+kx9AtP7Mgx8PN9ye3dKPaH2LB4ve
pQn18/qRyJ08YB7sevoxfsG3fkTrXTxYrbkx2cm/H9F6NQ9+qaKYNI9+RNEf
HB5MZQsPm+3uR1R6CInnY+n6qHplP6L1MB5opkT+eWzUj2h9mwdR96tOnGL1
I1of44Hbrsiwkx196CpJLyjx4fGN8tP3y/sQrZfxwS/Z83lhXB+i9XA+WL+8
32j6pg9R8GUCH67afFH54tOHKLrekA+ZFzUlm473IVpP44PKUOAGllUfouTz
eXxYkVsjblnQh2h9jbiexHvLG9eHxlIFlQ9njp6fLyPXh2i9jQ/lzn0nl7b2
Ilpv54ORr5mhf2EvovU3PtzhloxjRfciPmnn3ceH5DJs9OZlL6L1OD54zg7R
sLnai2h9ng+svLBPk4/1Imr8PMMHgdgjU8OqF1FytzcfXvLXzxm/qBfReh0f
DELLE9dM7EW0ns8Hocv2pbcVexGt3/Hht7fPebG4B3mT8PkFHw5VBdg4lfcg
Ws/jwyfdlY+UEnsQrf8T69seopoc3IOo8Isg/r772LOHd3oQRZfG8qHyU6DS
FfceROt9fJhxM3fG3V09iJKnM/mgJOQ2/TDvQbT+x4fC11v7eqf3IG2KMOKD
skLTahudHkTrgXxwn1MYmPu7G9H+AuL8pqY27eF3I1of5MOekVn1yoXdqMmN
JOj5oB+w5UR5TDei9UI+qKnPPBb7phvRfgQBrBl+FRZ1sxtR7YgpACeHeQr5
bt0onLTLawjgrlar7Z+d3YjWEwXww0X99Po13Yj2Lwhg50OHZV9MuxGtLwqg
/0+xz/TR3egsWf5MBWBgWGOSJtONaL1RAO49Mxin27oQ7XcQwAaPhgGz8i5E
yVPmAjjraVUxKbkLUXTVJgF4zADv8WFdiNYjBeBaH5U9+1EXMqYIcgHMCVUN
2OPdhWh9UgDdS/vS3h3uQqqUoC8g4vvQDBnrLkTrlQIwl3z4cmZZF6L9FAII
Xb/BSH5KF6L1SwEEPjB1C9PoQjUkHLohAH1rL9dDw50on9IzBbAk+M3fJYJO
RPsvBLB71PY/RiWdiNY3BXD5zbON0xI70fuTJGEiAPa9LxnmoZ2I1jsFIHN9
3JYzjzoR7dcQgNf5L2lJFzrRBaogCKAEnVSacKwTnewkCWoBbJKN6n9k24kc
KT1UAFv2Kp3RW9mJaH+HAI56LDyQOr0T0fKAAKpuWL85P7oTLaPoAgHkeL9T
3STfiWi9VABqKw9M+K+xA+lTCSKAZYevMuxjOhCtnwrAbllwkJdfBxpBAQ4B
SOYtCs8+3IFoPbUFfucbtK2CDkT7R1rg5wAyEozuQLS+2gKj7pZOju5sR2Vk
OI9tgbPpD0K/5rQj2r/ZAhfRK6/Sd+2I9pu0gClLwXGSdzui9dcWSJ+9Yuqz
7e0okMiOTYtaIMJu+qMls9oRrce2QFWF1jEFZjui/SktwOS9PTPIkSAPSp9t
gaPQdnlkkgQdJ+32tsR1837bXQEStIfSa1sgKLY+LsdNgmg/Swt8cnxyfv9m
CaL12xZo+6d/UM9YghZQAJ9Yj8hjhZKcBBlTem4LzHwlrNBpECPa/9ICfaeM
+jf+FCNK7rzZAjtezncK8xcjiv683wJY5Clr6ipGVDkNaAGPgojr1RvFiPbL
tIB4qjg9fIoYUejqQwsU7XhyN1hOjPJJOfFLC9wY5xSe2ihCtB7cAuOfXxaP
SBAh2l/TAokOy/XdA0ToPaUPt4Cc1Y7RCqdFiIK7uS2Q0Fz3Ot5KhGg/bAv4
9Bv6PDUVIdqP0wJ3WQ3PA1giROvHLVBm8edrUksbcmwnB+oWKAzI92dktCFa
T26BpMrGMefetSHav9MC37na6iqX2xCtL7eAbenTdel72hC1PMVWWK/T4B+0
rA3pU4CoFQbCPmQEjW1DtN+nFRKsBr+mDwgRJTeNa4X+NMPJKpVCRI2/Bq1w
SpLSdTZKiCSUHt0KYVO/dCr4CxHtD2qFJdeY3dFuQkTr062gLgc5t6yEiH5/
oxUuCH9tuDxLiGi9uhUYTJP1z9WEiPYTtUIRU+5ZuaQV0fp1K7TjftW5Ba2I
Kld7W6H6WvLF759bEa1nt0LqZStkc7cV0f6jVnAby3s/0rkV0fp2K/xY2akw
tKkV7TlBCkKtYF1nEv1veiui9e5WWGRw884UlVZE+5VawVd16V4XcQui9e9W
cI38Jl+V34KmUhsmnl/SY5v9X1oQRb8EtcKT4mJ9ll8Lov1NrbBdxnd9uUsL
ovXxViiEkYHJW1sQBV9iWuFTlfZQ9uwWROvlrRDdYDu/R7MF0X6oVjj/lWto
1iNAtH7eCmeOKbwPKRcgTNLp5cT6XefdnhUjQLSe3gr/cQwjqgIEiPZPtQJM
S28P9BQgWl8nPnefp3d9lwBR8nRXK0RAnu5tMwGi9XZivfyxCV/0BIj2Wwnh
6ERuTYesANH6uxBMHutZW/H4aAc5zqgL4fGJ30OFmXxE6/FCiGqq/e70kY9o
f5YQLqGtVlPu8hGtzwshfKTB978ufDSZGoCFMDlq67deaz6i4PN8IWwokJvC
WMBHtJ9LCAl3X3YuHsNHtH4vhIHv4W03hnmonQy/jcR6ZnR3dDXyEK3nC4EX
e7DeM5WHaP+XELZeNLo7MYSHaH1fCM+jfeuabvFQPElvHBHCOnO10KQTPETr
/ULw3OeUF2vNQ7RfTAgKSy8bFS7gIVr/F0Jk0O5HMro8RMmD14WQGrKiY8tf
LqL9AEIQWz4aG8fhItpfJiTqZVf7iiwuov0BQmgxnWzJ/sRF1hThJATtkWO1
Xj/gItovIASubf+4M2e4iPajCaH3o9KGozu5iPYPCGF9UarHWeAiiu7EQvg+
q+jGG0MuospfFvH5s2FbLpOLaP+aEOaJV6es6uAg2l9API+a3PD4cg5qPU4u
UAiyftxOy3gOov0GQuhyHeE+/IaDaL+bECrKajXSrnMQ7T8QgnXM9PD3ThwU
RcLTYSF8PNM1Mciag2g/Qht43928NXoRB70g6RxmGxyyvDGON4GDaH9CG+x8
o3FwhgIHXaIIXuLzhOtMv7ZmRPsV2uBnW6iYUdKMDpGvTxm3QZ3Ff+2vYpsR
7V9ogxen0zo2BDajTeTtFrbBCNcRperXmxHtZ2iDqhX3zrY7NaM5ZPtd0wYF
KXXJfJtmRPsb2mDAOehu35JmRI2r29rgjsa3lAn6zYiyE+xsg+uvZFfuZTQj
+n3ENpATxApjOtiI9j8Q6z8x+q1xFRtxhOTASqzP8M76iGQ2ov0QbQCLg1Ot
Qtgom5TrL7VBfLlON8OPjWh/RBukdcXFVZ9ho69kefFrg7u6D3+jPWxE+yXa
oHxR0utkCzZ6TMLx123wfef1y+WmbET7J9og19f2puwoNvIk6avPbcBQcp9z
53cTov0UbaCwuMBkVUETot+faoOF/QfSDQObEO2vaIPLDUaZC1ybkAX1vlsb
HHG3HHRf2YRov0UblKTaGTRpNqHp1EDTBjeG5DU8uI2I9l+0garKbt9l0Y1I
g4IbbfBoc7jNDN9GJE89wDYQ6VxctsGhEfWT43lfG/APhis/mt6IaH9GG7y7
bnFP6W8DqifpbAUR8L+E3Q4pbkBFlF9DBN9CXAvdghtQKimXaotgs9s5g6Nn
G1A05d8QAUfCsb21oQGFka9z6Ysg56rGzIrxDegl5ecQwYaMYK9NnfXoHlWg
RfBA/7KSOK0e0f4OEUy6kfM6JqAeUeMHiGC+Gk/lk1M9OkT5PUSg89l9Ug7U
I4qu2yKCW5W7Pmjo1CPa/yGCTQvQ0SutdYiS+3aLoHbLv0XjkuoQ7QcRAV6Y
yG54WIcMKQFQBCXLy2fnHK5DtD9EBI2vHPvrl9UhFhkuXiJYOiv93xjNOkTJ
aVeI9Y69N+6CoBZR8OqWCDouPxrDTKxFtH9EBJOX8zMSH9Yiio4IEMGRG6Xd
AUdqEe0nEcGeSK7LC7NaRNH3IcTvcxuY6dq1iPaXiKA+JsVfp60GvT1CDpgi
cFbKq7+DaxDtNxHBrKcno6cF1CBf0v6RTty/wLFdcqIG0f4TETideGBfvaYG
Ue2jVASaG8ZntI6rQfsogCCCj78PK+r1VCNq3GoWgSiEKfLKrUa0P4U4r7eV
636/rUYUPdkpgp5lNZJ3ntWI9qsQz8N9+zcX62pEv69HPL+vWXv3TatGtH9F
DJe8eIWnZauRAtUwxSC3+lnp15oqRNFhI8WgrTrCTPVHFaLSY7wYcpbdbb5/
uwrR/hYxWJjH+y90rEIUnJwuhgVOO41ll1ch2u8iBqIOn+zQqUIU/bJUDCdz
ppjLtlci2v8ihlX2fe4LsyrRS1KuWC8G3gKvKr+gSkT7YcTgL7q7muVVia5Q
hgMx9G9eejtsWyWi/TFi8F2cfu2YaSU6TP2IoXbHWwXLEZWIosdPiOEq25tj
01yBqHZ5Rgwrti/s8UqoQLR/Rgyh65pVMp5UoLkUQBUDd2yG4pyTFYj204hB
N2V3VPLGCjSGGvjFwPe16zhhVIFof40YLpT431shU4H+kvLxWzFU1U89PLuu
HFHjTJgYNtzcbWUeU45ItmRShBiujwwz8HhYjmj/jRgqJTGxec7liCoHyWLI
PXyYt3J9OaL9OGJoupFxpdKgHH2j7OZi6MjVOXr3Xxmi/TlieC3KcD1QV4ae
UAknhkXB593sY8sQ7dch9u/OXOviX4bOk/KMSAy3nN0zg13LEO3fEcNgtyRv
cFMZotwWv8Rw0Ldh1ompZYiiN2QlwLxXmSejWIao7TIkUKn52jOyuRTR/h4J
aD011L6eXIpmUIKFBKaW3z915mUpov0+ErC7NfuUz7lSpEWO01MkYLLCV/x9
eymi/T8SMFc3T/wztxQNkvTzfAk8Orsq8YhGKaLa0XIJYB2/rA5JCWqg3g+V
QIDXgbgneSWI9gdJYHaP0QmHjyUojXo/WAICyxPJS31LEO0XkkBs2NDNJYdK
0EdqYJDA8NKksO3mJYj2D0lg+aSSX376Jeg+9T61BNQNLtnz/xUj2k8kgZab
y9/aNxajMyS9dlECSxrCI1oTixHtL5KAU1KA45OXxYiSo+5JoOP976d7vYoR
BU8fS8Ax7q/xGoditJK0c7wi1hvQ3mOxuBjR/iMJTJ64vtpxdDGaQh5vuAQa
vA8eWiYpQrQfSQKn7vxJEXwqQipUAZTAX3vbqznHixDtTyKeR1bMAe60ItRN
0gfZEgiyyNKbLyxE1O2KJDD/uPfZhLBCRNHtVRLQfTjJ0PNoIaL9SxLgelgL
nKcWoiTSjsAn/r7un9fT1gJE+5kkEDnSNagvrAAFk6/T9krgfvz8kbePFSDa
3yQB1uLFz7aZFKBbZLmXb4fVp3+0WovyEe13aodCZ9NMn8/5yJUy+LRDcuW1
TtGJfET7n9rBNplt7DsrH9lSCdIO1lPRDLuuPLSO8kO1w47vQmQfmYeWkvLb
rHZgzvF653cmD9H+qHZw31nzZGBRHppEDXDtcHdv8i7/oVxE+6Xawc9vZsx/
SblIiSLE2qH/r/eRA5dzEe2faodTJhvnPjHPRWIS/u0i/v7JtZpfSrmokfJT
tYOWu+OkB7k5qISkS463g+u6k7k7/HIQ7a9qBx8/75dWNjkolpQXPNtBcX/I
Dq9ROYj2W7UDR2dHWnltNnpNvY/cDlckq4P3vclGtP+qHd7FHk3UPZiNrlEN
qR1kzmiWK07LRrQfqx0myxV/m9SehY5RAL8dEpMuj3SKzEK7KX9WO0ybvSGP
dy4LbaEM5O3gERkQcG9FFlpF+bXagT3OYNUhhSw0nyKg20F5f5ufU24mMqYK
dDs8Xz1/fdCDTKRLCXrtsHvYb778jkxE+7naIY5dNO7xhExE2YPY7TBPSzvT
hpeBaH9XO1ROThhe8SkD8cn07WiHe2knr9ufykC036sdylwmz3izJANRcPdP
OwRrK8RpyWYgyn6j2AHfU/z6fmSnI4oeUukA1+2XP116kI5oP1gH7DOse3/O
Ph1Rcsq4DjAJ5396PSkd0f6wDghZYHKnvTUNUfYDkw44/vSsqtP3NET7xTrg
cm7dHy2vNHSAXN7iDiAGYWPB6jRE+8c6YFnwVTuechpaTxlMOmDUlnl2qhWp
iPaTdUDcwtru/YGpiBp/7TrA8VLZYOORVET7y4jPHyXO952Tiii6+FAHbCh3
d3cYTkG036wD2qzGXN2ekYIoNOneAW6uzJnn76cg2n/WAey3gjW5DimoiU0O
XB2gNPr+49WGKYj2o3WAtrO+iNuOEVWuHnbAiH3Do77GYUTJec864NblOEGQ
D0YUvA/qAM+WhdMSt2JE+9U64D/u3S//dDGi6LCvxP33G92ozEeI9q91QKpN
/Kk/jgidJeWjJGI9f72x+3Ayov1sHVBRfkd9iX8yot9/74A0dFHGcnoyov1t
HXDV7/D8b2lJiP7/FDqAtS9/877dSYj2u3WAiPFdtLsvEVHwRdgBY27fjQz1
S0S0/60D7E9ZroOpiYga9wc7wMPafqNBagKi/XCd0G3gu3/b7gT0f24/jDY=

             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -16.45920935845511}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
             TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-16.45920935845511, -0.10687752825391764`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {360.53333333333336, -189.525}, {
     Center, Center}, {676.0000000000001, 361.00000000000006}], InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[0, 0, 1]], 
            PointBox[CompressedData["
1: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
ChfW/tkT6ypCtL+jFXSffE8sPyaS6aOtEGenmKB6XoSsKLqgFe5du/Tb3lck
00tboWG6f/KLGyI0lkqQVng1tFhl6L5Ipp+2wtWLtamHw0RIngIcraDd1BXV
/kok01Pb4FTOf7HHP4oQ7R9pA+OK0heq30QyfbUNvmU0m3zKEKFiMpxHtcGK
hbft3ApEiPZvtsGvR3fEZlUiRPtN2mDOP9FKZrNIpr+2Qc1U93cNPSL0hMiO
VRZtoLMptvanQCTTY9vgTFvv5FymGNH+lDbYfHPevTJlMTpD6bNtMLRBQb5v
uBgdJO32G4nfj1bwGW4oRjspvbYNdoakaq40ESPaz9IGeqM3cgLMxTL9tg1G
Rjx6WLNQjGZTAL8NwlPWd8xbIUaTKD23DcDUfn/kBjGi/S9tUGZ002XsLjGi
5M5rbbD/SKrTK1cxoujPm23w/lzFScsTYkSV0wdtYLvqgkHjBTGi/TJt0L8+
dO7da2JEoavwNhhht1TP/q4Y5ZJy4ts2sK+4GG/wRCzTg9tAVM8pFkaJEe2v
aYPTbK851R/F6CWlD7fB1EcZvIJkMaLgbk4bSJWiHCqyxYj2w7aB82v2o/YS
MaL9OG2QfEl9IYsnlunHbfBRIeq1WZcYOfaSA3UbPH8uPeLCF8v05DaoLts2
/j1Tgmj/Thswop4sHVKRyPTlNtiV46q1R0eCqOVx2+FA/K3y/HESNJYCRO2Q
gx/1r5gmQbTfpx1Mv8QHFs2TIEpu0m2H3mtDHFcbCaLG33HtsLCh8paSvQT1
UHp0O9jLTViXtFOCaH9QO8zNBfPTByQyfbodUk8+T4dTEkTf32iHVXefjh3h
LZHp1e0w7jxrsyhAgmg/UTskxm0PbHwokenX7bBDqKLGeylBVLna1Q5K1zR/
dMRIZHp2O3BC0VTmNwmi/UftkPChdOuEbIlM326HvQ3lizeXStDOw6QgROx3
T/ztuw0Smd7dDpuXrTev7ZEg2q/UDqrNpkGzxBKZ/t0Owa4uy4LkBpAxtWHi
339z0IurNYAo+iWsHT7hU07eYwYQ7W9qB32P6QVypgMyfbwdHuk8iguxHEAU
fIlvB4exC/qtlg3I9PJ2cO39ZtC5fgDRfqh2GOu7/dmLXQMy/bwddBynXDzg
NoAwSaeXtMPwFqO1VmcHZHp6O7T8NNIZdXkA0f6pdnC+PkzCvDMg09fboV76
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
9YUcpv1wvyBnx5SRmW/l8P8BLLg9uA==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -15.515054692079506`}, DisplayFunction :> Identity,
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Log[Q]\"", TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-15.515054692079506`, -1.4179920582776468`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1081.6000000000001, -189.525}, {
     Center, Center}, {676.0000000000001, 361.00000000000006}]}, {}},
  ImageSize->{Automatic, 413.61270195774773`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.868475717649494*^9, 3.868475892040249*^9, 
  3.86847645771563*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"53f799f1-cc34-4f7f-8187-225a21f47d6e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "list1", "]"}]], "Input",
 CellChangeTimes->{{3.868476559155376*^9, 3.8684765622726507`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"d148cb65-211b-4cca-afb2-ec70b55de0f7"],

Cell[BoxData[
 RowBox[{"Clear", "[", "list2", "]"}]], "Input",
 CellChangeTimes->{{3.868476563462699*^9, 3.868476567676066*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"3c288545-4944-49e5-b77f-b320bddb76cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"list1", "[", 
    RowBox[{"\[Mu]_", ",", "l_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvalsdecoupled", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", "rh", 
         ",", 
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868476120351707*^9, 3.868476120658662*^9}, {
  3.868476395285733*^9, 3.868476416525828*^9}, {3.868476549071844*^9, 
  3.868476594122416*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e099cdb1-ed0b-440e-929f-ac791b19d19e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"list2", "[", 
    RowBox[{"\[Mu]_", ",", "l_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvals", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", "rh", 
         ",", 
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8684760138863573`*^9, 3.868476027552763*^9}, {
  3.868476403509574*^9, 3.868476450871037*^9}, {3.868476574842595*^9, 
  3.8684765919314327`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"4374c7e8-90e8-465b-9bdc-b12837c733b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotcomp", "[", 
    RowBox[{"mu_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l1", ",", "l2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l1", " ", "=", " ", 
       RowBox[{"list1", "[", 
        RowBox[{"mu", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l2", " ", "=", " ", 
       RowBox[{"list2", "[", 
        RowBox[{"mu", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ListLogPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"l1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"1", "-", " ", 
                FractionBox[
                 RowBox[{
                  RowBox[{"l1", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], 
                 RowBox[{
                  RowBox[{"l2", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}]]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "l1", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListLogPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"l1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"1", "-", " ", 
                FractionBox[
                 RowBox[{
                  RowBox[{"l1", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], 
                 RowBox[{
                  RowBox[{"l2", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}]]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "l1", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListLogPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"l1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"1", "-", " ", 
                FractionBox[
                 RowBox[{
                  RowBox[{"l1", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], 
                 RowBox[{
                  RowBox[{"l2", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}]]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "l1", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "}"}]}]}], "]"}]}],
   "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.868476214064818*^9, 3.8684763350580683`*^9}, {
  3.8684763728088512`*^9, 3.86847637802171*^9}, {3.868476525106538*^9, 
  3.868476525412306*^9}, {3.868476597992506*^9, 3.8684767281038427`*^9}, {
  3.868476840990456*^9, 3.868476848769549*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"7b27c68b-0685-44c1-b44a-e3581600a055"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotcomp", "[", 
  RowBox[{"3", ",", "0.45"}], "]"}]], "Input",
 CellChangeTimes->{{3.868476730563037*^9, 3.8684767389913597`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"99c52beb-d226-46ad-93a3-7afb147dfa96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1nk01lkYB3AjiWjRKJIyGvuaxlpK0aKaxpoQjciROWLUKFsLWkRJzcRM
E6NFIWRfKrwlWYokmrx4rZGtppqRSO/c+77n3O85/eE4n3Ou6y7P8/1dZc8A
e29RERGRAvJDf/Ml9ZyaPWIsJkzUw2x2WnLGB4Mfr/G+xPxgd4aHo/0N5g+e
GurcbWnMQTu9EtN4Gcxpbt3uej03mf91SZ5x0CeLWcqlY8hsEP5R89Hc6ts5
zMeu9rWYiRcway2t1OLVwEZJSdJx54uZZylMqJc4lzLX/H4nIX7Obea4RP95
URxYNZEff3gSvktGhxrfwX5+lRdzml3GfPX8iq+2HoN9z42GWxiV47zu0wO6
z1x+T07NYXol8+zyZX9oyVcxXy+jA2CtFecfHbGuZh4r5cZMecNLTH3W+QbU
MA8V35o2cBouNKErgOWLn4rwRGuZ/Q2PFq+JrGOebihjbF4GN+a7/FfKhfl5
Ye9ybB8xJ+RJB2bGwp7Lty3TSodL6HI06pllszd2h8o2MJM/btsj8oRZIlPR
dfdKWFT75ILWBviswy8qifxGzE+3I9nEnCSTSk4QDhdsAPac62xWUAPrxaeM
G/TDFbMvfXel4Bmzcf3KH56ea2bOp9ttg6u3mJxa69GC+6LlWgK/qa20zPJ9
zmxKRr9shJfUvrS41gl7zGhYaMf9m1mGzHZG/AWz6wnT51V7YYuH7YXHwuEr
64veTzXDZus37vs4p5U5UqzqrMFBOMEq1m9gEg6P0v/++kwuc6eoZIySFywt
uBD4RcT+Db+NwQER9B+0MX+z9q3XY3c4ilN3eX0RrMDZQYbAeRUjyeY67cyb
Kg4tNvWBH36mBQifOzy54ucGWNhPHciXqebgQTWYuyrEOc0I3n4ou8jzCJxi
rtN8sR82MS+zT1DmMSuG7yIVDu9e2WlzJhGeG2p8c/X2TuaZH1N88ofgfYtm
denGdzFnTbjtrfoMy7U2fHDo7f4ir3qYL5NqzVaFxYKlVDQOw7UHyv9S0O9l
vkV217oKjgsKJCuApQqvh1Rr9qH+HO3VU07BpFnIjPC4Q2/qnw/gymfa3gt7
4D35Q/sL579EvT672yu7GCbhRyITrlv+IFfPH6anHRcEC/MFFsRhBSw+T5a0
AHyAbk+3n9ktlxYUrGDHXRS+Cxb2P3zzSYvTiP4Axut3qIhHwILrSYUFn486
2JykhdtnOLk+g8z4itkqy5cXGAML8wXm0PJvhpf6BYem6gwyzz+9eUjMEM6i
8RkAr6PtnA6bkGrckQsL8wm+R9vxPVxAr28SvjFzg2qQ6BAzTYPXrvCn9LdN
Wz1hYd7BNZr0xuATtY730q7BIYNqBhKZsJ+koGGY7TclHVW7D2unf9247gX8
JLqJ1yU1zJz2ylqPrwyvftWaOeEGy1nbfpLfD7cM/KQ9lgiHVtMFw4LlKY4w
t2+YRjoOjhP/Z4G1LawqHnHBKhaWosd3Eb7gHe3l3g5HH6cdAoel6lgpDsP+
VTTwYMF0EqNf5DusQ7rRWQ5WOj5sV7IEnk7jXxc+2/dOqSkAFn4f4CAV+iCC
F5LXj24eLE3S53QpzLeaGB3mwO9I+m+pgXPoc2AUFn5vXjNvpMerAeuS0+gx
hnmC7xFcTOMtBM6ItCMVA/sKGgh2s6QVAfOVp8aCumD6mptl8wb5Qq/TDx7h
mH27OQxuos+PGJime8o4/D98cUz3
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -79.2233273933897},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-69.07755278982137, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "30"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-46.051701859880914`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "20"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 0.}}, {0., 
          FormBox["1", TraditionalForm], {0.01, 0.}}, {-80.5904782547916, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-78.28789316179756, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-75.9853080688035, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-73.68272297580947, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-71.38013788281542, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-66.77496769682732, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-64.47238260383328, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-62.16979751083923, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-59.86721241784519, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-57.564627324851145`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-55.262042231857095`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-52.95945713886305, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-50.65687204586901, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-48.35428695287496, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-43.74911676688687, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-41.44653167389282, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-39.14394658089878, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-36.841361487904734`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-34.538776394910684`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29.933606208922594`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2.3025850929940455`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.302585092994046, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.605170185988092, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-80., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-60., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-40., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-100., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-95., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-90., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-85., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-75., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-70., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-65., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-55., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-50., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-45., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-35., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-30., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{493.296875, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.9991}, {-79.2233273933897, 0}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1:eJxlXHc8Vv/7RtKzt4cURaJUmp+k0t0STSppL6VEg0Jbg5Zok1BSNKRQlFTc
ZO+9936sp6HS0u+c8z3++j3/9HpH53mf877HdV/XddK2ObDKVklBQWGdsoIC
+ad3d8z9H6mRc+K/3t8wiDMD3zj0ZZsf0oDOkwX1G0ynYvW/1zVxKw3g/YaK
WauaJmNP85Gw9uipEDrs+uxVEmK9WNr6de5MuDN35i6zM5PwcFnFtVO75sKM
vi2Bs/iT8MelJ4bnwhfAmfL9J5V2TsTDsw9ne35ZBKN60kZvTTXEvh5T+2sz
lsDHBL+SLBNDPBIsYfi6LQeDoBkBy1Mm4J+nnwuX21hCnVLSYo/1/399M9VO
c83ybaCumKNf6GeAY2LXrXTfYweadq8D1/4eg7VWIUnl8x1hrvOVG0El+vh0
eWC13NIZop2snj/6rIcui259V9l6BLY85E2wNNLDOeAl0Np3Ak7p3+h7e2c0
Dh4+38ff5DT0qieIpghHo736HJ1HC8/C/L/BOeini7mSmRFRSz0gk1FjpThB
F/8TTp/9YdV5MLVz7biQNQr9uVMy0tdfhCeBh157HhyF/5iG1sXbPCF2w/XO
5yNH4U4Vg6a63V4wJ8RqWlOxDmYq6Tl27r8CZubj9a2u6ODtf9fcfs+8BkUN
2fLVy4if/+WZnplzHX5YrtNdw9PBv7+92EPm34CIsI4HjUXaOPEXq9DL9CaU
+reZ+gdq446+i36ixbdg1wgrlbF22uhD3K3fMh94dm/CYPPp2pjW6zFay9IX
eK8EC+NUtPHXF6Wuh6tvw/eYqtYlFSNxwufTL8eu9YOWnzblWc9H4lZ5/5GI
DXdg1Y+b9yUeI/FG9wn4b4s/pDiPvqq4aSSmdP4a/G57AITByt8H/xuJfbIj
2XNtA8HV8m/UMsFINGj/fiPV7i58O7pF3lE+Aje2Oq9ftvceCOfLFzy/OQKv
NH8ZUXggCOyiPdzeWI7A7U4zvj4zvg+ST5vCmvkj8Jjj4dL97+5DrV3aFHGB
Ft488PrtZJNg4Dv0X9K9pYXP938L7I0PhuHjf6X9WaeFqfumnX4z9wHw12lt
PztCC+v2HtpxLOkB4JbDTXfbNLHP4eUik4UPIa9V/4NxlCaKHT6PVUh9CO09
V1nzT2jiePtJ3I9mIfBubqtdiLkmLtpz4NO5jBAI2vmr1EKqiVvtXhSZLw0F
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
b+gkdfw/xdslhA==
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -25.688994996332667`},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-20.72326583694641, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-6.907755278982137, 
          FormBox["0.001`", TraditionalForm], {0.01, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2.3025850929940455`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.09531017980432493, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.1823215567939546, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.26236426446749106`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-25., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-30., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-28., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-22., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-8., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-7., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-3., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-1., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{536.4921875, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 1.}, {-25.688994996332667`, -3.063542961053954}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
5EzoUP5usOuWGK5fqsx75EyQYPlojniJoRaSDSsTtibMz7htJ4btENmcLpcF
7WqRjGnTxfA90fN0kVkWdLJN5hbIiuE5nnpJs8mCPVp9gh69oriaOKs73y0L
+nOfn5f4Looq1IbJgqfq62NfxooiK13uyaznWRCtbOS39LooxlINLQtGsmza
qj1F8UT6My3zxiyobImp9LAVRSvy9f3Jgq35WYtHTUVRLn0Gr+Jkw++K/WL/
SYli3eJTTtFzsmH4dqDqOFcEX30hX2A29DgMrj2eJ4JHF0tVvziSDcqTpgex
okWQJy55FSQbKmWYr5ZdEUGJxaGbn8Vkw7odNceD3USw4jNbRTcvG26/X5nd
aC2C4YvMKh638/5cfmSn2iQR9Px8nFcRvkH2vu/SICqCc6kLfgMNz/hAxzZh
FPosqsR7ZkgJWHB+a6YwFi20K72z7RskzvV4v/a5MD4my+Np3ucPrcky8RfG
fQub198I+QYmened+lyFccanyfLSH76B5onVUk+WCONfyyNFV8q+Qamv68EZ
usJIHd+Bb7CoZI3kmzEhvEeWH9kcmLXzzm7xOiHkLYaM0NQceDzfecD6oxCa
WpIFKQcG83sZbsFCOJxaF/RvXw6cfAxO+48L4VdyuwTmwHrY3r/cQQhvpHpK
/g7PgYAZnFlj5kLotCAp1zc9BzpiDrvdkBVCI173/FWfA8SxgfSRLkEcmE8e
4BzQjZDfPT9XED+Rt6eWC5MaT3qseymIl+eTFSEX4tYw2LMDBNHho97Fbvtc
mPvBL6dnhyDqzSdPcC7UP/4g5L1QELtS4oU7rufCwZgsr2x1QfwwjzxxuXDq
2dXylp8C6J9Cbuhc+GxRzMkuFsC188gTkgtey5daH44RQI2UUoEmoTx4W2l7
vv6SALLnkjs6Dw5cHpaQ2C2Ab5N3/1e7OA+0+0MW/1gkgLxiy9uBefBxXcDu
EHUBtCbL1ck82HzD2IrLniCUqAXOA981GxTlHk4QjbzqV5KYB+yXY/IhthNE
9JzvvBXOg8+Vpayz4+PE8Q+qYwV9edCe1tn6KWGcWEoeD5l88PdKnL5m9zgh
8+HVqZwp+eDu/PIOU3mcqJ7dz3uD+TA0dP6qZeY/4nkS+cD5EHrYBm4c+0d4
kfI7IB+Sg4v8FZn/CEtyOZ7lg/ryPCK96C8hOpscmPKB/eis4PUzf4mSROeh
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
Uzev+66KVPt41gZ3hY+tEqhVRX5+1QZO2+KmJrepov6vg7wd3QaWAfJChwdU
kZ9ntcHtGTn5pn9VkZ8/t4HFkYmLXHE15OdbbVB9pXlWjLIadnuTC9wGSqrX
Kg7rq9F8VRuk/Wa6z5uqhvy8ug3O7sU+wXlqSNkfrW3g2njOvXi5GlLHg9sG
7UbHKp/ZqSE/D2uD1Rtj5ni7qCE/326DjQ3zrtrsV0N+PtYGjr7MEoNjahhA
2gtiHBgz85KaOKtG81wc+LOXMb/pqhry83AO3Cmc64wP1JCSL7oc2Hgu9tDL
CDWk7HojDkDdSZ8bcWrIz9M4sP/VrSMnU9WQis9nccBQsGXH/mw15OdrHBg9
6Lx0S6kaalIFlQMPi1tUbBvVaH6MA42HXRuWcdWQn7dz4PxEYvDCITXk528c
CAz7YjVfUB05JM7rygGr747sebLqyM/jOCD6yNHHUlMd+fk8ByT23P4NxupI
jZ8+HDjMqDi82kIdqbjbjwOXZ/dVb1ysTvNqHPC7EmWx20Yd+Xk+B2QDs/28
N6sjP7/jgJyeVOrlXeroR8rnxxyYqJnV/vSQOvLzPA5UFf4TTj2ljvz8nwO7
I/WVqi6qI7X9EjgwHL5OYfiOOlJ2aQoH3OPnj2s8VUd+3seB104365e8UUcq
nv7GAW7jaJRbsjry8z8OrDHW33MvQx2VKcOIA3eLImUyitSRnwdyYPlC08if
derI5ws4cCxo7RSTDnXk54McEH7zMtT1pzo2HyUNeg64OBX+eTShTvN4HIjQ
22RdLa2BfB6hHdSOfj+rrqGBVDuSbIeF4dnhLkYa+IbE5RXa4XX/t7fhMzSQ
nye2Q2CgUxR3kQby+YV2mHZn/OocGw3k54vtsNjK0vHCZg30JcvftHbozrsq
XbVLg+b/2mH4kPtrUy8N5PMO7WB9z8484LQGUvGUVTvYf3j3pOGSBlJ2lW07
7D4vMrjgngby88h2UKpJnvr4mQZOpgzydjibPWftvxgN5OeT7dCV3G2/56MG
ylKBPu/+Vi9dVJilQfOG7TBw9qHU/FIN5PMU7fA1yfHzq0YN5OeX7fDiXd0G
jS4NrCXl0KV2eBjjn3N9WAMLqTyzHSZteqUvIqyJfP6iHR71hzudk9dEfr7Z
Dm6Lc46OaWti5BHSMGkH24iDHmdMNJGfd7YDMlqXjc/WRD6v0Q5HvHxHApdp
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
NPfW2LvG+H94WMK6
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -21.743324188355984`},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-20.72326583694641, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-6.907755278982137, 
          FormBox["0.001`", TraditionalForm], {0.01, 
          0.}}, {-2.3025850929940455`, 
          FormBox[
           TagBox[
            InterpretationBox[
             StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1, 
             AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}}, {
         2.302585092994046, 
          FormBox["10", TraditionalForm], {0.01, 0.}}, {-18.420680743952367`, 
          
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.605170185988092, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         7.313220387090301, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         7.600902459542082, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         7.824046010856292, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-25., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-22., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-8., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-7., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-3., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-1., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         3., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         6., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         7., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         8., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         9., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{576.67578125, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 1.}, {-21.743324188355984`, 4.124765436132572}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868476755675374*^9, 3.8684768689573298`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"fdee1b7c-6fbd-4463-986d-8a25c5ab02f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotcomp", "[", 
  RowBox[{"300", ",", "0.45"}], "]"}]], "Input",
 CellChangeTimes->{{3.868476740314687*^9, 3.868476746189238*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"4a9a4d42-305a-4313-8aa0-90b46f5e1989"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"1.7959668961763703`*^-103\\\", \
\\\"3\\\"]\\) is too small to represent as a normalized machine number; \
precision may be lost.\"", 2, 62, 62, 31105331923505327890, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868476771216757*^9, 3.868476884743188*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"bf7470aa-f159-48fd-90ef-389044c7ff6b"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"1.1146329966957794`*^-103\\\", \
\\\"3\\\"]\\) is too small to represent as a normalized machine number; \
precision may be lost.\"", 2, 62, 63, 31105331923505327890, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868476771216757*^9, 3.86847688475117*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"39820747-10f0-4cd0-97b1-ac3fe30e8346"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"6.914391210542692`*^-104\\\", \\\"3\\\"]\\) \
is too small to represent as a normalized machine number; precision may be \
lost.\"", 2, 62, 64, 31105331923505327890, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868476771216757*^9, 3.868476884754862*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"0c846161-e491-480a-8488-c3c28f4364ba"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 62, 65, 31105331923505327890, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.868476771216757*^9, 3.868476884758224*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"b422dd44-5b80-4833-a02a-3e49ca9d9570"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1nk01lkYB3AjiWjRKJIyGvuaxlpK0aKaxpoQjciROWLUKFsLWkRJzcRM
E6NFIWRfKrwlWYokmrx4rZGtppqRSO/c+77n3O85/eE4n3Ou6y7P8/1dZc8A
e29RERGRAvJDf/Ml9ZyaPWIsJkzUw2x2WnLGB4Mfr/G+xPxgd4aHo/0N5g+e
GurcbWnMQTu9EtN4Gcxpbt3uej03mf91SZ5x0CeLWcqlY8hsEP5R89Hc6ts5
zMeu9rWYiRcway2t1OLVwEZJSdJx54uZZylMqJc4lzLX/H4nIX7Obea4RP95
URxYNZEff3gSvktGhxrfwX5+lRdzml3GfPX8iq+2HoN9z42GWxiV47zu0wO6
z1x+T07NYXol8+zyZX9oyVcxXy+jA2CtFecfHbGuZh4r5cZMecNLTH3W+QbU
MA8V35o2cBouNKErgOWLn4rwRGuZ/Q2PFq+JrGOebihjbF4GN+a7/FfKhfl5
Ye9ybB8xJ+RJB2bGwp7Lty3TSodL6HI06pllszd2h8o2MJM/btsj8oRZIlPR
dfdKWFT75ILWBviswy8qifxGzE+3I9nEnCSTSk4QDhdsAPac62xWUAPrxaeM
G/TDFbMvfXel4Bmzcf3KH56ea2bOp9ttg6u3mJxa69GC+6LlWgK/qa20zPJ9
zmxKRr9shJfUvrS41gl7zGhYaMf9m1mGzHZG/AWz6wnT51V7YYuH7YXHwuEr
64veTzXDZus37vs4p5U5UqzqrMFBOMEq1m9gEg6P0v/++kwuc6eoZIySFywt
uBD4RcT+Db+NwQER9B+0MX+z9q3XY3c4ilN3eX0RrMDZQYbAeRUjyeY67cyb
Kg4tNvWBH36mBQifOzy54ucGWNhPHciXqebgQTWYuyrEOc0I3n4ou8jzCJxi
rtN8sR82MS+zT1DmMSuG7yIVDu9e2WlzJhGeG2p8c/X2TuaZH1N88ofgfYtm
denGdzFnTbjtrfoMy7U2fHDo7f4ir3qYL5NqzVaFxYKlVDQOw7UHyv9S0O9l
vkV217oKjgsKJCuApQqvh1Rr9qH+HO3VU07BpFnIjPC4Q2/qnw/gymfa3gt7
4D35Q/sL579EvT672yu7GCbhRyITrlv+IFfPH6anHRcEC/MFFsRhBSw+T5a0
AHyAbk+3n9ktlxYUrGDHXRS+Cxb2P3zzSYvTiP4Axut3qIhHwILrSYUFn486
2JykhdtnOLk+g8z4itkqy5cXGAML8wXm0PJvhpf6BYem6gwyzz+9eUjMEM6i
8RkAr6PtnA6bkGrckQsL8wm+R9vxPVxAr28SvjFzg2qQ6BAzTYPXrvCn9LdN
Wz1hYd7BNZr0xuATtY730q7BIYNqBhKZsJ+koGGY7TclHVW7D2unf9247gX8
JLqJ1yU1zJz2ylqPrwyvftWaOeEGy1nbfpLfD7cM/KQ9lgiHVtMFw4LlKY4w
t2+YRjoOjhP/Z4G1LawqHnHBKhaWosd3Eb7gHe3l3g5HH6cdAoel6lgpDsP+
VTTwYMF0EqNf5DusQ7rRWQ5WOj5sV7IEnk7jXxc+2/dOqSkAFn4f4CAV+iCC
F5LXj24eLE3S53QpzLeaGB3mwO9I+m+pgXPoc2AUFn5vXjNvpMerAeuS0+gx
hnmC7xFcTOMtBM6ItCMVA/sKGgh2s6QVAfOVp8aCumD6mptl8wb5Qq/TDx7h
mH27OQxuos+PGJime8o4/D98cUz3
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -79.2233273933897},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-69.07755278982137, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "30"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-46.051701859880914`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "20"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 0.}}, {0., 
          FormBox["1", TraditionalForm], {0.01, 0.}}, {-80.5904782547916, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-78.28789316179756, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-75.9853080688035, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-73.68272297580947, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-71.38013788281542, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-66.77496769682732, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-64.47238260383328, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-62.16979751083923, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-59.86721241784519, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-57.564627324851145`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-55.262042231857095`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-52.95945713886305, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-50.65687204586901, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-48.35428695287496, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-43.74911676688687, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-41.44653167389282, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-39.14394658089878, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-36.841361487904734`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-34.538776394910684`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29.933606208922594`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2.3025850929940455`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.302585092994046, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.605170185988092, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-80., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-60., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-40., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-100., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-95., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-90., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-85., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-75., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-70., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-65., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-55., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-50., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-45., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-35., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-30., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{Automatic, 293.41332735974913`},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.9991}, {-79.2233273933897, 0}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
kf9+538AC7Q8DQ==
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -28.16455076151408},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-27.631021115928547`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-6.907755278982137, 
          FormBox["0.001`", TraditionalForm], {0.01, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-25., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-30., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-28., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-22., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-8., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-7., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{Automatic, 296.2409815024605},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 1.}, {-28.16455076151408, -7.671588254579314}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -39.29637437168098},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-34.538776394910684`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "15"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-6.907755278982137, 
          FormBox["0.001`", TraditionalForm], {0.01, 
          0.}}, {-41.44653167389282, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-39.14394658089878, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-36.841361487904734`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29.933606208922594`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2.3025850929940455`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.04879016416943205, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.09531017980432493, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.13976194237515863`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-40., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-30., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-50., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-48., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-46., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-44., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-42., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-38., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-36., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-34., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-28., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-22., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-8., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{699.19140625, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.9991}, {-39.29637437168098, -4.028964351703853}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868476772290427*^9, 3.8684768858786983`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"7f925ef0-3e73-4652-9306-327fad51243c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotcomp", "[", 
  RowBox[{"400", ",", "0.45"}], "]"}]], "Input",
 CellChangeTimes->{{3.8684767473300743`*^9, 3.868476754648019*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"5e118d91-5810-4deb-be17-6edb5d72fc7c"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"1.4914668721684365`*^-154\\\", \
\\\"2\\\"]\\) is too small to represent as a normalized machine number; \
precision may be lost.\"", 2, 63, 66, 31105331923505327890, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.86847678181427*^9, 3.8684768956353817`*^9},
 CellLabel->
  "During evaluation of \
In[63]:=",ExpressionUUID->"a92187a3-b335-4dce-bc35-88cb592f2641"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"1.4914668721684365`*^-154\\\", \
\\\"2\\\"]\\) is too small to represent as a normalized machine number; \
precision may be lost.\"", 2, 63, 67, 31105331923505327890, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.86847678181427*^9, 3.868476895639616*^9},
 CellLabel->
  "During evaluation of \
In[63]:=",ExpressionUUID->"5e12c382-ea0f-4030-9dd0-59ca8efe1013"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*SuperscriptBox[\\\"7.591607934499267`*^-155\\\", \\\"2\\\"]\\) \
is too small to represent as a normalized machine number; precision may be \
lost.\"", 2, 63, 68, 31105331923505327890, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.86847678181427*^9, 3.868476895676585*^9},
 CellLabel->
  "During evaluation of \
In[63]:=",ExpressionUUID->"b781395a-1a5e-4676-97ff-2334e4b25dfd"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 63, 69, 31105331923505327890, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.86847678181427*^9, 3.868476895680499*^9},
 CellLabel->
  "During evaluation of \
In[63]:=",ExpressionUUID->"ebbddf1f-6a58-4e48-8e2a-65ea90e4a3c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1nk01lkYB3AjiWjRKJIyGvuaxlpK0aKaxpoQjciROWLUKFsLWkRJzcRM
E6NFIWRfKrwlWYokmrx4rZGtppqRSO/c+77n3O85/eE4n3Ou6y7P8/1dZc8A
e29RERGRAvJDf/Ml9ZyaPWIsJkzUw2x2WnLGB4Mfr/G+xPxgd4aHo/0N5g+e
GurcbWnMQTu9EtN4Gcxpbt3uej03mf91SZ5x0CeLWcqlY8hsEP5R89Hc6ts5
zMeu9rWYiRcway2t1OLVwEZJSdJx54uZZylMqJc4lzLX/H4nIX7Obea4RP95
URxYNZEff3gSvktGhxrfwX5+lRdzml3GfPX8iq+2HoN9z42GWxiV47zu0wO6
z1x+T07NYXol8+zyZX9oyVcxXy+jA2CtFecfHbGuZh4r5cZMecNLTH3W+QbU
MA8V35o2cBouNKErgOWLn4rwRGuZ/Q2PFq+JrGOebihjbF4GN+a7/FfKhfl5
Ye9ybB8xJ+RJB2bGwp7Lty3TSodL6HI06pllszd2h8o2MJM/btsj8oRZIlPR
dfdKWFT75ILWBviswy8qifxGzE+3I9nEnCSTSk4QDhdsAPac62xWUAPrxaeM
G/TDFbMvfXel4Bmzcf3KH56ea2bOp9ttg6u3mJxa69GC+6LlWgK/qa20zPJ9
zmxKRr9shJfUvrS41gl7zGhYaMf9m1mGzHZG/AWz6wnT51V7YYuH7YXHwuEr
64veTzXDZus37vs4p5U5UqzqrMFBOMEq1m9gEg6P0v/++kwuc6eoZIySFywt
uBD4RcT+Db+NwQER9B+0MX+z9q3XY3c4ilN3eX0RrMDZQYbAeRUjyeY67cyb
Kg4tNvWBH36mBQifOzy54ucGWNhPHciXqebgQTWYuyrEOc0I3n4ou8jzCJxi
rtN8sR82MS+zT1DmMSuG7yIVDu9e2WlzJhGeG2p8c/X2TuaZH1N88ofgfYtm
denGdzFnTbjtrfoMy7U2fHDo7f4ir3qYL5NqzVaFxYKlVDQOw7UHyv9S0O9l
vkV217oKjgsKJCuApQqvh1Rr9qH+HO3VU07BpFnIjPC4Q2/qnw/gymfa3gt7
4D35Q/sL579EvT672yu7GCbhRyITrlv+IFfPH6anHRcEC/MFFsRhBSw+T5a0
AHyAbk+3n9ktlxYUrGDHXRS+Cxb2P3zzSYvTiP4Axut3qIhHwILrSYUFn486
2JykhdtnOLk+g8z4itkqy5cXGAML8wXm0PJvhpf6BYem6gwyzz+9eUjMEM6i
8RkAr6PtnA6bkGrckQsL8wm+R9vxPVxAr28SvjFzg2qQ6BAzTYPXrvCn9LdN
Wz1hYd7BNZr0xuATtY730q7BIYNqBhKZsJ+koGGY7TclHVW7D2unf9247gX8
JLqJ1yU1zJz2ylqPrwyvftWaOeEGy1nbfpLfD7cM/KQ9lgiHVtMFw4LlKY4w
t2+YRjoOjhP/Z4G1LawqHnHBKhaWosd3Eb7gHe3l3g5HH6cdAoel6lgpDsP+
VTTwYMF0EqNf5DusQ7rRWQ5WOj5sV7IEnk7jXxc+2/dOqSkAFn4f4CAV+iCC
F5LXj24eLE3S53QpzLeaGB3mwO9I+m+pgXPoc2AUFn5vXjNvpMerAeuS0+gx
hnmC7xFcTOMtBM6ItCMVA/sKGgh2s6QVAfOVp8aCumD6mptl8wb5Qq/TDx7h
mH27OQxuos+PGJime8o4/D98cUz3
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -79.2233273933897},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-69.07755278982137, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "30"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-46.051701859880914`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "20"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 0.}}, {0., 
          FormBox["1", TraditionalForm], {0.01, 0.}}, {-80.5904782547916, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-78.28789316179756, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-75.9853080688035, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-73.68272297580947, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-71.38013788281542, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-66.77496769682732, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-64.47238260383328, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-62.16979751083923, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-59.86721241784519, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-57.564627324851145`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-55.262042231857095`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-52.95945713886305, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-50.65687204586901, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-48.35428695287496, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-43.74911676688687, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-41.44653167389282, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-39.14394658089878, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-36.841361487904734`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-34.538776394910684`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29.933606208922594`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2.3025850929940455`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.302585092994046, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         4.605170185988092, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-80., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-60., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-40., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-100., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-95., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-90., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-85., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-75., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-70., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-65., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-55., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-50., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-45., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-35., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-30., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{449.890625, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.9991}, {-79.2233273933897, 0}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
+Q6ywBJYbnvTYLdYrXdJYPE+4f1KrldLOP6m9IdIwus/PR4yCayPswTSPzI9
TML1XaZvS+ByztrKq2K1PiaBgZLGTIIPjxB6oW01fBuv73RMotbLqkHXRcuY
6D9MD6+G++9DC0l+o/BlUDUYiH/XHsfvR+l6g2o+v0xPq+b6CZXPR+AdcXnz
BXexWl+r5vW7H02o1VyvYnpb9T8+iert1RwvMf2tmvdr1cTOu6Ka86VMj6uG
c8q7WoFitT5fzeeftp+7qqH5emYA4W+p3L2vGvJ7yv0I38X0umrQiup6h/Ct
TM+vhqfzFp8i+JTpd9VwU1LbOhTfv4/A51vVsNxmgo2zWK3nVQO4B+wh+JLp
/9XgNWvoDVJv6PZ7Uc3rE6VLI6uhwur2jBtitd5XzfEwlaeTqjkeZPof/l6t
vxF5+O/3oIRRNef/mR5YDQ1lG8I8xGp/AZ4/4eOGtRK1PljN61/lNkLQV/N+
lOmF1fDB7EVig1jtR5BC00PPFb9wTMtReymkfY7aRN7nMbHLd5Vy/pjpiVJe
H5l/Qcr1KqYvSmHAPtnw1YQ/I+lvmBTENl37jZSo9UYp1weY30HK+2EqT02W
gnWJ/S1yPildNUvK6zfTI6VgcO/kETscG1OCXMr5PaZPSnm/rkUFfSl4Sisy
NMRqvVIKzj5fH5RK1H4KKfxYafCO1FOmX0p5/1hM4NAJKe9PMqieKeV4jPkv
pBx/M31TyvnFB1sJYSKFA9pXVUTPYHqnFO6Pn3OI5Cfm15By/ns/TQhSuKDv
XP4Xj2/9RAhqKXwL9z1P9AU3qodKOf/A/B1SCEv67yLZn0wekHJ8NZbSBVKY
klS+lfClTC+Vcj1Wlx4QKQQOtCsm+Inpp1KOT9tRwCHl/QbTU2s4X8z8IzVw
4Hecm65Era/WcLyWS7ZzvxrYN661P8GzzL9Zw/Um5jep4Xoq019rIKos4ATh
K3zx6ZglqOH6INNjazjfzfwpNWBmvqBwMR73pPosvn/vLR2iB60ndvuFNTz/
LqN6bQ3n05mfpQaMlGjldYlav63hetxICvBrON4zpnpuDXj5/jlA6hHzv9RA
jN3qRUPIfqP6bg2vv5T+vFDD+VSaTq/XwLWZ8cFIrPbL1EDfPrq9puH7KboK
rOH8VQaRE5/WwOZJXew7SdR6cA2UC3u1If0C89fUwFRFh4wDZL9RfbgGhkrG
JpHnUbibVsP7G+aHreH8MPPj1EDnqR3aEb6W6cc13G/gpiQNdQ3Hs0xPruH6
FvPv1PDzxfTlGnj30/840avp67WphaUpzzesx7EuBUS10LBD0W6CWO33qYVg
xx7TCZ6gctOAWliTPeBcFtlvpP3Vr4W1NY0LAvC4gurRtRwvMX9QLc8/TJ+u
hYSk6bGkPrDfb9SC89QLOiBR69W1vD9lfqJaXn+Zfl3L8SlNV8troa3jjeqx
YrWeXcv1cOY/qgXjIV4FV8RqfbuW+1GWbSKCUC28GS1/QvwOTO+uhd9i9859
JWq/Ui3HV0z/ruX5yIR+cC2MH27ZmjyP0i9+tdw/w/xNeH7LOs36K1Lr47Xg
qZnmtgKPU/jyqpbrSUwvr+V6DPND1XI8xvTzf9+HCJ2eVws3An7eIPib6em1
XP9h/qla3v8yfb2W1ysqT3+uhVUJk32SxWq9vZbzwcxvJfs/+rsMBm+7+TAO
x4tIO9NFxvl6psfL4ESzJHO6RO3PkvF6yfR5Ge+X9GgDLOP9OIXP1jLoMjfd
8T+J2s8lg9LjTidiRGr9Xsb7TyXZfjNlEF06LGadWK3nyzheYP4vGdjcHh34
U6zW92VcT3xN6I21Mo4nmd4v4+eP+cVkvB9g+r+M6+FUHjwu434e5geQwZCr
LuFBErW/TAbGY2ZIif7D/AEyCHB3aa7D3zOPEk4yKKl0yOkvUfsFZHCq35AA
sl+YH00Gppku520kav8Anq89o0aS/U7pToTnf/L0EkMc0/SXLOP9KvOvyeDA
wLBl9SK1v0AGN9ZPKZ1A+KT15AVlEPY57QrxkzG/AX4fh+8zSf5gfjcZxwfM
fyCD3fNuCXrg+CWBp79ksPhx01WiNzA/Qh18vd9yJeFfbhE6p30d10uYP6EO
JkwWPHqF44OU4K0Dq84XfG3Far9CHZ/f1eTnU8Z1vB4x/0Id12dmkceNqoMP
nRb4+InVfoY6jg8sSfm1q+P8GPM31PH1pO3qgjqe36mdwLmO+xPY7xHruF7L
/A91MMqwZcBvoQCJZKRhrYPXjvc9VBK1H6IOdv/+UfwLz2cKkesP1kHT8nZv
yHln/og6SB1bGn8Kx89Iejlfx/sb5peo43zaFQLH79ZBp7WP1m2QqP0Tdbwe
7yH0VUgdtPTZ4iYSqf0UdTyfs99P1fH6x/wVdZDlvLBhK46n0N+71YHPDq9M
ogcwv0Ud79/MaENTBxbNdw/Zi9X+izquj3elcAM/X+71i/CjrekE1sGibn2q
YgmfRNrzr3VQOlyvFeGnmT+jjusjZYTO1pCD4ubzGB8cZ1K/hhx+35sZ5Y2/
5z2RS3vIuR4WQf0bcvi0aO05sv+DyM+5dOWQaGb99zK+/jb1c8i5/niOJmg5
7/eZv0PO9RjafoCc45nV1O8h5/0ppevs5bD//vwoUg+Z/0PO9RAq97nIYZL9
vIUEzzE/iBxa3V3+0Be/jwEVAOXw7ViM5mKJ2h8ih61eGxyJn7gD2S575eC9
cmh9B8JfUr+IHIQX+x8hfk8Kr07LeX1l/hE5RA866RuLxykdcV0OXUrPjAuU
qP0kcrDfMEY8E8eUvn8oB3fHjob9xWp/CZ7f09XHCH71X0saTDn36zC/iZzr
5yeJ/SNBDuFTu7i3Eqv9J3JYuu3wpWay30j5yMHzaaBlSfx3KyhAkIPOF9fx
g3BM2y2hnPM1zJ8i534CSk9+kvP9zPwqchj37tqqUWS/0d/ryWHh+pZ/Cb5i
/pV6OLRJtPcljjVowazn+5PSYb3qodv1r0NIPqTHY2A9XLVLCrlYqva31MPK
mueVm/H9FE6a1fP1ZX6Xeq5nUvplTD3n05n/pR5MX0yPIP3jbSJXTK/nfkjm
h6mH+98SX5P3P0wNB/X8vDF/TD33A6yh/+ohJ2j5QcpfUsK4HsYUJEeQfE3L
5a563h8z/0w93y9WFKD+u5/5aep5Pe9LG/567s9k/pp60KtbPYas3x8iH/vX
c36AtjNB9TDZ8MHxYhwTtkTnRT2sufxg6Bix2n9TD+ccpOaXCJ9E0kFsPceT
zI9TDwdNnt2qwM9/Tu3m9ZyPYf6ceu7vuUoPXD3/fQnz69RD+PRtj7Rx/B+R
Z+T1EOajeVcmUvt36qEx9tQiwOPUbfHz33xTeqOlAmyy7Rv24Pejn6upAPkY
nxWdxGp/j4LrW0OpYKGAxZe/2I8Xq/0+ChjduXJBUpkAdSfttJGC5wfm/1Fw
P9cPQj9bK0DYZqUbyV+0HI1TwJWnE4024vctp78PVfB6yfxBCpigPaov0Ufi
6e+DFRwPMb+Qgvs7g2nDoOB8APMPKbh+e4H+nlrB9TDmJ1Lw+rOL0GsHFKBr
Yn6T6LXMX6SA9Ik3QojeQOWocwruT6Xw9AqenzXmpgQfTCB2jjsKUL3bfZzo
M8x/pOD8rhFZ3scKsBp8U2OHSO1HUnA/eieaABW8H2T+JAXvB78Q+iBFwfUU
+rhMBT9/lG4vVECLdfOv7xGr/UsKOOHkWOqF/95bYkeoVnA9jPmZFDy/BpCf
0zYqON5m/iYF3GmXFboPx6dJum+t5P0I8zspYY+HzX6Cl7dQg48Ses3qfNFS
rPY/KXn/sJAeECVojO67uS1+/2nUD6Xk/NEYIr+ZK7m+yfxRSvAUzXDPwLEO
beCUnA9nfiklxJ90mnQEj7elhJiS9x/MP6UEv7gLGwh+qCfwbyl+3zta3Qg+
qKB+KiUUrpvlTfjdbEKXrP/3fsxfpYQOzkcMduM4ksgLe5S832B+KyX3C9+l
v0dWQkHT1P+If4j5r5RQcS4/rwjHR2lBUnK9mfmxlLB/CFqkg8fXUYCvhPWD
+lURvsmF+rOU3B9lTw3kSu5/m0j9WkrO51pTAlrJf29jTBO0kuvx/amgp+T+
JObnUnL9g9qDqpQczzB/l5L/nqKaHF+VkuuJzO+l5HwQhbvNSggcfm7sVBxT
+00bFef7KT3USQXbJ0/cRPIJ84OpYOncyVdScEzllAEq7udj/jAV939T+4Gp
ivOBzC+m4nz4KvJ6Nip4dnCDJtk/zD+m4n6q6dRgogLRpi7hxP/G/GQqvj60
/XVSgUbF4COkHjJ/mYr7cyhdvFoF5rLmgSvFar+ZivtJKJrcoeL7g/nPVDxf
VFaRhgu/T8tnq06K1X40Fffb0nTlo+L6MZXzbqi4HkThvZ+K6+HMr6aCbZOm
BZL+iNJhz1SQ2/jJ44dI7V9TwZzMhrVa+P7dRD56qwL/t1+7Ef6E+dlUvP9i
v39XcfzP/G0qjl/Z/0/h33wwv5uK9+8UvshUHA8y/5sK/vxXmNKP8EmU4FBB
2aysTQS/Mz/cJzgcn9+O+JP+BxLAVUc=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -29.907263364207953`},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-25.328436022934504`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29.933606208922594`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6.907755278982137, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-30., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-25., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-15., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-35., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-34., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-33., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-31., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-28., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-22., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-21., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-19., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-17., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-13., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-8., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-7., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-5., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{Automatic, 267.1495199260051},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 1.}, {-29.907263364207953`, -7.9592122407781645`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxlmHc4V//7x6W00NawN9l7xv3WEKmMFqWkRYSGorSjaCJKRpSGSMnebntG
H5SMVJpkJUVa33PO+7rO67p+P/+4HtfrvF/nNe77+bzvI7XNy24nLw8PT9Q4
Hh76/6W+jLiRihTTvN88u2NfaWOW+2idxQFhSL1mP6hSqIkd/zJf5doqgZF0
prPlZg3sf++b+DldG8x2+zr3iapjv+Xcj984RjDpRkid+Igq+rS0Bp/YxQG7
xxIZM2er4khQglrAwyWw3rng+x17FfRZ5FN3fsgcepvfN3/PVcbR/mVuwQYr
IG91SKqtljL63poz+drxVZAYa5aKOUr4+8HXxlXbbEDsT6Ng56r/z1crXMXW
rdoKB3Q31J64oICK2fa2Z3a7QvXXAiWxL3LYufZOycvFe2GfcdpuvWJZfLAq
umPAxhsuXeazTWqRwYPmYT8mOvmCyvnsGN25MmgKF2eIexyFgAXWhwq8pJFP
dHF4pMlJ4NFS/GPZIYVu802l7y09Da9LPN6fWy+F9XOMHj+x8ofGZCe9qDZJ
1J2pt6jA7izYFF7f5bdTEiMFtaqrHAJBN2moX7hbAv9NUVvfvPU8/Bmn55gy
VQJ3TFR699rlIuQKx9X4KIljDa/83i+el+Gzh+A19cVieP1f8PFfRsFgtMFh
315LUaz5M23ZKdMQMB0wkDikLYJ/fl3kn7Q4FHhn1/YNdy9A9bGpjReXXYXk
4LSDE03n4/bRwIhZlmEwP2nWCZ0EIQyndhuxMhy0drdYVcgLYOWwv5y4zTVw
acqf3PpnNo4N8fbGr7kOu77muQlLzUPVrydTF26IgG5jn5ktL+ej08Bf38cb
b4CfiNA9SQFhDO07CrpbIkHHLa+0+pcwln8Z48tzjoKwZyKxFqUiONrtW8fZ
GQ2lgpv6aveKotLnH6EVrjHwddUF63ABMdz00dth5Z6bMP51f0tblBhefj8k
0egVC0/RWWmBtDg67zP4lmQYB+N+HPLDW+J4ZK/PC8+8ODi8ekVEmKgEXvXK
zNE0uQW2a3RTPlyVwGTP79HDhbcg51JUs8MESazw0DmZxbkN0dauAV0mkvh6
z4HtR0puQ3zlVK32Q5I46p5qbrI0HviiPxw5/VgSZ7t/XchTEQ/98/tl+D9L
ooqbhmDp8jsw2qHdclNSCs13ew0GVN+Bb8mtmlsdpNDJ9VGThdVd4O+bZ7sn
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
/D+IXmQ+
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -39.33628722662641},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->FrontEndValueCache[{{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, {{{{-34.538776394910684`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "15"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-20.72326583694641, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-6.907755278982137, 
          FormBox["0.001`", TraditionalForm], {0.01, 
          0.}}, {-41.44653167389282, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-39.14394658089878, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-36.841361487904734`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-29.933606208922594`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-25.328436022934504`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16.11809565095832, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-11.512925464970229`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2.3025850929940455`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.4054651081081644, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.6931471805599453, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-40., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-30., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-20., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-10., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 
          0.}}, {-50., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-48., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-46., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-44., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-42., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-38., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-36., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-34., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-32., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-28., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-26., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-24., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-22., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-16., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-14., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-12., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-8., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-6., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-4., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-2., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}, {Automatic, Automatic}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{Automatic, 262.6994728786833},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.9991}, {-39.33628722662641, -3.5189329075921245`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, 
      Charting`ScaledTicks[{Log, Exp}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8684768168103857`*^9, 3.868476930962381*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"d38d8996-31ca-4dad-9e82-aac5e59e823c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reproducing Hector:", "Section",
 CellChangeTimes->{{3.868486770341717*^9, 
  3.868486775997376*^9}},ExpressionUUID->"fb3bdc9e-ac0c-461c-9f02-\
07383067a81d"],

Cell[CellGroupData[{

Cell["Reproducing Hector\[CloseCurlyQuote]s Plot:", "Subsection",
 CellChangeTimes->{{3.868458589251995*^9, 
  3.868458596428363*^9}},ExpressionUUID->"e376957a-baca-47e9-b90a-\
ba1d878647aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Fig", " ", "12", " ", "of", "  ", 
   "\"\<https://arxiv.org/pdf/2202.01329.pdf\>\""}], ",", " ", "Conversions", 
  ",", " ", 
  RowBox[{
   SubscriptBox["\[Phi]", "J"], " ", "=", " ", 
   FractionBox[
    SubscriptBox["\[Phi]", "me"], 
    SqrtBox["2"]]}], ",", " ", 
  RowBox[{
   SubscriptBox["l", "J"], " ", "=", " ", 
   RowBox[{"2", "*", 
    RowBox[{
     SubscriptBox["l", "me"], "."}]}]}]}]], "Text",
 CellChangeTimes->{{3.868459485391026*^9, 
  3.868459536904601*^9}},ExpressionUUID->"5b9fa454-7c79-4aac-bea8-\
855621f77bcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ls", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      FractionBox["0.7", "4"]], ",", 
     SqrtBox[
      FractionBox["1.", "4"]], ",", " ", 
     SqrtBox[
      RowBox[{"1.56", "/", "4"}]], ",", " ", 
     SqrtBox[
      RowBox[{"2.78", "/", "4"}]], ",", 
     SqrtBox[
      FractionBox["4.58", "4"]]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868458599832283*^9, 3.868458648809812*^9}, {
  3.868459231352145*^9, 3.868459232967993*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"a14ecfa6-dbc2-48a4-b721-d92b6474e11b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cs", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0", ",", "1", ",", "0.5"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.1", ",", "0.5", ",", "0"}], "]"}], ",", "Yellow"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.868459371165625*^9, 3.8684594574006166`*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"e2db8b1c-b8c8-477f-82d9-d479b7aa6d7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0.5`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666668, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.1`", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.868459413894184*^9, 3.868459457808124*^9}},
 CellLabel->
  "Out[315]=",ExpressionUUID->"c6a409b6-fd51-443e-bf8e-b6235a96726e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getplot", "[", 
      RowBox[{
       RowBox[{"ls", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", 
       RowBox[{"cs", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "ls", "]"}]}], "}"}]}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.868458730240631*^9, 3.868458737142919*^9}, {
  3.868458963671714*^9, 3.868459006013857*^9}, {3.868459461755887*^9, 
  3.8684594636571817`*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"d3faa938-c3a8-4ace-b0a8-bfcd33d7e70e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.002606105651797`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 299, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594888879843`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"9aededac-81d2-4e09-b4cb-caac6d66ff89"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 300, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488894153*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"6f740314-f026-4ccb-9224-31f6d13fc2d7"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 301, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488897122*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"a7bcac76-4613-4c77-affb-4254de478f7d"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 302, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488900008*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"7d697f94-2b54-4e29-a5b8-1b8bfaed66c0"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 303, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488902882*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"ac9d3c4f-01f9-4233-b0b7-c81f3e050617"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.0064448053314559`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 304, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488915477*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"e5a5399d-ff80-48f3-9552-1e5e4f06db23"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 305, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488918764*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"cbd4e68a-2c52-46c9-a7d3-9457ca66997d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 316, 306, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889218273`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"0ef5ed84-4364-40df-9e57-64e70d2c22ab"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 307, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488924988*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"f0dc8725-b583-4e2c-a1e2-6ed60e690b76"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dprec\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 316, 308, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488933343*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"f912eb3e-a8f4-49c7-bd3e-85f8931d690b"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.011308554894513`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 309, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889547586`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"234fdf50-e3a4-437b-9bb8-3c78fc16c4ca"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"ndsz\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 316, 310, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889588003`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"6c3ae0cc-248e-4ed0-8c22-21b5ff5b07f1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1: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

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0.5]], 
         PointBox[CompressedData["
1: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
eyMu5qL/A2Yd460=
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1: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
FBj/afHJpncBheW029TPUiBIYU170qMFxFGifZuJaRi6O3XHSk4vIK+K2AwN
rmH4ef0Gb8mKBfS/4+dCw5Cjmm8fRZ1H5/87Ti41DNB7zmtn5jzq+ZanWKE0
DK63zCbeu80jY4rk/plVw+Chn/96eus8qmZcdVTVGIZqE7PKOaZ5tHOuPcJi
6zA46I/eLKyeQzlMWwqCdYfBS/ij4ebwObSaO6638NAwIHfLlvOWcyhFeI59
1GgYaisPNB9WmUPiMhZr5S2HYZ2o+vausVl0TznfWP/0MExV/VAWL5xFTGpS
13wdhmHD1fDSn4GzyEPTMyXr8jA8e6Js72E8i0Z1vlb0XR8Gx5zkuBjFWXRq
75ZRkYBh2KiXSTGiz6B2vTiRvfeGQeTSDp5nRTPoqNncliuRw/B5XKHx/t0Z
9PGkhc3zxGHwpTSqcljOoC12+YHtT4Zhc5GxqMCaGZR5SSqDK2MYRj7/ykpd
mEYqVz2btuYMw7IQP63ST9MowffrnEPxMJjx9tJsk6eR4J0tiknlw6Ah7Lkp
yHkaBYbF7fvy+W97GKtvrd89jRbj5i7+bvlb/ib3M6bi08g11SJiQ88wtNxN
d5oZ/omG0vLzbQeHIV1Kw1Ck5CeyypbqDacPw5qisppn4T9RU6En+8fpYfAJ
wGmZdj/RwY9f1X7+Gob4seD6Ndt/opJPW4xXcFBBzahntZTIT6TZEudpLkCF
h38g1314CqV1zz0MkqCCN3K6uRNNIYVBi4p8BSoYStWnusVMoSh6Po26kgrK
y2Z2iVyaQjwzUiKyG6hwwXFZuNT+KXTzt+cWPW0qvC8pb7ylMIWmOTqsvYEK
PVqS+mazk+ii4NbAzANUoKQ/t7rTMIn6JONf9RpQ4XY/w1oufRIdU5pvFLKg
Qob7Iha8NYk+rzo+p2tLhfo/v+dsrSfRbo0CBTd7KognsAQJbJ1E+Vul9z11
oQLz8rs/JcQm0frd1y62elKhyXx3iydjAj053BHO4UcFBae3HzZ+mkDSJlvz
tYOpECJKs93zYgKFnoj/Zh9OheaEA9ZpAROI/ew8W0I8FaLWKlw6YzuBrjse
V/uUSoU7A356Ljsm0Lh7gdFSGhUOPWcuqZOZQHbe0p7rsqlwJtzhrvfcOOoK
vPbQupAKzxn3b3u1jSOjBx3loWVU4PZjvVuVM46qYrbScC0V9nL/crONHEc7
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

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.1, 0.5, 0]], 
         PointBox[CompressedData["
1:eJxF23c8V+//P3ArveyXvUfab0mShLhaGvYmGQ3JysjMDEkq2XuFUkpCNjkn
lZayCSHJfC170+/9/nx/N8/zz7nd/zrXOdftdp7XOdfzse2yq+FVBjo6uj+M
dHT/naMo5Y8WG4vVo0LT1V+V78PnhZYDg+z0UUaNmErbJ3FciWFL9lXbi6jr
xihvKqMoPufD8fd+oj0yHmMk59sK4z8W7smdv+KGVG2PHjmpLoRXykfbkP09
kczML/P584J4onN8dHCCL2qWORDpmy2AezxNxnheBqCD1EPHe+kF8L3T3xbb
Lt9C8Qf8emxu8uMpnC3RYq6hqLIoZ4mdnh/fuq9tt53/bbSdn0fEL5EP9z7X
gb2KuIP2Cp5OVz7Eh4/adZktx99F6RGRAbf6eHGT2z9oJx7dQ9aMszIzkbz4
+5zeiAeFD1B7v3BlsDovroD9lOyqeojeuXKZGC7x4AYutL7oyzEoQmrlV10F
D84SOPW0zD4WjSgmvpG/yYPj96c9elzikJtVfqYq4sF902bQhmc82n4x85gv
gQc/UDDLtt0/AbHTH4xM6ODGxyrnus+EJKLeoLi75/K48ezG+TzniCS0JfCz
soUnN27aueAaG5WMTrPr1see4cY5/yyqVsSnILOQ6pW3Ytx448zS1r7UVFT7
lRjQMEvEA+lX2v9mp6E5u8gE1yYirkhczd6Rn45+b1PKK8gn4mSJNadzhRmo
W/hUoHEoEX8su67kUpqJZGZzpk1tiPiFoxuM8VVZSHmh5VKaGhHn1frbXFmf
jXjvJTmxihPxkX10ui6XH6HanNZje1e58ONldGW3Rh6hqQDOGP16LjxTlV4k
3j4HTfIFmzuHceHLDfS3npBy0LOBBz8uanLhJpoMo5UuuehqdFUhHy8XXtzK
oP1lOheZsjlEufVz4uznGUt/euYhe8ZYfpsCTtz+F6MQbTEP5T79EtPkzYm/
v8YURO//GMmZfmzO1+DEJWlMf3g3HiNrm+0M/fycuL/3Fs1dIU/QM8+uBJsx
Drx7fUvxEaZ8dF4hjU+qhgNXCGcW0IrIR5yCtbzcDznwaPatAVasT9EegQGe
XVc48Mn4rb9do56iCRMzZyNlDvy0KOFsKPEZWrZ5c/whkQPPzSUUJcQ/Q1Lv
3Zyaxtnxjb0sfE8FCtCJgF4HpgZ23KKExa86tQBZ79pnLpvBjpcfYf31Vew5
0ozw/KXuw45z46ynB7KfI5f1Xwfkjdjx62fYCqekX6DWNpaZNTl2/PN3Nh7G
/BfIvkdGPZ2DHd9pyu7Lv7cQnchUTN1CZsNv9bMP7C4sRFmhsROKX9nwn7Yc
p1TkXiLW/FT3XS/Y8CNkjufapS8R4U7e59b7bHiCByfRRrEIfZBP7D14nQ2f
WuH0dq8qQqNsCz9O6bHhWqFcP8NUXyG3NtdjjAfZ8KcsxBNJ9a9Qu0N5swM/
Gx56lmDcIVWM9Lwab3sus+JyDwgRVpeLUUFnRKrkACve30yoGc0rRieeFty6
9o4Vv8/LQnEdKUZ7+jp+ny1gxZXNWKSWd5Ugh2mRDDyaFR9LYzEKtS9Bh/py
q796s+KJAyx32J6XoJyd0T7XrFnxk9Ks1QmkEnQ0WxjFnmbFp6+yksVlS9FL
q6HHp+VY8ewCVsmnLqXIc97+WrgQK65NYTU8UFyK6jUarmsxsOIrB9jCq6dL
ERZh15hEZsGfebJVnVB4jSa0lPOvdrPgplVspK+erxF7Qfm1igYWnGmNTcKk
4jUy09a4F1HEgpcidoOBxddoOfVtSXcaC34xjP32NeUyNBQtmf8kggXn/Mhe
OeVXhmKLzhhNebLgdawckzfrytB4h+jnisssuKMuhzjjRhkKKnqpuqTPggvG
ceg/QOVIChUwliEW/EMnRxh/SDkaYl/KmtjPgnsIc1ZkNZSj7PLckhQJFnyb
FefEbqYKdF5pifktJwve/IhTrESjAuVIMcVf/kvAA/9w6qlEVCCkauMZOEXA
ZfZwhb77VIHELR0WuH8T8B4nrnJt1kr0aGEjXqqDgEe84hrv1KpEv0wbVgoa
CbjiLJeoTVQlUnQR5HpVTcB/Hybqjn+vRLUvV6YOvCTgMX7EEHdiFTpZM04v
n0PA1euJZSsGVYicIkkuTiTgZHrusbD4KvSPRuaL0nsEPE2DW4Sjswrd1bRP
PXKLgJ+N5NZJEqhGp69Sbmp4E/CFJu5bkubVKPPSo+ifzgT8MZHn9bPUajRO
Kn1Nb0vADY15RuX7qlF5Q5tP9QUCTpfCI1wrVoN2dMyZsBgT8Jd9PNqnrGuQ
J7vN4qI2Ab8gyRv8LbsGjTS4PIk6TcBZrvCWmg7VoKr1KM7OYwS8Mp93ZFC6
FuXH07p+qhLwq5O8Qg62tcih5cNYrRIB593PpzXzpBbR/f/jrTtfkP8Y2LWc
r4Rpb92mxZf5/kQ5gr8e5RcULAT73uLXfEQB73rPH7hX7s2mO7YKFJe6gUO1
BIZVS8EHogUEPsyCB9oEzukq1m/6gYBgQLc3WMVC8NXFKvB4puDviWVw4pAg
v4cqtumTO4XOrgWAp+2F/MPrwfqm7GZb6fBN7/Z9MPVVCryeyn4v5ji4o/bB
dpPL4Bf97G+Ew8Chfx+YDuSBz2/jmMp9Dz5wMiry2gh461WO7fuY38L934mq
m9oFLn/GYVp+BvzgSxTtpj34CpkjUj0SrML5UJrxOZj7AGfdxy/gcYOHJg9I
YMyDk6bP3rDppMSHd/llwdcrOaV7dcCneh7WZrmARVc5Ta5Eg2fEoqm7i8Gf
1LnuklvA2Rejt5VMg71DuWq9eN5tWudxtLGKAnhHIxd1wwi8OhYd8c4T3MZC
3HY3EVwgE1OjXQG+pUM05u4Gm7nGUDoXwftjiRFpQu83veV1jJSNMvhnB7Fm
uwX49UKM0bgf+J4QN6UwHXxJJfaOex34iCW31OF+MFdQbPXKOng0m9sIk/iw
6TdvY8lhCBw/zH3n7EWw45Y4SY4Q8PHdPNWtOWChc3GGSQ1gmiMP2WIY3Pgg
LlySqXHTmUU8kn92gD1b4qqeaYC1ZngMr9uBpfniSfIR4GVF3vCFp+AWs3iJ
2k/gpzd5q4InwEHp8QanWD9u2uQNL4kgA943GH/7mxaYkZ5PIs4Z3CudUGka
BS45xWcgWgSOsEuYHPwOtr7Ld/sxDaz4PEHcgfhp0+xNfJWy8uBhSoL+jAG4
hot/suIGOFY+Mcw/HmxvxC9+rAyMvBIrmDrBAsn8+p/nwZSqxIkogc+bft/L
H2aoBE5fSxQTNAffkBCo6PMFnzuWpPcoFSx1WWDCtga8GJYUurcP/P2JgBh1
FfzkY1J5qdiXTQdMCOj5qIEN2ZLHVa3Be2UFQ+mCwXR6yaIfssHdboLlkTi4
KC5ZV3cIHF4mOM7D8HXTll3JId3SYIUlQdGMk2BWkZSyi7bgIVUh3Z3h4Cqr
lLGJJ+DoYKGQokawXU6KiMcYWO2dUJkSoWnTfCMpOmt7wCRm4TH8HLhhT+qt
cEdwqqawiOZ9sJtz6mvOQvDph8I67U1g8eLU0WQKeK5V+JYl5zeon7Opwtvk
wLn8Iq9H9MA3ldK0n7uB9c+LjLrEgnf7pwUrlII3MkSEl9rAnfVppXWz4MJf
ItohfN83HcaQPqKhCLbYIRrMagqWP50u1OwNJtiLlsYngwcj07XMq8AVL0RH
xHrAUd/Sg4aWwbY0UaF8keZNq3JnlDiqgrkVxLTkLMHjxhl/ZgPAmLdYUFUm
OCklQzCwHny9Rqzk+CBY2kV3JyNdy6Y5gzlvXCWCl6O/13+UAo88esj2jzy4
pUTX/MFxcG0D5xOqAfhp+/dp/cvguD8P1V/fAAfN697nDwM7MHP98IkHmwg2
7+jNAx/bE+1+tAy8T1mvPus9WFCTi42+E8x4odnsygiY6hT9+MM8uDdAb3o3
c+umP0Rxqd8TAJdkNd8j7wJnvIru1lUC38X1dpScAXu0crnzmoNtfje/8bIH
a85Gs/7wBSsy6ZupRIK38RMfZ6SC2Xe1TG0UgJcOx6hdqgEPn9G/9+4LuNmc
2L2zD1zj0LL9Lgmc7xfjNrkKjr2v/0abvW3TgRlE1ldiYPuXLabcsmDj+pg8
DzUwataf6tQBy/wiqh2xBgtMt0SmuYAZGGK71oLAFB6D7TbR4J7t3G5vs8Hv
D7XWbS8GF2vEstzBwemmBqbjLeA717jzNIfAN3xbaYXTYKvI2KNcDO1QH9IM
It15wIdecHe1S4Ol6lqlDyuA2b7FuqacBC/2G9StGIF/U7lZrGzB3/+2mmCe
4GpiXO62cPCTbYa0sERwzEGeo6NPwAEn2+6erQBfM47rfN4INrpqKM3RDVb3
5nF1HQP/E9FW27oI5k+JIxwidEB9KjA0SRICk6t5cpf2gLu/tFEtlMHv+uJU
35wDF5EN70pagNPWeTpDHMHhnO3b/viB3SXjXU7fB1seMKp9lg4+e5yXwFYI
VjBsN75eB5a8Ep/T3ARm9TSiyveDF27zqiZQwEOJ7REL6+Bv+fEd5pydUB8r
jbbVSoAff+J1EZcDR/e01wQjsN9/P3z0wHarRsanLoIN2Ply8t3AauIdFEII
eM/+BBWnWDAfMo74lgP+q8fXIVcKJl3skIprAHe5J1yfawM3hBrXmA6DX8bz
ba2eBac+7jASZera9O3yhEeBfGC3RmPK4A7whW4+lROK4DPjHXcea4APLie0
M5uCJVhNpBzswCyi/Ne/eoPnZTqrZSPAv44mMsckg7/qmBjNPAVXWvM/Mq4C
57p2kis+gR/eSlQW7gHfjDW54z8BvprL396/DNZ/3Sl5jLV700ffJzrnioB3
d5pUM8mAeUf5ma+pgjcWOg0/a4EntyZly1iCO4VMyVHO4Ld7BZSnAsCFKl3h
hlHgFK2ktrJMcJilqaRgEdj1uoDzzXqwRVBXVd93sEZ00hb1QbD8I1PDRzSw
WIlANgPdj00TGrpItkTwbFvSkY9S4MFh0/C98uAvcwJt94+DK7Z0S1ANwDkC
yU76l8FRu82qSm+AfY8IbuEPA9ue6zbwiQfrWSRn9eSBVZ3MSKpl4F0Bgkey
3oN5orpv03WC1zOTWy+PgCeKzCQ+zIM7MEGn3cw9m8ZauisjBcAvhpKZyLvA
STNmBrpK4FBGoaziM+DrfD8meczB53emKHnZg08dNr/d7Qs+cEaoVTkSLGr+
QzwjFbzVIcVxowA8c9O88mINeOCeENO7L+DP6T/0d/aBywtTMiNI4EdvzCcn
VsEPvgspabP3btpn8EdYkRj4ylRKC1EWrEt/XtxDDazCI+zYqQPeub2nQska
TDyUypjmAl47dV5/LQg8ZiKcaR0NbrfrmcCzwfU+qYe3F4Of3z0fFo6DE1OF
W8ZawCHPe8Q0h8DOtakOhdNg86bzFZwMfZs+2S/M6M4DlqP26LVLg0X+pmYo
KoCZiRYTySfB01Iih1eMwP3yvaGWtuBPJ9Ka6z3BZUYWYtvCwdm2Ig5hieB7
Xr3lI0/A3nfSGM5WgC8lW+g9bwTrPBPJYO8GH6nuHXcZA+/4kqbYugjm6rMI
VSD83PQqSaQ5UQg8utYrurQH3MaRbm+hDH4jcaG87hy4QE6UQdICnHCsTzfE
EXzLID192A/sdPnCuMZ9sJmHqOKzdPCJ230hrIXg/Ynp353rwML5F0Sbm8BM
laL28v3gqY99ZfEUcN+PdPqFdfDHiQu65pz9my5dEU2vkQBnsf0cE5MDR4pl
HApGYC9Zy5AhPfBFdbHvJy+CtfV+iuS7gZUuZlwjhIC3u1uWOcaCOUPF6L/l
gFfifurIlYJH8jLSYhvArWWWY7Nt4LoPYodMh8HPun7eqpoFx49lfBNhGth0
8JKlSCAf2JFF/NrgDrCJSP/r44rg4zKZdI81wPuOWukwm4KFdMTT7O3AjNb9
o1+8wTSXTAXZCHBvsNWt6GRwY4z4t+mn4JKcfmHjKnBmaaZdxSfw3XdWr4V6
wJ4d4nT+E2CbkX7t/mWw1kJmKmId3PThrdajOSJgaSEJBSYZMMfegWA7VfCy
clbTJy3wH01rYRlLcPMFCbsoZ3Ct80ApLQCcH5j11yAKHPfQWrssExyYLZEq
UAR2KB4Y8a0HG7/NOtj3HXyszTpYbRAsMyzRlE0Ds/m5stPT/YL3YWjzwYME
8OJ/2+NE8PX/tsOFwL/TaU8+SIHNH+s1LewBfy98NbNbHnyqnEv4vDK4+o0r
unccLNfYfLX2HPjJd7kHZAOwSHd0qbgFOGaQ9kP3Mph5XO9vsCM4YOrVzpIb
4OklLu3ffuBr9G43eMPA/SwtKafug414DmBe8eBPIjEj+elg9e1TbD/ywGUy
+gdZCsH/HCo2VykDZx8lBjvVgfk13J5kvAff12n5+q0JTG96YGajA+xtHSN0
oB9MtptSvzQCvuyqfzWOAu72Kb7/bh6sc4tYOrcOfnfX7cdO5qFNK8e2bJhy
gotSD+y8KwDekRujVS0BTns+5T65C0x8rZ8iKgcOry2u11YCr74jjgQisHuT
G9urM+Cxjhb5X3pgy/4D5tzm4LaRmKATF8FnqVOPPezB9Qv6Xx+7gRX+Fk93
+oILtnILbQ0BSxLd1Y9EghOEWm0dYsGs2+Tvp6WCb+2NLfmaA16Qn+5eKwA7
qRhsyJaCh06U7LCpAZtpcWvFNIC/Gbm7v/0CPmHZmjzTBq6yla/f3gfefz32
j/Ew+LHXNOsdElg4yEC+chYcfafEbHwVvCWaO0iY6fem/ZPdH2uyg6eyW7/4
84HtnslPF4qBfxbHCg7sABtWT6txyYI/vjWwPaYIVvtScs9dDfy6jbskVwO8
p8+9u10HnDXcus5kCuYjy+84bA2+Nxerec0O/Hdt2i3FBey1xTD5szeYxFH6
ZiUIfEmA549MBLhL4garVTRYe3fbgYfJ4Aa5g2ZYNvjIkbjAqafgl8dm8rYV
g7efM/xiWAVONSidCsPBXBY8guWfwLcv31AbbQGvOLZdEewBu3kcvHd2CDzi
H1d8cwJ84fZM1/NpcOsDw/W+ZfCZxNLtHAzDUP8zeTTVWcEH82+4ufKAnxW1
JT0SAUtUHnzTKg2Ox+KGGWTALJ9mWA4pgINbDA9cVQXP/yg1TToJdhziCfyo
Bf41cSNvyQhsOtP2ea8luGnl4JSFLfg4Y7zAA2dwJdvs0TeeYFk+oyvUAHCu
2OtIyXCw0E7eYv0o8ENZj66QRDDT4fa10kzwTXWF7X+egGmn48/xF4Gv6s26
nq4A95kZJfnUg/Uvvq571ghutOcd7vkOPuruwcLWDS692S53dBC8O1TB9PoY
OPNefEAWDcwbP5vbvAiOTDf6/O+qY9Mbea9p8gSwZyGvwBUieLLM42iCENjm
TfvlD1Lgzg8KkQt7wFrf41/tlge/7ZrtNFcGHx40Wos8Di4cey1dew4sPcV7
jmwATlnycBW3AHPQdyTqXgaHsRyqC3YEL3Mn/C6+AXYVmSP89gP/kTaW4w0D
W8iUmZy6D25R4AvwigefPuqZm58Orj3V8ak7Dyyvc4hGKAQ/NUngVykDi1nP
qTrVgePsjC9nvAcTXMvufmsCB/nwvdroAM8Ge3bK9YMd7nasXhwBD8Ycko6j
gE1SE86+mwd/yZlzmVsHH3tunLiTeWTTFaVltaac4H21fL8jBMA57zwJ1RJg
waaO/ZO7wFEdh0xE5cCM/Qn+2kpg35G5nEAEplKMPxWdAdsulFEH9cA9G3z8
3OZgva1eqicugj9wdV7ysAerCinefewGLpZKLOr0Be/aO9/BHALOkDdZVYoE
86iUb3OIBUec4D+blgpe1/Ry+ZoD9jDqTFgrAE9cUKyVLQVb2yYOWdeAO5zn
t8Y0gDW9TPa//QLGA8uNZ9rAinf4/bf3gV889MoxHgZvS+78GE4CJ2crUitm
wezPEvnGV8GhxfMqwkyjm16qMrmkyQ6+/rY8wp8PPPyZv6hQDHy+zaujfwe4
ubdzhVMWfGpYcdsxRXANKfGMuxr4wNz89VwNcP6aSUK7Dlh0S0UNkyk4lkNg
SNEavFXAe+s1O3CgRJdsigt4Ztdh48/eYHu5JL+VIPCA0sIjmQiw8THTj5bR
4M9nKyhRyWBkIMCHZYPLz3urTD0F/3O56+K2YvAjx8MRhlVgAY+kl2E4+IH/
QnvZJzD9bdOVkRawz4MKKcEeMCVB4MzZIfCVTO/rNyfAP550xT+fBusWHa7p
Wwa/r0j6xc4wtmkVbIFZnRX86qOprCsPeGdLhdEjEXD6DwG/Vmkw95D3IwYZ
8J2JrkYFBfDa9GGKrSr4xkoSb9JJ8BjDovJHLbAVm9nFJSNwO2/lnb2W4HNi
gi8tbMH1O3za7zuDD8l2L9d5gp8rKklRA8BS6smnJcPBiacXnfWjwGx6ZvEh
ieAQs8rq0kzwoo3gr+EnYGd7H2b+IvBvt+59pyvA5jeVjHzqwd9Dkm8+awSf
vLeY3fMdXB1n1sjaDZZLrySrDoIf5wnyXh8DixT6KGfRwDFl3TbNi2DmN0p3
6OjGN+3/IblQngD+X/s5EXztv3ZyIXD/QKXkBymw4Zjg6YU94E80H+fd8mD1
pe44c2VwGd2R6sjj4L0sKYM158DZ3EtbyAZgfhHzfeIW4PvSVYa6l8F0MkI3
gx3B3gq+2cU3wGTVHx+G/MCXTh0h84SBu7VTeE7dB+uYLB3xige/szK3yU8H
H7GrCu/OAxe5CBUSCsE7fHzblMvAacE/lhzrwFx3j0hmvAeHx6RofGsCr6Ys
OW10gN1zzOPk+sGjBVVVF0fAlqVCg7EUcFuN75Z38+Cz737IzK2D33w9YriT
eWLTCh0pvqac4IKfS1kRAmCJEfMPVRLgBEoVaWIXmHVBiEdUDnxrw/eIthJ4
nrnHOhCBnbiUw4vOgIcEU18M6oHNpJZbiebgpj3nl45fBJ+Qr5bwsAdXKQtr
PHYD7z9x06nTF5yn2RPLHAIWNlKuUooER19IHbCPBW+xXWZKSwX7OZ+X+ZoD
nvKsNlgrANsFCvvKloL7wm9mWdeADR72vI9uAH9MUibhX8Bq2ancM23g0qfL
Stv7wHuKz1sbD4Ozqqpvh5PAfG+FX1TMgiM/32wdWwX/be1ZFGKa3LRXr7KE
JjuY9Dv1lD8f+CJp2bFQDNw1ez62fwdYe626klMW3MAkMoAUwUocfkzuauCX
/L3/5GqAt0uoGLTrgFN3pfkwmYI55VYyFa3Bt5Us3tvZgVdQzWSyC9j1rAj3
Z2/wiL6f0koQ+ML5XiuZCHDrJZXbltHg045pz6OSwXU3Vlrqs8EH/S0WaU/B
cy/T+gV6JpFPOXlO0HENc6xYYTw7NIl4PhbhGo6r2K96i39uTkyiv59OhAlY
rWKmH2v0n09PorPWtuW9+avY12YRn77lSfQnWna3nOgadvyHXyY7Awn91iQ6
ixasYZW/et+psZLQXr6Lvdzn1rF9EyqTLjwkNJaZP+S9uI7lTqcRH4mQUFRm
vXZK6QYmtLJyuFWahFRG2JVabv7FHjJcsGKQISEG1xM+0bvocEa22jAFBRJa
crTlCUyiw2/yij63VSWh1056nqIc9DhN1L8l8SQJDZyu9qe/T49f3dG30KhF
Qp4cQyfmiAx47z5V8SUjEmoK9fGiZDPg+orpJ/daktD+F7EXdikz4o1qqw4W
tiT0SZrz+54BRvzo6Qsx951JSPRtl/d4DBNeoltbUedJQuuBRxPHjbbgu81E
+ykBJFR3J6/c6x9mPNPGn1EynIROdWUO0QlvxXnt+/bqR5EQvY7E7oqdBPyu
m6p+SCIJ9dUetw07z4Jv+KZ7l2aSkOrJCqMtDay4Z8hqxvATEhrM1GMJ8WLH
JyIvvOMrIqEP5e9zj2Vw4jZxtRMaFSRkQf+6te4DEe9MEyX61JNQ7uEv7erC
vLhWnv/hZ40k1B1RdUoCCeP4iz7Lnu8ktCdO5UqvDT9+uEw1jLWbhNYEFA0n
J7nxwrr0AtVBErqwkSeMhIm49IfVZucxEooVq3lqXMmBJ3+7sJBJ+/d5NprS
m3Sy4RxdtWLNi/+OVzF6RsaAFQ8bED35b1VCvTLeFC92Fnx51N9BnkBGYm/+
Nt+d34r/L35FJCOFqDjxw/Rb8f/FoYTIKIskW7Kwmxm3oMv4+V6KjMpvCyz7
2W7BWwhrDAt7yCjD5NLQYCkTrsFtuXe3PBklx1P3KhGZ8FrhOj1zZTIKuf57
u5ofIy4vLeYdeZyMnKZuZe6hMeD5/wRk1Jwjo/Y/ebn3rjPgYgo/G0gGZFQt
T69wZI4ej1M9OiFmQUYYw7SHSig9TjiVwaV7mYzkqhVV3gnQ44Haa4rBjmR0
25MnZkcJHT5rbGlZfIOM+u/FGn/Rp8MdrOpCh/zISKDia6Xj5F9s8KpYAU/Y
v9f7mWxAU/2LGbsENJ+8T0YaR33JlxM3sC/eP+c948loaV9UrfjCOnYs+KhY
fjoZsZCSJ+9brWMVERknuvPI6OPAzdh/vq5hMjFr9oRCMprp3qMUrr6G5aRY
RiuXkVEhV/wHhcpVTDCnrtyxjozimtW7fxxaxaIKxH6mvyejJ+5t2lKVKxhD
aQDDtyYyKpMuEatXW8F8a37u2eggo9mTvQbXPy1j1IajenL9ZPRTI0SeZrqM
Xfma4XVxhIyCVONvsU4sYT3ta+mxFDJq3FY9fC9oCdP7adnQME9Gd/7xMDkm
uIR9+FM3Prv+7/gb6oo2ShcxFYoY105mCnLar48yDRax4vkARVNOCjJ7udNj
YWYB27Xx80KEAAXNRB4KG0tawDKY1UKrJChoNqRNTl9tAePmynw2sYuC1h2M
wnhG57EIwfXvInIUlFL7Lp0ndh5bl7Sa11KioICdH/0Oq89jHnveiAYiCnLz
+NJ7lTKHjR8QP1F0hoK2NHQT7mXNYdbKgfaDehREkvVuiDKYwzqO9z8kmlOQ
piifoBXzHKapqVZ+/CIFfbgVpT1SN4thhpl9N+wpyJ3HtZHPaxZTvLBO/9iN
ghJ2Pab17p/FXlyx2tPpS0GSh87u2jM5g0k5v9FlDqGgqp3WBZT8GSzJU9xL
KZKCVMuV7opfncHYAwPT7WMpqPOHVfzzHTNYaHj/29RUCjLf1qp7d2QaW4xS
G/+SQ0GUmcCR50+nsetJmZxrBRQk3vNefKvTNDactX5ItpSCdJZWdOPkprHz
T60uWNdQ0Pn+z2Yn5qew76/ehEQ3UNDoe/NEjrop7FSV+DP8CwV1j8n0TYZN
YTV44PfpNgqKDX3m1Ko9hR343D8n3UdBWvL7p6sEprAnrWqixsP/zketK+3g
Oxom2pt5PJxEQWemad+6LGhY7O/1axWzFNQ38nlZd46KbSVZPRxbpSBbVfPY
qGgqFjD7pkyIiYr8OJm0w/dRsZlV8b5z7FREKY1x3/uVgtn/F/fjo6J6Jqa2
604UbOC/+JsYFR3SlKg/zUHBjPjVdft3UNGjPhO6gmIy9lk8y5NTlooWJ7S6
Ik3IGNq1kYYUqehrRfHkwCoJK9tv/dZNjYoEvB7qZeWRsH+U6sdyNKjobueM
b702CXuEJDjbdahodIWmdHhxEhM4G3SIyZSKLihQy9dyJ7H7+gMWitZU1OV0
1o1FfxKjP68eYmdHRS4dsoeMNyYwn0tZT5NdqKjo+TuRzpcTGMVh49snbyrS
uB0aftt6Art8w3puOYiKUga+iFwgTmA//OpFZCKoSJTtZYPBu3FMN0ziuGU0
FRWO/sq75DOOvb8fdC0qmYrMuCalbu8bx5QTBqLqs6noXszVztLfY9irDPUy
2lMqUjkaFD+WOobtfJLVK1VMRXni4ZfEDMew9JcbdIZVVNSb88JHi20MI1ZY
7w7Dqej4uX411w+j2J36ep2yT1REbq84F3prFFtrlPAcaaGi7eyplsFHRzH3
5qA0gR4q0nLpvHRpeQQb6x7AzwxRUTr3rPP2yhHM6pf6mO8EFckZslbhXiNY
+3gWx/NpKiL8UMw9pDiCnZ3eUOhbpqLHRYJFfvN/sPplawt2BhpaUnW/9bDi
D3aIAbulxkpDKvNNA06+f7Dn/8X7eGhI+9ORIk7VP9j/4l4iNHTtGHHmxsYw
lig6ONsiTUOcQZ1fEhqGMbYdSIRBhoau7hXycosYxkL2ZR9TUKAhWoLDWQad
YWzh0F87W1Ua+mhkVXGadxhzVrOJSjxJQw6xiedUen9jvzWw141aNOQe0fu4
J+c3Zq4r2btoREN/PY6GbnP8jX0zDabba0lD9KGolFPhN3bSZnCXhS0NGQhz
i2atDWHV15DOfWcaOiPUWNnUOITtd8v2qPOkoZHAnOTk2CHsse/fVEoADXXx
XelftRzCREJscIlwGrIpz6xf2DOExURio3pRNCRYwxcWPv8L+1+8JZGGkJbU
7ScNv7D/tbtn0pDabqF9xjG/sOncwfPDT2iIO+n9/EPrX9i1F+gWXxENcal0
OhnJ/sJ+vs7O16igoZejNfrqy4OYYd3fJu96GkrfVvhsMGUQ+/TeZvZpIw09
Ejure0d5EFP/hgn3fKch5mNnm2T7BrD/a6+jIcUnXp9aAwew/9tup6FgYhuD
y7YBLHt08IHzGA21qHw23vjQj/HT0OtMGg39YXMsDnLqx/73eb5IQ4a2TyVJ
3P3Y/60Kp1Cd1KN3qPon9v8ArwEZPg==
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         PointBox[CompressedData["
1:eJxF23c8Vo3/P3Ah2Xtc12VGyy23JAlxWhpkjyTkLkmSiKSQkKSSvXdpkIRk
j5NKS/YeSZJkXKTI7Pe57+/vcb3OP+fxfJx/znmc8T7nvN+v1cfOmpxgZmJi
6mVhYvp3HTr+LH22Nk+77uJsZ8fWTeQvypzvZQcjItWj4W5Ysiypxrwy7YS9
HbGSw1rthMZq8ucFnj83YxyJD80XY7NPy5CdMzeUDh93JU6n3yte9VSaLFYO
Ozrm7UF4qH72cWqSImOco8L8or0IgdPBIho0KdL9QVy14GMf4p327qygK5Kk
/NSH2eZjVwi5Z7PR0YsSZDxvY5jE2QCiKTWqxzlEgly1sXm9g/dVQrs7LS9L
ToL0PNBa/ST4GrFNmHLj0xtx8qtD+6G5qOuEo7nz1wMXxEnzq530Xek3iPd7
QiVDFcXJlxndwbdybhHC5QkJad9ppEp1r3R7yW1i10iD45PHNNLYhd4Tdiyc
CHDf8VzYk0Zy+E4+KHSMIKLP5kzs200jyZtT7l0ukUQjf926bmEa6ZX4g1j2
iCLYw06aun6nkpuyprnkvKOJSj/zbdUvqORw8c+Off4xBN1+e/j1dCqZVvvr
rnNwLLF9L6U3/gqVtGibORsRGkfc3TtY9Oo4leT9MqtZFBVPnDzWf2vsAJWs
/fF7VU9CAvFrXWja1GYq6btivuVPWiLx14bfOtVSVFKVfyFtzf0k4sjeAhsd
Hio5JrV4+kBOMuHxaucXr2UKmam4pOZSkEIseB5+avqDQh7ZvswSVZJKbNVQ
t279RiGF9P40FFelEU6uOjLLAxRyaCOTgcuxdKJ160m2rj4KubOQqfDKUDrR
2E7wnuulkCmaK2hRjhnE/edvA3v+t32uZsWVe6MZBO1l3QXFzxTSXJf5a7HL
HYJ/c/XxayMUMq+J+eC7qTuEg8Q1Zu6fFJL7MEtBr8ddIl/5yOmxFVTS8RML
hT57l4ilO/ofFaKSL0+yXl7hnUlcy1NvfriBSkrTWb8ILWcSmbqc7LRdVNLb
c6XuOv97BFvnibWidlSyY2ll3jbW+8Rec5NOkUAqqRLEJqoXfJ84Z73T6vEj
KhnGvcrHhvMB0X7tVnh0N5X8HrXq89nQB8QQnTekgJ9G7hVn3x/A/5BIzx+U
+duQRt65w54bHfWQYL1S//laHI1clucQfiCaRSy3/AooH6WRVvkcl0oTsgi+
cB226wbi5LNtnJ/eS2QTcw51oQ0vxEkBknPvx7RsIsCPnm9tLEGe2ceVMyn7
iBCZGvWzZZIk39ZzCbLcf0Qsvc8dL/4kSa614PYSkc8hXjpWLzwTkCav9HF/
XJ+TQ8hVM38VcZUhe+159mgoPSaao865HSZkyW1jPNkHCx4T4SfGjs9fkyOj
3Xn5j6rmEgU1SiIxNTLk5Dyvp1tJLiFoZGn4Tkua1Avg6w3UfEK0cTILCr6R
JB9w8O+KrXpCnDgjdfN0sQQZsJ/drFUmjwj9Z86ba1icVLrFHmxzLI9g+v9L
XwN72de78E0hjvGzQ7D6IQ6ZuXX5DA8ncpgGOMIxHzmucWXDu2U5S6NH4akT
nGOSigUMp2VxSj9wgQ+Oc5psyoPnN3EFlU7BDz24SnapPGXYooRr9L0HzLrI
JWVeBBcQ3MYfZ2G7QO6rJ9ULGeZ9zV08eQmu4OT5frECdjLgkWRZhsUieYxu
Ec8YftXGEyjiD7tTeYtSa+DVNrwj61mLGG5I55XI14F9v/AaagTDChv4Al68
gbtO8z07yFnMcPATvm9terDqNJ/40VD481Z+g2/1cPglfn83/hKGtav4C+eN
4bEVAsOBUXCijgCNpw3eHyKgHytayvBMncAVaUs4k1/w6cME2MRM8KtyD8wU
L0gtlyhj+HGP4ME9tvARaSG/D2kwx3GhAosBuPi+0FC/bDnDJ74LUU7Zw0J/
C+v9uAc/dxO+7D0Mn30mnM8qX8Gw5Jzwl1An+P12ETGxHNjriohu+ji87qWI
r7xSJcOtq0TzClzhAD3RQc0CeFOYqOirafhjs+gBA9Uqhm+Jivl0eMIaVmJP
7Ergbylin0fm4JgBMRF3zWrcT2sp+xd94ClHindQFWxkwX1oFRPJ8HqvW5Pv
ZeClBO4b4Tvh1vJbcubH4Ed93JXUQDjgzy2Lj3fhw6t5Ju+8hDftDg05OQSv
OsEjt5HtOY7/WmjF5Dr42UMei2f74FvvQukXHeHjYzwh2iGwBu9tWZZsWGAT
b8Xrd/A349vmt0bhandeuhF3DcOxMbeviyjCZ4p5Zbv14T1dt8tTXWDxBV7z
42HwD4mwifV58BttvutjjXCaXdjq/CnYM4Cv/LzgC4b1M8PMNFTgNbV8E8um
8MJwWPALD7iZg3/19Rg4SyG87GARfEWf30ygAz50Nny8bRb+O4I/OJHykuGV
T8NljqrDva38ZXJW8NOZcNNvl+AbFIHxnCT4H42Ia24V8DZrAZmtfTDf5YjS
+SX4a5qAabXUK4Yrn0eMBRJw1KDAtf12sNPKSGkef3jnesHSpgyYciDSJLYG
pjsJjlkNwrW3IoOkWWsZTskVlP6yBvZojCx5qAPr/RA0OeMAywpHjSoHw3Oq
QkEzD+DGQ1FS5W/gBxeFSvxG4MtJUcZ7OF8zbF4pNMquAG/sj7r6QQ9mWSEs
FekMd8tGF1uEwvl7hI3Fc+Fgh+jv/fWw7XXhq5l0WDU7WvIU/xuGueuEixWV
4cHxaKMfxnAZn8j3onNwhHJMoHcU7GgqIrmjECbOxxSxtsGicSJGb3/B4yUx
I6Gibxl+2S0SaKIGJy3GSIhZwuekRIt6vOADO2IN0xNgmWOiI/Zl8GxgbIB8
D1x/T1RiYgG+9zr2WYHEO4Z9RkQNL2jBJlxx3zRtYXlFsQAmP5jJME78VRrc
4Sr2LISEcyPjDAwG4KBCsW+CzO8Ztm6P8++QhVV+i4kn74Y5afGFdvbwgCbF
YG0QXGITPzxyDw7zo/jn1sIOGfE092FY6wWlUI29jmHhoXj9xQ3wKBt1mDwA
12xIuBLkBCfoUmm6N2FX54SnvDnw3ttU/ZY6WDIv4WvcOPyziXrFmvcD6ud0
AnW1EnxHhPZ0yBC+qJZ4MNsVNjpM++oSAa/3TvRTKYCXk2nU381wW1ViQcU0
nPOJdtBfuJ7hQOakIR1V2GqNuB+nBay8N4nS4AmzO4oXRMXB/SFJepYlcNEj
8SGJLjj0Q9LlgTnYni5OuU9rYFhTIDnfSRMWUJHQU7KGv5klf5n2gas9JS6X
pMCx8clivlXwmTKJ/J39sKyLwVoWpkaGef14z53gh+fC6qtey8BD6be5/lKG
G/MNLG/thMtreO9NGMMPWuqnjI7BkV9uaz89B1/+ZXBTJBA+xcbXeSEKNhdr
WNN9F96xIcxteyG8Ud2wKvUlLKbLx7WiDWY50nDo+BA8cTos89UvuNvHcGo9
WxPDr0L5tG+IwvmpDTfG1sHJT8I6DNTg66Thmvx9sHsTn5uQJXz0c0PleUdY
dzqMs9MLVmU1OqQRAq8W4c9MToC51zVOLmfBv7eGa/1TBg/uM7rx4h3cYMnf
sbYHLjvVKHd9FL5/Kdz1+wIccdOo8iB3M8O+yfycTyRgx8eNFgKKsFlV+F13
LZhoMJps04cVPvFrbbOFRacaQxJdYGbmiPbFy/C4oLHc0TC4S07A9Xka/HJL
U4VcHpynE8FxjYSTLIwtvjXC104K3NUdgM95NdFzpmCbkIjtfMwtqA+JxiFu
gvCWRwLtLbKwTEWT7FYVmOtDxNn43fBsn3HFvCn8eUKAw8Yerv/TZF7tAZfy
R95ZHQTfW21CD4yBwzcLbv96D/bZ3Xx9fxF80iyyLbsWNj1hIsvTAWt7Cp49
Owz/Fdxc3jQLi8RHsm9hb0V9yjIxj6XAY6WCd35vgDveNU9YqcMveiI1Kw/A
uWMm16Wt4MQlwTZ/JziIt2X1l0uwm3SUy96bsPUm0/KHSfD+nULsXDmwikmL
2ZkKWPp4VEZDHczpYTqh3AfPXBXSjB6HB2JagmeW4A/3o1otedtQH4tNV5dL
wZlvhFwkleCwrpYyPwK+9O8PH0PYYcHUbI8dbMwtnHHfFdaSbB1n94c3/B2t
cToCFibMgj9kwH8MhVuVCuBRu1aZyBq43S36zM9muCbArMxiEH4cJbyqdBpO
yGw1FWdtZ/jqs+h0X2HYtdZsvH8NfKRDWGOXKrzvW+u1TB1481x0C5sFLMVp
LnPKAeYQFznz3hP+pdBWqhgMf9oewxYeB7/XNzf98QAuthVJNyuB75xtGyt6
A9++EqNO7YIvRphf8x6BT9wRaembg42etknv4OxgePvLGOc7NHh9m3kpqwIs
9FWE7aQmvDzTZvJWD/6+KjZNwRpuo1iMhTrDz+VF1Sd94ByN9iCTUDheL7a5
MAUOtLaQFsuFz54Rdb5YBVtdbi/pqYd1wmJXavfDyukWJul0WCJfNI2ZqZNh
9pr2UXt+eLo5dttrGbh/0CJIXhl+91O0+eZOuGhlh9SEMZwhGnfa6Bgcuv5Q
ScE52Gub2EqRQNj+QIfxhSjY0CoutesurHn60KhmIbzOR2xb6ktYMLTjKlMb
vJQS13RsCB7JPST16hfcWi12ej1bF8PVjR3FIaLwo4E41rF1cOyPQ8YGanAA
CyU1bx98Rrjzu6AlfHhtvNp5R3jPVsurHV7wpn2UJvUQWNyyUzI5AV51Kt5p
OQv+cdGy2K4M/niDwvriHfw2qdNobQ/8LCc+JXgUTq+0/D6yAN+qp6gd5O5m
+EJ/Z2CuBHx8Mr6RXxE2WHFY0l0L1hCkOrXpw2vluorUbGH+LQksiS7w4p7D
RouX4WFzaoptGNzi0DVCpsFVFxK2yuXB2dcPBwaRcEwCtXG4EfbP7pLQHYCd
yxNO5UzBlnWHi3iZexje3UdlcROElSa6DFtkYdqfhGRVFZiN32okbjc8JUPb
Om8K9yl3B1jbw292JTZUecCFplYSq4PgNHvaqcAY+Mb57mdD92DPa4nM+4vg
f+KsDLNrYf2HtGTuDnhbafc3l2F4zbtE1aZZmK/HKkCFvZfhhVFaQwwF/rrY
Lf57A9zMk+RopQ5XSh15VnEAzlISZ5a2gqN39Bj4O8FXjJOSBi/Bp48d+aZz
Ez7kLq76MAnedbXHnzMH/jsmqd65AqbePyLeUAezFos7KvfBk697CqPG4Z7O
pBUzS/DrkSMGlrx9DBfMiyeVScGpXL3DEkpwiETyFj8CPq9o7T9gCNtpS9Tv
toMPGvbS7rvCanbJJ9n9YTk360KnCJg3QGLFhwx4PrJXX6kAHrqbnBhRAzcV
Wg9PN8MVryS2WAzCD9t7r5RMw1HDyR9orB8Z9vttTfMVhp04JE/2r4HNaX1P
d6rCOxVSmDJ14I3bbfTZLGCKvmSiowPMYtv39Z0nTHdJUVEMhrv9bK6ExcG1
4ZIfph7A+Rl9VLMSOKUgxaHoDXz9hc1TShfs0SrJ5D0CHx3qO9g3B+vNpCQQ
nP0Mb11l+zWDBstSpFRYFWAe+Y9+DprwnHpq3Rs9+IuuLVXBGm44IuUQ6gyX
O38soPvA931T/xiHwpG3bQ8WpsC+aVIJornwqbyPQ15VsNnz1M099fCOZls/
rX5YYVCqLo0Oc106y72C6ROehwENmzezw7P/tsf54TP/tsMp8Ock+r1XMrBl
pmHdzAa4PufJj/XK8J5nfNTD6nBp5Vnixk5YqbbhRPkB+F690q0xY5jWEVYg
aQWH99M7DY7BbN8M//g5wT6TT9bmn4OnfvMd/HwJPrnC9ZxQINzH0Ri/5yZs
Krip+nwU/IYWPnQ/CdaWm+TqvAsXKhht5siB/9qSZ6lRCKdt5/c7XQGL6Lje
S34J39RvfP+hDl5hsenHcivsaRtO2dQHjzlMav8zBB87a3QichzuuJB388Uv
WP8Kf8HPJfjFddfOtWwDDKtHNC5b8MK5CZvWXheF19wJ1yuVghOzJ92+r4P5
nxrFiyvBQeV5VQfV4IUX/EO+BOxW58r1ZB883Nqo/MkQtu7bZClgCTcPhV/e
ZQfvn5jMdHeEq2aM3me6wip/8qbavOCsVQKUVf6wNL+b9rYQOJrSZH8qAuZc
rXwzMQG+Ih+R/z4DnlGe6ljMgk9rGC8rFsADu/LXHC2DD+kJ6IXXwB9M3dye
v4N3WTfF/WiGS+yVq+R64L/PRHwxG4Qzz09xXhuFqZeNlYun4bBr+Ye+LcAr
wwQuU1k/M+wd55apyw1PpjW98xaGHR4qT+VIwL15EWIf18AmpVNafIrw6+fG
9jtUYa13+TfctOCnzQL5d3TgDT1uHS36cOpg0xKrBSw8prxmqy1842eE7kkH
+M/ilGu8C3x+pUncW094lKegcv4y/I+o4BeFYLhd6hynTRh8cH3zpttxcI3S
5kPVafC2bZG+kw/gxzt+3F2dB8sdMHlnUgInGBdMBpIwn5Wg2LM38NVj57S+
NsLzTs3HxbpgV/fNN/YPwEPekXkXR+AjV3+0Z0/BTbdMlnrm4H0xBXI8zIOo
/ymCutqc8Ob751zPCsIPc5tj02mwVPHmyiZZOKo6cpBZAeZ484Njiwrs12iy
6YQm/KuzwCJ2N+w0IOj7Wg/+NHLu7m9T2OJH81t5a7hufvOklT28kyVK9JYz
XMw1vb3SA1YUNj0+4QPfkXgaIh0EU9YK5RmFwrcV3dv9Y2DWrS2LBSnwRW0V
uS/3YPreqAMiufAJw+mze4vgnkOmsReqYCO7pxUPa+FaR6HBrnp4u5s7B1cH
XHCxRWl7P7w+QMXizDCcciPKJ5UOC0VN32mYhUOSTN/+762D4eW7T+nK7LBH
jpDocX74e6H79mgKfLSy5dgrGbjtlUrIzAZYrz7qyXpl+Hn7dJulOry133Qx
ZCecM/xUtvwALDspdGDMGI7/7X5W0grmWdEaY3AMDuTYUuHnBM8JRH/OOwef
pf1k/3wJ/iJrpiQUCFspFJrvuQk3qgj7nI+C9273uHM/CS7f0/qm4y6srL+F
zp4DPzCPFtEohCVsf2qeroAjHcyOJb+E2c8WXv9QB1++IPxkuRWe9vNoU+qD
T11vXbAbgvvDt8hGjsPmCdH7X/yC32X8dPm5BO/INotZyzbEcFFBYbkFL7yx
XPhzsCic8cKDvVQKFqtr/fv7Oji0dYu5uBLM0hftfVAN9hr6meFLwBPjZm9y
98H2M4UT/YZw17KwiIAlbLjqvOYuO/gVX9s/7o6wJkX1eqYrnCcTk9vmBa+T
/9XK5g8nK5svqIXAghrPVp+KgIN3iexPTICXdM+7vM+A3U3bohez4JEjquWK
BbCtfcyAbRnc6vxrVXgNrHve/O/n72DS95nZj2ZY9ZqIt1wP/Oj2+QyzQXh1
XNvroFE4Lk11omga5n4YI/xtAQ7I+6VBZf3K8O8S8390ueEzz58FewvDg29F
cnMk4MPN51v71sAN3W3zvIrwnkHV1TtU4bLRmH1uWvCmn7/O3NGB7y+aR7fo
w+Iri8pYLeAIHtEBVVt4lajnqpMOsK9Uu2K8C/xj3Vazt56wo1LspfnL8Ee1
mXSFYNhsh8Vr6zD47f6i8dA4mDAWFa5Og58d9tSYfAD/dazdbnUenO60Ndik
BBZ1j30cSMK3vGdaCt/AK65azA81whduFcmIdcHj0aL79g/Ax1M8z1wcgTvv
tUdlT8EGuVvLeubgl0Wxn7iZhxnWqJ5h0+aEn7y2UDwrCK9tLDJNp8FJnaKX
mmRhgQHPdGYF+NpIe62KCrw4tXXcXhM+Nx8rFLsbHmaeVX+tB9twHbL7bQq3
CBVfk7eGD0iIPbayh6vWXGi56QxvUeyYq/CAs1XVZCZ8YBntuL3SQXDM3lln
o1CYy/BQlH8M7H+ouLQgBZ49KvZp8B7s7HiBTSQX/uzasXFvEWx5Uc30QhVc
7x938WEtvPvGbFpXPVwaeaiWswNWSioe0+yHM++KCZ0Zhmk5F9RT6XB4YcfR
hlmYrVLtGhPTN4a9X8XlKLPD/42f88Mn/x0np8B9H4ulX8nAJsNie2c2wG/o
F5zXK8PavzsiLdXhQqZtpSE7YXmO+P6yA3CawO+VY8awCM1yo6QVfFO2xMTg
GMykQLno5wR7qnil5Z2DxzQ7Xw1cgv/Zs21MMBDuOBgvuOcmrG/+e9v5KPiF
jeXR+0nwNoeSoI67cK4LJYc9B15zwatZvRBO9Ov87VQB813fJp38Eg4Kj9f5
UAcvxP8+vdwKu2VYRir1wV+zSkrshmDrAkp/xDjcXOa18sUveP+LToWfS3Dl
+20ma9lGGFZpjfey4IWzen+nBovCUkOWr0qk4OjxktGRdTDnDEVQXAm+suy1
7aAa/Iuty9aXgE/zqQfl7oMHxBIe9RvCh2Tmmvgt4boNh3/vtIN3KZdKuTvC
JepUnUxX+O9dF0+3ecF3dbsi2Pxhqql6iVoIHHYk4aNjBLzSfo41MQG+5HxY
4X0GPOlRaryYBTv4Ur0UC+CeoIuptmWw8e2ul2E18OtY9VHyHayVliDwoxku
eDCnJtcDb8g7bGs2CKeWlF4NGoWFn1MfFU3DIW8vNg0vwH+aumYprN8ZPt+t
LqXLDY9+TtjjLQzbjc455UjA7dOHI/rWwAcXS4t5FeEaVtpHQhVW47nE6qYF
Pxbp/uuODiwnpWHcog8nrEu8wGoB8yrNp6jawlfVrF46OMDzRNn3OBf47H6a
wFtPeMjoktr8ZfjI4W4bhWC46R+Nq9Zh8F6nxOzQOLji3HxjVRq82dtqlv4A
fhhYJrk6D5a8RdtjUgJHRV9yCiRhjpTu8MI3sN89jeKhRvjn48Q+0S7YqWie
Zf8A/KnK6q+LI7DF6zKj7Cn4fQPtQs8cvLPzUgo38yjDxZ+6X2hxwhtHNL67
CMJ3phL502kwZX5+a5MsfJv5iA2zAszCVR6oogJfFBLPtteE6eLejTG74RNr
emZq9eDujZqSv01hI9Wk3fLWcK3Wwikre3j73iPhN53hfIPyogoPeP0h8b5x
HzjlqDeLdBAs5NgjbxQKX3fVNPKPgZe9kjwLUmAP/4XkwXvwSMiRF8K58NHI
8hGdIrgtUZz/QhWsd9d768NamHzUY91VD28t1Azk7IBzKpKyNPth2VcLDc7D
cNyHIzMpdJinvVyiYRYO/Ci++39VjuG5r96nlNnh/+Jc/PB/8SoKbMWU3PtS
Bm5kX2Se2QDrCFjLr1eGy6kVhpbqsLKshGfITvj+Xz7JZQdgCZXemlFjOFJz
+4iEFcy+J5nP4Bjse3BR1c8Jnjazts47B5+yqQgYuAT3n5DIEgyEzVx8Gnbf
hN959v7yiIJ3+G2XuJ8EFwUn7+q4CyuELzqy58AZ8dZh6oWwWEbFM6cKODRL
ojfpJcxc4MP8oQ72KuvdsNwKT9RsN1Tqg4+/Tz5vNwR3tSwmRYzDhr3WNTW/
4FdfKr5NL8Ea4xJ8a9nGGc775aNqwQuvW+49EiwKJ7NpBZRIwQJ8KQ9H1sHB
Ykv1NCV4Sdrml54a7L6hUtyXgL9tktyVuw+2Vfd17DeEW3f23ea3hHV1tZ7t
tIOrTVJ6zjnCqkeWVmS6wo+O22xo84JlnCsN2PzhWA/J82ohMLevb5JjBBwQ
1Pc8IQGeDdX69i4DPhObwruYBQ+mLm1RLIAPP7A5YlsG1z+p9A+rgfeUSD4k
38FlpG/9VDO86W3fT9ke+F6TlrjZICzenbIzaBSO+Lx0smgaXjVqc3t4AfaZ
riyksE4w/GNBsucAN+z4b3xQGP74b5xOAjYV0TboWwO/lUz14FWEiXXLiYQq
XPi37XNXLfgvtarhDB04nZDibdGHRfdf3sJqAd80+milaguvOKzt7+AAX/gn
9UGcCzzc8ZHcNzBBdOvwG5hmL1TbfNIe9hqZIHaIagxlxMxXt3xL5cmemiA8
D2h8XPlprnr/1LJKz9wEEa/AvTPYba66as7WipuZTpzv1E97oTlXvYW5+ooW
J53ovrQyVFh1rjr733idIJ34sI+696HFXPV/cSsanRCmCwffTpqrjhHvn26U
pRNRX3r+bGKar+ZaQ9CYFeiEgOt7XZaA+Wr/jWk7VFToRN0Om0oT6YXqmS1/
HOw16YRGJMuRvzoWqp21jobG7KYTTLnKwjpZi9Wfdaqf1urRiWbW6Uau2KVq
SwPp7llTOrF/ppQzLXW5+oOFH5O8NZ1QdMkvHX/5p3r30f51VvZ0Intat28i
iIksPUno33SmE+coCk9qNVeQf7umuVd40Ak9ecGffWzMZKbXn4RxHzpxJoiZ
R32UmaT5HyWlguiE/BDLsdAJFjI8pPqrYSidmHrF4rSVupL8L14SQye8FW2E
/lxgI/8bN0+hE6d/mlu8kWYnp+70Hx68RyfkBlMr/6hykicfEVeEc/+3v/cC
u43Yecjep2n3dYroxJL8Fz7BQn7SpOJPnWcVnciSr5Iw6BYh37w8Ov2glk7U
cASt0v0pRGp/qKZ21dMJg+xHDZ6S/OT/jbfRia4N+WM+jtzk/7W76YTv+89k
WhcHmfa1/5bzMJ2opnNOjY2vIkXoxNMUOp0ovHGn9bs9G/nf5/Hs/85Ps5zO
aqmV5P9dNZPEJ6stDwbZWMn/B05RE8g=
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -18.855071987360812`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {-18.855071987360812`, -0.07107079726800697}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.41833\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.6245\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.833667\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.06666666666666668, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.1`", ",", "0.5`", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 1.07005\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8684587463798923`*^9, 3.868458953787648*^9, 
  3.868459036313692*^9, 3.8684590984826803`*^9, 3.8684592639462*^9, 
  3.8684594936911592`*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"46fe81f1-cd2a-4acc-9f0d-b6dd0a3a93b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1262, 932},
WindowMargins->{{12, Automatic}, {Automatic, -161}},
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b25d426f-7e99-43e5-8fba-2379b58b352f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 178, 3, 67, "Section",ExpressionUUID->"f7e013f5-5357-48e7-8900-4e5a90e67106"],
Cell[761, 27, 16591, 425, 303, "Input",ExpressionUUID->"a395ccca-f8f0-445c-ac46-355ac1dddfb3"],
Cell[17355, 454, 9718, 247, 192, "Input",ExpressionUUID->"7cf68800-7ce5-4c2a-a805-224e6a01c188"],
Cell[CellGroupData[{
Cell[27098, 705, 1449, 39, 94, "Input",ExpressionUUID->"02daa90c-d868-4ce6-8e31-829bb3d48938"],
Cell[28550, 746, 5214, 149, 83, "Output",ExpressionUUID->"0dd20b31-df32-4345-bc6d-0d9736c9f41a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33801, 900, 5930, 155, 125, "Input",ExpressionUUID->"93ae0edd-f3c4-4ac0-bf5e-73a15380295c"],
Cell[39734, 1057, 158, 2, 34, "Output",ExpressionUUID->"9502303e-d56d-46bd-be89-2ab353a6918b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39929, 1064, 328, 7, 30, "Input",ExpressionUUID->"a992b241-7539-4023-a154-adb7e0f3ad5a"],
Cell[40260, 1073, 2030, 59, 58, "Output",ExpressionUUID->"6f767bc9-294d-461c-8a81-610955c52b7b"]
}, Open  ]],
Cell[42305, 1135, 2448, 67, 106, "Input",ExpressionUUID->"2fa3ccc6-f36f-4de3-9f55-56744c1ec546"],
Cell[CellGroupData[{
Cell[44778, 1206, 174, 3, 54, "Subsection",ExpressionUUID->"621ed0a5-d6da-4160-8df8-42baaa6d697a"],
Cell[CellGroupData[{
Cell[44977, 1213, 4690, 125, 209, "Input",ExpressionUUID->"6f7a1333-e554-487c-9ab4-031bd1b18a5c"],
Cell[49670, 1340, 9272, 232, 158, "Output",ExpressionUUID->"06199f02-b60a-49b9-8b46-08e47f817017"]
}, Open  ]],
Cell[58957, 1575, 12798, 319, 247, "Input",ExpressionUUID->"e7e5e68b-3358-46f5-bb67-09546f5d9fc6"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71804, 1900, 162, 3, 67, "Section",ExpressionUUID->"cdb01500-2fc1-4960-92a2-58f7c71ebcdc"],
Cell[71969, 1905, 173, 2, 30, "Input",ExpressionUUID->"800ed520-c312-4087-b835-7086694f90dc"],
Cell[72145, 1909, 14257, 341, 388, "Input",ExpressionUUID->"c13bbe28-e01b-450e-a83d-bbad15337666"],
Cell[86405, 2252, 4811, 126, 214, "Input",ExpressionUUID->"0a2f1910-35ab-4f9b-a382-69713691b401"],
Cell[91219, 2380, 1686, 46, 154, "Input",ExpressionUUID->"cfaad6b5-17ec-456f-a9b8-9d984a75714a"],
Cell[92908, 2428, 18150, 392, 549, "Input",ExpressionUUID->"c730bd40-f5d0-4c72-9346-5e8780fd30de"],
Cell[111061, 2822, 5207, 120, 315, "Input",ExpressionUUID->"c8718020-190e-48f8-bfac-714f1a0ff555"],
Cell[116271, 2944, 27311, 589, 754, "Input",ExpressionUUID->"96fc18bc-ff94-4a93-9f57-1420a7cbb04a"],
Cell[143585, 3535, 7966, 195, 354, "Input",ExpressionUUID->"8e11d182-24a6-4f33-bc7e-603d7ba806d6"],
Cell[CellGroupData[{
Cell[151576, 3734, 258, 4, 30, "Input",ExpressionUUID->"8cc8fc30-6275-40fb-9bba-d59b34cea5bc"],
Cell[151837, 3740, 229755, 4042, 514, "Output",ExpressionUUID->"ca8fb4d2-decc-471c-aea4-4ad7aa4f9c57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381629, 7787, 192, 3, 30, "Input",ExpressionUUID->"5a046b72-26cd-4555-a64b-d7827aa19800"],
Cell[381824, 7792, 361858, 6207, 507, "Output",ExpressionUUID->"08b2e735-fb7b-47d3-9cf7-e2c6ebd1eb42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743719, 14004, 262, 5, 30, "Input",ExpressionUUID->"282319a8-2b38-463b-a989-b54d4be458db"],
Cell[743984, 14011, 240115, 4369, 500, "Output",ExpressionUUID->"86820b76-8da4-4d21-b9da-12c5ea4a7e26"]
}, Open  ]],
Cell[984114, 18383, 150, 3, 32, "Input",ExpressionUUID->"5629818e-4264-421d-9b94-999fdee8d5e2"],
Cell[CellGroupData[{
Cell[984289, 18390, 793, 12, 30, "Input",ExpressionUUID->"6df2250b-04f6-40b2-8053-8a064e3b2da2"],
Cell[985085, 18404, 458, 11, 28, "Message",ExpressionUUID->"1870289d-e365-452d-8652-ae91eed0c344"],
Cell[985546, 18417, 469, 10, 28, "Message",ExpressionUUID->"a3f17629-b9b1-4f54-b2f8-70569f244b36"],
Cell[986018, 18429, 466, 10, 28, "Message",ExpressionUUID->"0496eb51-0076-4bad-b905-2d64c6b1d3df"],
Cell[986487, 18441, 471, 10, 28, "Message",ExpressionUUID->"46942a3f-7f46-4478-b985-3964333cbc3f"],
Cell[986961, 18453, 468, 10, 28, "Message",ExpressionUUID->"cbdc254f-ccff-4a9d-b178-d6b40e13b32a"],
Cell[987432, 18465, 471, 10, 28, "Message",ExpressionUUID->"cda681f9-8b98-4d85-84a2-28d5b926d449"],
Cell[987906, 18477, 469, 10, 28, "Message",ExpressionUUID->"a826b509-c604-4f1f-92a8-0553748340f1"],
Cell[988378, 18489, 466, 10, 28, "Message",ExpressionUUID->"821f3e0f-16fc-4abb-ad3f-43ac610f9ffe"],
Cell[988847, 18501, 469, 10, 28, "Message",ExpressionUUID->"19087268-dacd-45f0-a495-44b2771616ab"],
Cell[989319, 18513, 458, 11, 28, "Message",ExpressionUUID->"4875e294-c131-4a19-b699-a212cd7776e0"],
Cell[989780, 18526, 458, 11, 28, "Message",ExpressionUUID->"1394f695-11ce-42cc-a54d-3081fb2d5934"],
Cell[990241, 18539, 454, 10, 28, "Message",ExpressionUUID->"26b0a809-b71f-4061-9864-ff3fa04ea324"],
Cell[990698, 18551, 40174, 761, 249, "Output",ExpressionUUID->"59857532-6a38-4c8f-9e26-adbf7bdaf331"]
}, Open  ]],
Cell[1030887, 19315, 2399, 57, 115, "Input",ExpressionUUID->"9f03cc6d-6fc5-4b36-b1f1-1c225dfdb39c"],
Cell[1033289, 19374, 1878, 48, 95, "Input",ExpressionUUID->"8ae142c3-4553-4cbb-9e6f-60a824483a8c"],
Cell[1035170, 19424, 1567, 32, 33, "Input",ExpressionUUID->"d16c994f-02a9-42f2-a812-a6a1346c24e3"],
Cell[1036740, 19458, 1234, 29, 33, "Input",ExpressionUUID->"d8ab13ea-dfc3-4528-bc91-ee9f95e3f3e5"],
Cell[1037977, 19489, 880, 24, 33, "Input",ExpressionUUID->"30eff812-87e4-4318-b1d8-7d8412bd8e28"],
Cell[1038860, 19515, 948, 16, 33, "Input",ExpressionUUID->"ee9bd2a2-a221-4093-aa5b-01ad875f9e52"],
Cell[1039811, 19533, 10579, 257, 454, "Input",ExpressionUUID->"01a482d5-c4be-4be0-a101-233ff1342842"],
Cell[CellGroupData[{
Cell[1050415, 19794, 247, 4, 30, "Input",ExpressionUUID->"08e9bf88-5ad7-420e-91ed-dc62d5c3cd68"],
Cell[1050665, 19800, 474, 10, 29, "Message",ExpressionUUID->"0ad87ff9-3b4a-4d9b-935b-27322756dfaf"],
Cell[1051142, 19812, 472, 10, 29, "Message",ExpressionUUID->"63121845-a319-462a-9492-db92f129405c"],
Cell[1051617, 19824, 471, 10, 29, "Message",ExpressionUUID->"5988bb6e-0841-47a5-b6dc-9d1cb849b695"],
Cell[1052091, 19836, 477, 10, 28, "Message",ExpressionUUID->"50e0cf64-65c3-459b-82a5-d12d04daadcb"],
Cell[1052571, 19848, 65647, 1217, 641, "Output",ExpressionUUID->"5f74762a-d116-489b-97f9-dfc5b617fee5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118255, 21070, 814, 12, 30, "Input",ExpressionUUID->"dcc56565-3ff4-4b86-96d7-b9e70ab2baea"],
Cell[1119072, 21084, 66741, 1233, 647, "Output",ExpressionUUID->"cf599839-1d2b-43a9-8abc-68b7485af647"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1185850, 22322, 347, 6, 30, "Input",ExpressionUUID->"f4fd0fd7-7389-44ce-b6f8-4c8e2c0832c9"],
Cell[1186200, 22330, 61598, 1108, 419, "Output",ExpressionUUID->"8c68cfc8-3777-4d2b-bbbd-28740c34b3da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1247835, 23443, 1009, 26, 40, "Input",ExpressionUUID->"d0468495-7d0b-4d5b-ac8f-5693e041507b"],
Cell[1248847, 23471, 1854, 37, 337, "Output",ExpressionUUID->"25211f6e-f568-439b-8958-253f18e3f1d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1250738, 23513, 271, 5, 30, "Input",ExpressionUUID->"f6f804cc-48c3-4d69-9bfc-9d719ad9c87f"],
Cell[1251012, 23520, 62231, 1118, 426, "Output",ExpressionUUID->"4e00a254-9f2d-4938-87bf-34a02e2dd721"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1313280, 24643, 305, 5, 30, "Input",ExpressionUUID->"e059939c-aec4-4837-bb3f-e3f3c2e04a15"],
Cell[1313588, 24650, 62174, 1117, 431, "Output",ExpressionUUID->"53f799f1-cc34-4f7f-8187-225a21f47d6e"]
}, Open  ]],
Cell[1375777, 25770, 209, 3, 30, "Input",ExpressionUUID->"d148cb65-211b-4cca-afb2-ec70b55de0f7"],
Cell[1375989, 25775, 207, 3, 30, "Input",ExpressionUUID->"3c288545-4944-49e5-b77f-b320bddb76cb"],
Cell[1376199, 25780, 977, 26, 33, "Input",ExpressionUUID->"e099cdb1-ed0b-440e-929f-ac791b19d19e"],
Cell[1377179, 25808, 972, 26, 33, "Input",ExpressionUUID->"4374c7e8-90e8-465b-9bdc-b12837c733b2"],
Cell[1378154, 25836, 4408, 109, 233, "Input",ExpressionUUID->"7b27c68b-0685-44c1-b44a-e3581600a055"],
Cell[CellGroupData[{
Cell[1382587, 25949, 234, 4, 30, "Input",ExpressionUUID->"99c52beb-d226-46ad-93a3-7afb147dfa96"],
Cell[1382824, 25955, 66080, 1304, 735, "Output",ExpressionUUID->"fdee1b7c-6fbd-4463-986d-8a25c5ab02f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1448941, 27264, 234, 4, 30, "Input",ExpressionUUID->"4a9a4d42-305a-4313-8aa0-90b46f5e1989"],
Cell[1449178, 27270, 472, 10, 29, "Message",ExpressionUUID->"bf7470aa-f159-48fd-90ef-389044c7ff6b"],
Cell[1449653, 27282, 471, 10, 29, "Message",ExpressionUUID->"39820747-10f0-4cd0-97b1-ac3fe30e8346"],
Cell[1450127, 27294, 471, 10, 29, "Message",ExpressionUUID->"0c846161-e491-480a-8488-c3c28f4364ba"],
Cell[1450601, 27306, 475, 10, 28, "Message",ExpressionUUID->"b422dd44-5b80-4833-a02a-3e49ca9d9570"],
Cell[1451079, 27318, 48285, 994, 776, "Output",ExpressionUUID->"7f925ef0-3e73-4652-9306-327fad51243c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1499401, 28317, 236, 4, 30, "Input",ExpressionUUID->"5e118d91-5810-4deb-be17-6edb5d72fc7c"],
Cell[1499640, 28323, 473, 10, 29, "Message",ExpressionUUID->"a92187a3-b335-4dce-bc35-88cb592f2641"],
Cell[1500116, 28335, 471, 10, 29, "Message",ExpressionUUID->"5e12c382-ea0f-4030-9dd0-59ca8efe1013"],
Cell[1500590, 28347, 470, 10, 29, "Message",ExpressionUUID->"b781395a-1a5e-4676-97ff-2334e4b25dfd"],
Cell[1501063, 28359, 474, 10, 28, "Message",ExpressionUUID->"ebbddf1f-6a58-4e48-8e2a-65ea90e4a3c4"],
Cell[1501540, 28371, 48272, 1001, 593, "Output",ExpressionUUID->"d38d8996-31ca-4dad-9e82-aac5e59e823c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1549861, 29378, 164, 3, 67, "Section",ExpressionUUID->"fb3bdc9e-ac0c-461c-9f02-07383067a81d"],
Cell[CellGroupData[{
Cell[1550050, 29385, 191, 3, 54, "Subsection",ExpressionUUID->"e376957a-baca-47e9-b90a-ba1d878647aa"],
Cell[1550244, 29390, 573, 18, 55, "Text",ExpressionUUID->"5b9fa454-7c79-4aac-bea8-855621f77bcb"],
Cell[1550820, 29410, 581, 18, 56, "Input",ExpressionUUID->"a14ecfa6-dbc2-48a4-b721-d92b6474e11b"],
Cell[CellGroupData[{
Cell[1551426, 29432, 595, 15, 30, "Input",ExpressionUUID->"e2db8b1c-b8c8-477f-82d9-d479b7aa6d7d"],
Cell[1552024, 29449, 8330, 226, 34, "Output",ExpressionUUID->"c6a409b6-fd51-443e-bf8e-b6235a96726e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1560391, 29680, 697, 19, 30, "Input",ExpressionUUID->"d3faa938-c3a8-4ace-b0a8-bfcd33d7e70e"],
Cell[1561091, 29701, 535, 12, 28, "Message",ExpressionUUID->"9aededac-81d2-4e09-b4cb-caac6d66ff89"],
Cell[1561629, 29715, 552, 11, 28, "Message",ExpressionUUID->"6f740314-f026-4ccb-9224-31f6d13fc2d7"],
Cell[1562184, 29728, 551, 12, 28, "Message",ExpressionUUID->"a7bcac76-4613-4c77-affb-4254de478f7d"],
Cell[1562738, 29742, 552, 11, 28, "Message",ExpressionUUID->"7d697f94-2b54-4e29-a5b8-1b8bfaed66c0"],
Cell[1563293, 29755, 551, 12, 28, "Message",ExpressionUUID->"ac9d3c4f-01f9-4233-b0b7-c81f3e050617"],
Cell[1563847, 29769, 534, 12, 28, "Message",ExpressionUUID->"e5a5399d-ff80-48f3-9552-1e5e4f06db23"],
Cell[1564384, 29783, 552, 11, 28, "Message",ExpressionUUID->"cbd4e68a-2c52-46c9-a7d3-9457ca66997d"],
Cell[1564939, 29796, 545, 11, 28, "Message",ExpressionUUID->"0ef5ed84-4364-40df-9e57-64e70d2c22ab"],
Cell[1565487, 29809, 551, 12, 28, "Message",ExpressionUUID->"f0dc8725-b583-4e2c-a1e2-6ed60e690b76"],
Cell[1566041, 29823, 543, 11, 28, "Message",ExpressionUUID->"f912eb3e-a8f4-49c7-bd3e-85f8931d690b"],
Cell[1566587, 29836, 535, 12, 28, "Message",ExpressionUUID->"234fdf50-e3a4-437b-9bb8-3c78fc16c4ca"],
Cell[1567125, 29850, 530, 11, 28, "Message",ExpressionUUID->"6c3ae0cc-248e-4ed0-8c22-21b5ff5b07f1"],
Cell[1567658, 29863, 113187, 2010, 239, "Output",ExpressionUUID->"46fe81f1-cd2a-4acc-9f0d-b6dd0a3a93b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

