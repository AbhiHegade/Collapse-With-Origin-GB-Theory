(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    430985,       8547]
NotebookOptionsPosition[    426232,       8470]
NotebookOutlinePosition[    426627,       8486]
CellTagsIndexPosition[    426584,       8483]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Time Independent Equations ESGB", "Section",
 CellChangeTimes->{{3.8683965998339148`*^9, 
  3.868396612985517*^9}},ExpressionUUID->"f7e013f5-5357-48e7-8900-\
4e5a90e67106"],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesys", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["ss", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["Q", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
       RowBox[{"4", " ", 
        RowBox[{"ss", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{"4", " ", 
           RowBox[{"Q", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["nn", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"nn", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["Q", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{"4", " ", 
           RowBox[{"Q", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["Q", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"12", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Q", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["r", "4"]}], "-", 
            RowBox[{
             SuperscriptBox["r", "4"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            RowBox[{"24", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"4", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"12", " ", 
             SuperscriptBox["r", "2"]}], "-", 
            RowBox[{"25", " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
            RowBox[{"12", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "2"], "+", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"r", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "4"]}], "-", 
            RowBox[{"1024", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
            RowBox[{"2880", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "-", 
            RowBox[{"48", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"128", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["r", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "4"], "+", 
               RowBox[{"4352", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
               RowBox[{"32", " ", 
                SuperscriptBox["r", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "4"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"12", " ", 
                SuperscriptBox["r", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["r", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"7", " ", 
                   SuperscriptBox["r", "2"]}], "+", 
                  RowBox[{"8", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "5"], "-", 
           RowBox[{"96", " ", "r", " ", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"96", " ", 
            SuperscriptBox["r", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"5", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{"32", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
              RowBox[{"39", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
              RowBox[{"15", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "3"]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Q", "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], " ", 
               SuperscriptBox["r", "4"]}], "+", 
              RowBox[{"7", " ", 
               SuperscriptBox["r", "4"], " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
              RowBox[{"192", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "-", 
              RowBox[{"192", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}]}], 
             ")"}]}]}], ")"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Q", "[", "r", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8683966941143436`*^9, 3.868396700475195*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a395ccca-f8f0-445c-ac46-355ac1dddfb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rulehorizon", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nn", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", 
        RowBox[{"Sum", "[", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["nn", "j"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ss", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["ss", "j"], "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\[Phi]", " ", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "j"], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "j"], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", " ", 
          "r"}], "]"}]}], "]"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866989149869413*^9, 3.866989280309387*^9}, {
  3.866989314399839*^9, 3.866989354107645*^9}, {3.8669894145637493`*^9, 
  3.866989416721031*^9}, {3.866989597267037*^9, 3.866989597573399*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2fa3ccc6-f36f-4de3-9f55-56744c1ec546"],

Cell[CellGroupData[{

Cell["Coefficients Near Horizon:", "Subsection",
 CellChangeTimes->{{3.868396795605669*^9, 
  3.868396807022821*^9}},ExpressionUUID->"621ed0a5-d6da-4160-8df8-\
42baaa6d697a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"odesys", "/.", "rulehorizon"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"Series", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "rh", ",", "1"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"coeffsrule", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     SubsuperscriptBox["\[Phi]", "1", "2"], "->", " ", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rh", "3"]}], " ", 
        SubscriptBox["\[Phi]", "1"]}], "-", 
       RowBox[{"12", " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["rh", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[Beta]", "\[Prime]",
         MultilineFunction->None], "[", 
        SubscriptBox["\[Phi]", "0"], "]"}]}]]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "//", "Simplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Phi]", "2"], "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "80"}], " ", 
          SuperscriptBox["rh", "3"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
         RowBox[{"64", " ", 
          SuperscriptBox["rh", "2"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
         RowBox[{"12", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"7", " ", 
             SuperscriptBox["rh", "2"]}], "-", 
            RowBox[{"12", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "5"], "+", 
            RowBox[{"48", " ", "rh", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox["rh", "3"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rh", "4"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
           RowBox[{"96", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
        ")"}]}]}], "}"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868396826147756*^9, 3.868396849918255*^9}, {
  3.8683969670378437`*^9, 3.8683969859055567`*^9}, {3.8683970383203*^9, 
  3.868397044250245*^9}, {3.868397089336754*^9, 3.868397113488892*^9}, {
  3.868397169119562*^9, 3.8683971928640747`*^9}, {3.868397297014398*^9, 
  3.8683973827605743`*^9}, {3.868397480716022*^9, 3.868397480832529*^9}, {
  3.868397528408719*^9, 3.868397533127055*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"6f7a1333-e554-487c-9ab4-031bd1b18a5c"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"rh", "+", 
        RowBox[{"4", " ", 
         SubscriptBox["\[Phi]", "1"], " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"r", "-", "rh"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       SubscriptBox["ss", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"rh", "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Phi]", "1"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"]}], "-", 
      FractionBox[
       RowBox[{"72", " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}], "rh"], "+", 
      RowBox[{"4", " ", 
       SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
       RowBox[{
        SuperscriptBox["\[Beta]", "\[Prime]",
         MultilineFunction->None], "[", 
        SubscriptBox["\[Phi]", "0"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rh", "2"], "+", 
         RowBox[{"24", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"12", " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "80"}], " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", 
               SuperscriptBox["rh", "2"]}], "-", 
              RowBox[{"12", " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "5"], "+", 
              RowBox[{"48", " ", "rh", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "3"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rh", "5"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["rh", "4"], " ", 
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
         RowBox[{"96", " ", "rh", " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}]}]], 
       RowBox[{
        SubscriptBox["\[Phi]", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rh", "4"], "+", 
          RowBox[{"48", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"192", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"80", " ", 
                SuperscriptBox["rh", "3"], " ", 
                SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
               RowBox[{"64", " ", 
                SuperscriptBox["rh", "2"], " ", 
                SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
               RowBox[{"12", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "7"}], " ", 
                   SuperscriptBox["rh", "2"]}], "+", 
                  RowBox[{"12", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                SubscriptBox["\[Phi]", "1"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["rh", "5"], "+", 
                  RowBox[{"48", " ", "rh", " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["rh", "3"], " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], 
              ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "6"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "5"], " ", 
              SubscriptBox["\[Phi]", "1"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}]}], 
         ")"}]}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.868396830779805*^9, 3.8683968504332237`*^9}, {
   3.868396959397595*^9, 3.868396986591711*^9}, {3.868397041344277*^9, 
   3.868397044603455*^9}, {3.868397110857274*^9, 3.868397113768283*^9}, 
   3.868397193372365*^9, {3.8683973049391317`*^9, 3.868397312421626*^9}, {
   3.8683973446986437`*^9, 3.868397383043962*^9}, 3.8683974856742077`*^9, 
   3.868397538352797*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"06199f02-b60a-49b9-8b46-08e47f817017"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeffsrule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["ss", "1"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"rh", "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["ss", "2"], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12288", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "5"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "6"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "-", 
              RowBox[{"288", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "2"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"4", " ", "rh", " ", 
            SubsuperscriptBox["\[Phi]", "1", "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "+", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "-", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "2"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "96"}], " ", 
               SuperscriptBox["rh", "6"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
              RowBox[{"4608", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "4"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"5", " ", 
                  SuperscriptBox["rh", "2"]}], "-", 
                 RowBox[{"6", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["rh", "8"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["rh", "2"], "+", 
                 RowBox[{"24", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}],
            "-", 
           RowBox[{"16", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "6"], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "4"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"7", " ", 
                  SuperscriptBox["rh", "2"]}], "+", 
                 RowBox[{"48", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}],
            "+", 
           RowBox[{"288", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["rh", "5"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"7", " ", 
                  SuperscriptBox["rh", "3"]}], "+", 
                 RowBox[{"36", " ", "rh", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"32", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"rh", "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Phi]", "1"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "4"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "3"], " ", 
              SubscriptBox["\[Phi]", "1"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
          ")"}]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rh", "3"]}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rh", "6"], "-", 
          RowBox[{"192", " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}]]}], 
       RowBox[{"8", " ", 
        SuperscriptBox["rh", "2"], " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}]]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      SubscriptBox["\[Phi]", "2"], "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "80"}], " ", 
          SuperscriptBox["rh", "3"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
         RowBox[{"64", " ", 
          SuperscriptBox["rh", "2"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
         RowBox[{"12", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"7", " ", 
             SuperscriptBox["rh", "2"]}], "-", 
            RowBox[{"12", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "5"], "+", 
            RowBox[{"48", " ", "rh", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox["rh", "3"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rh", "4"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
           RowBox[{"96", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
        ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868396940806965*^9, 3.8683969497389307`*^9}, {
  3.868397009036913*^9, 3.868397009287722*^9}, {3.868397258749552*^9, 
  3.8683972701782303`*^9}, {3.868397568775285*^9, 3.868397575972232*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e7e5e68b-3358-46f5-bb67-09546f5d9fc6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gaussian Theory", "Section",
 CellChangeTimes->{{3.868397967278953*^9, 
  3.8683979696821747`*^9}},ExpressionUUID->"cdb01500-2fc1-4960-92a2-\
58f7c71ebcdc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"odesys", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", " ", 
        RowBox[{
         SuperscriptBox["l", "2"], "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], "*", 
              SuperscriptBox["x", "2"]}], "]"}]}], ")"}], 
          RowBox[{"2", "\[Mu]"}]]}]}], "]"}]}], "}"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "[", 
  RowBox[{"[", "4", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868401032953144*^9, 3.86840112376173*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"7738804b-4951-43d9-9b19-37322b77db30"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Q", "[", "r", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Phi]", "\[Prime]",
    MultilineFunction->None], "[", "r", "]"}]}]], "Output",
 CellChangeTimes->{
  3.868401034152082*^9, {3.868401065430726*^9, 3.868401124005788*^9}},
 CellLabel->
  "Out[147]=",ExpressionUUID->"03e8d7d9-6b78-4640-b212-b713a719f2b8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"genseries", "[", 
    RowBox[{
    "\[Epsilon]_", ",", "rh_", ",", "\[Phi]0_", ",", "\[Mu]_", ",", "l_"}], 
    " ", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Phi]1", ",", "\[Phi]2", ",", "ss1", ",", "ss2", ",", "rulebeta", ",",
        "\[Phi]max"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rulebeta", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", "->", " ", 
         RowBox[{"Function", "[", 
          RowBox[{"x", ",", " ", 
           RowBox[{
            SuperscriptBox["l", "2"], "*", 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"1", "-", " ", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], "*", 
                 SuperscriptBox["x", "2"]}], "]"}]}], ")"}], 
             RowBox[{"2", "\[Mu]"}]]}]}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]1", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["rh", "3"]}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["rh", "6"], "-", 
            RowBox[{"192", " ", 
             SuperscriptBox["rh", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}]]}], 
         
         RowBox[{"8", " ", 
          SuperscriptBox["rh", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", "\[Phi]0", "]"}]}]], "/.", 
        "rulebeta"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ss1", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"rh", "+", 
             RowBox[{"4", " ", "\[Phi]1", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
            ")"}]}]]}], "/.", "rulebeta"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Phi]2", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "80"}], " ", 
            SuperscriptBox["rh", "3"], " ", 
            SuperscriptBox["\[Phi]1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox["\[Phi]1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", 
               SuperscriptBox["rh", "2"]}], "-", 
              RowBox[{"12", " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}]}],
            "+", 
           RowBox[{"\[Phi]1", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "5"], "+", 
              RowBox[{"48", " ", "rh", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
              "-", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "3"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
             ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "4"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
            ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ss2", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"12288", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox["\[Phi]1", "5"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "6"]}], "-", 
             RowBox[{"64", " ", 
              SuperscriptBox["rh", "3"], " ", 
              SuperscriptBox["\[Phi]1", "4"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "-", 
                RowBox[{"288", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "2"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4", " ", "rh", " ", 
              SuperscriptBox["\[Phi]1", "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}],
                ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "2"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"\[Phi]1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "96"}], " ", 
                 SuperscriptBox["rh", "6"], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "-", 
                RowBox[{"4608", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "4"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"5", " ", 
                    SuperscriptBox["rh", "2"]}], "-", 
                   RowBox[{"6", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["rh", "8"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["rh", "2"], "+", 
                   RowBox[{"24", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}], "-", 
             RowBox[{"16", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox["\[Phi]1", "3"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "6"], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "4"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"7", " ", 
                    SuperscriptBox["rh", "2"]}], "+", 
                   RowBox[{"48", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}], "+", 
             RowBox[{"288", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["rh", "5"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"7", " ", 
                    SuperscriptBox["rh", "3"]}], "+", 
                   RowBox[{"36", " ", "rh", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"32", " ", 
             SuperscriptBox["rh", "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"rh", "+", 
                RowBox[{"4", " ", "\[Phi]1", " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}],
               "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["rh", "4"], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
               RowBox[{"96", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
              ")"}]}], ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"ss1", "*", "\[Epsilon]"}], " ", "+", " ", 
         RowBox[{"ss2", "*", 
          SuperscriptBox["\[Epsilon]", "2"]}]}], ",", " ", 
        RowBox[{"\[Phi]1", " ", "+", " ", 
         RowBox[{"2", "*", 
          RowBox[{"(", "\[Epsilon]", ")"}], "*", "\[Phi]2"}]}], ",", " ", 
        RowBox[{"\[Phi]0", " ", "+", " ", 
         RowBox[{"\[Epsilon]", "*", "\[Phi]1"}], " ", "+", " ", 
         RowBox[{
          SuperscriptBox["\[Epsilon]", "2"], "*", "\[Phi]2"}]}]}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.868397769946203*^9, 3.868397843410778*^9}, {
   3.868397952994532*^9, 3.868398042487883*^9}, {3.868398084147476*^9, 
   3.868398197812793*^9}, {3.868398288850016*^9, 3.8683983380612373`*^9}, {
   3.8683983906976*^9, 3.8683984488143387`*^9}, {3.8683984848532887`*^9, 
   3.868398564396184*^9}, {3.868398609905776*^9, 3.8683986630769663`*^9}, {
   3.868398734544733*^9, 3.868398734728674*^9}, 3.8683988734689407`*^9, {
   3.86839890635949*^9, 3.868398935022238*^9}, {3.868399087012645*^9, 
   3.868399118102948*^9}, {3.868399189085883*^9, 3.868399243676395*^9}, {
   3.868399286750311*^9, 3.868399299642791*^9}, {3.868400486649914*^9, 
   3.8684005043367443`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c13bbe28-e01b-450e-a83d-bbad15337666"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"odesol", "[", 
    RowBox[{
     RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"l_", "?", "NumericQ"}], ",", 
     RowBox[{"rh_", "?", "NumericQ"}], ",", 
     RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Epsilon]", ",", "ssval", ",", "Qval", ",", "phival", ",", 
       "valshorizon", ",", "ndsol"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]", " ", "=", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Kanti Bound = \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"(", " ", 
             RowBox[{"1", "-", 
              RowBox[{"192", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
                 SuperscriptBox["\[Phi]0", "2"]}]], " ", 
               SuperscriptBox["l", "4"], " ", 
               SuperscriptBox["\[Phi]0", "2"]}]}], ")"}], "//", "N"}], 
           "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"192", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
             SuperscriptBox["\[Phi]0", "2"]}]], " ", 
           SuperscriptBox["l", "4"], " ", 
           SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", " ", 
        RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], " ", ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"valshorizon", " ", "=", " ", 
          RowBox[{"genseries", "[", 
           RowBox[{
           "\[Epsilon]", ",", "rh", ",", "\[Phi]0", ",", "\[Mu]", ",", "l"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ssval", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
         
         RowBox[{"Qval", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phival", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ndsol", " ", "=", " ", 
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["Q", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"4", " ", 
                   RowBox[{"ss", "[", "r", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", "r"}], 
                    "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}]}], ")"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 SuperscriptBox["ss", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "12"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "-", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"25", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]]}], " ", 
                    SuperscriptBox["r", "4"]}], "-", 
                    RowBox[{"1024", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"2880", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"32", " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"68", " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "-", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{"7", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["l", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]]}], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "256"}], " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"3", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "5"]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"5", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "6"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8"}], "+", 
                    RowBox[{"32", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"39", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
                    RowBox[{"15", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "3"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "6"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{"7", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["Q", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Q", "[", "r", "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], " ", ",", " ", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ss", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", " ",
                "ssval"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Q", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], " ", "==",
                " ", "Qval"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\[Phi]", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", 
               "phival"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"ss", ",", "Q", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", " ", 
              RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], ",", " ", "rend"}],
              "}"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
            RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", " ", 
            RowBox[{"Method", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<StiffnessSwitching\>\"", ",", 
               RowBox[{"\"\<NonstiffTest\>\"", "->", "False"}]}], "}"}]}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ndsol", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.868400644223871*^9, 3.868400657067308*^9}, {
   3.86840085477413*^9, 3.868401023029036*^9}, {3.86840109568638*^9, 
   3.868401249568252*^9}, {3.868443791269828*^9, 3.8684439952504263`*^9}, {
   3.86844417308782*^9, 3.8684441779236317`*^9}, {3.8684443243523607`*^9, 
   3.868444336930501*^9}, {3.8684444051318607`*^9, 3.868444502994285*^9}, {
   3.868444756100567*^9, 3.868444761320334*^9}, {3.868444829870184*^9, 
   3.868444846363247*^9}, {3.8684450075755777`*^9, 3.868445010271202*^9}, {
   3.868446255303215*^9, 3.86844626276694*^9}, 3.868446362511128*^9, {
   3.868446879983774*^9, 3.868446881421142*^9}, {3.868453214131628*^9, 
   3.8684532377437773`*^9}, 3.868455472237918*^9, {3.868455548832224*^9, 
   3.868455551108316*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"96fc18bc-ff94-4a93-9f57-1420a7cbb04a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"asymvals", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"(", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Kanti Bound = \>\"", "<>", 
       RowBox[{"ToString", "[", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"192", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
              SuperscriptBox["\[Phi]0", "2"]}]], " ", 
            SuperscriptBox["l", "4"], " ", 
            SuperscriptBox["\[Phi]0", "2"]}]}], " ", "//", "N"}], ")"}], 
        "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["rh", "4"], "-", 
       RowBox[{"192", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Phi]0", "2"]}]], " ", 
        SuperscriptBox["l", "4"], " ", 
        SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], ";"}], 
      "*)"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "20"}]}], "}"}], " ", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"ss", "[", "rend", "]"}], "2"], "*", 
         FractionBox["rend", "2"]}], ",", " ", 
        RowBox[{"\[Phi]", "[", "rend", "]"}], ",", 
        RowBox[{
         RowBox[{"-", "rend"}], "*", "rend", "*", 
         RowBox[{
          RowBox[{
           RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], "[", 
          "rend", "]"}]}]}], "}"}], "/.", 
      RowBox[{"odesol", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}]}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.868443887939736*^9, 3.868443893055936*^9}, {
   3.868444010806406*^9, 3.8684440600355997`*^9}, {3.8684446102929163`*^9, 
   3.8684446244616957`*^9}, {3.868444715133399*^9, 3.86844472265226*^9}, {
   3.86844481080482*^9, 3.86844481500989*^9}, {3.8684449856264133`*^9, 
   3.868445025604411*^9}, {3.8684532419467278`*^9, 3.868453259470333*^9}, {
   3.868453300077703*^9, 3.8684533048649178`*^9}, {3.8684535368479853`*^9, 
   3.868453550907642*^9}, {3.868461313533247*^9, 3.868461323317602*^9}, 
   3.8684613568926992`*^9, {3.868461434873954*^9, 3.868461448315082*^9}, {
   3.868461488980864*^9, 3.868461506488057*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"9f03cc6d-6fc5-4b36-b1f1-1c225dfdb39c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phivals", " ", "=", 
   RowBox[{
    RowBox[{"Subdivide", "[", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]], ",", "1", ",", "1000"}], "]"}], " ", "//", 
    "N"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868444692191601*^9, 3.868444703503525*^9}, {
   3.8684447351384974`*^9, 3.868444746951045*^9}, {3.868444965034512*^9, 
   3.868444969153479*^9}, {3.868445325074354*^9, 3.868445336118436*^9}, {
   3.868445917940257*^9, 3.868445924126381*^9}, {3.8684464244859962`*^9, 
   3.8684464360485363`*^9}, {3.868452472797268*^9, 3.868452477373605*^9}, {
   3.8684525130208073`*^9, 3.868452577891109*^9}, {3.868452629083909*^9, 
   3.868452688719399*^9}, 3.8684527761978893`*^9, {3.8684536249112864`*^9, 
   3.868453631456491*^9}, {3.868454022209413*^9, 3.8684540363570547`*^9}, {
   3.868455299590055*^9, 3.868455302576934*^9}, 3.8684596656428556`*^9, 
   3.8684596980203247`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"d16c994f-02a9-42f2-a812-a6a1346c24e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mylist", "[", 
    RowBox[{"l_", ",", "rh_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvals", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", "l", ",", "rh", ",", 
         
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868444861579915*^9, 3.868444924714356*^9}, 
   3.8684449731387367`*^9, {3.8684450751544867`*^9, 3.8684451121389112`*^9}, {
   3.868445266620206*^9, 3.868445268598083*^9}, {3.868445724622143*^9, 
   3.868445725945362*^9}, {3.868445944168755*^9, 3.868445944258614*^9}, {
   3.8684463872979794`*^9, 3.8684464086654*^9}, {3.868453354058766*^9, 
   3.868453393363132*^9}, {3.868455069722703*^9, 3.868455116284226*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d8ab13ea-dfc3-4528-bc91-ee9f95e3f3e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"asymvDD", "[", 
   RowBox[{"l_", ",", "rh_", ",", "phi0_"}], "]"}], ":=", " ", 
  RowBox[{"asymvals", "[", 
   RowBox[{"phi0", ",", "3", ",", "l", ",", "rh", ",", 
    RowBox[{"rh", "*", 
     SuperscriptBox["10", "5"]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868446419248767*^9, 3.8684465339677134`*^9}, {
   3.868446569067192*^9, 3.8684466018942003`*^9}, {3.868446792983719*^9, 
   3.8684467940638227`*^9}, {3.868446932185182*^9, 3.8684469334831448`*^9}, {
   3.868451840289419*^9, 3.868451841024732*^9}, {3.8684524578591537`*^9, 
   3.868452460228105*^9}, {3.868452781802559*^9, 3.8684527844854593`*^9}, {
   3.868452851504339*^9, 3.868452852736185*^9}, {3.8684528835011806`*^9, 
   3.868452883674533*^9}, {3.868453397556905*^9, 3.868453493668119*^9}, {
   3.868455124769383*^9, 3.8684551416417723`*^9}, 3.868455175096243*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"ee9bd2a2-a221-4093-aa5b-01ad875f9e52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getplot", "[", 
   RowBox[{"l_", ",", "\[Mu]_", ",", "color_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "list$", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list$", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"phivals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
          RowBox[{"asymvals", "[", 
           RowBox[{
            RowBox[{"phivals", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", 
            "rh", ",", 
            RowBox[{
             SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[\!\(\*SubscriptBox[\(\[Phi]\), \(asym\)]\)]\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[Q]\>\""}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GraphicsGrid", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], "}"}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.8684584556546097`*^9, 3.8684585513437223`*^9}, {
   3.868458659229899*^9, 3.8684587209434767`*^9}, {3.868458862174424*^9, 
   3.8684588649858837`*^9}, {3.868458910415257*^9, 3.86845894077864*^9}, {
   3.8684590499117413`*^9, 3.868459065167838*^9}, {3.868459222130397*^9, 
   3.8684592285375423`*^9}, {3.8684593252195387`*^9, 3.868459364280149*^9}, {
   3.868459615671277*^9, 3.868459832478126*^9}, {3.868459920271881*^9, 
   3.8684599387018747`*^9}, 3.868460199043989*^9, {3.8684602913884087`*^9, 
   3.8684603064861403`*^9}, {3.868461398920333*^9, 3.868461426770871*^9}, {
   3.868461457505577*^9, 3.868461471640436*^9}, {3.868461581119595*^9, 
   3.868461589470826*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"01a482d5-c4be-4be0-a101-233ff1342842"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"0.5", ",", "3", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.8684595750382338`*^9, 3.868459578748396*^9}, {
   3.868459629977148*^9, 3.868459633373274*^9}, {3.868459990792788*^9, 
   3.8684599916156387`*^9}, {3.86846004481173*^9, 3.868460066246954*^9}, {
   3.868460125805489*^9, 3.8684601260277033`*^9}, 3.868460459801235*^9, {
   3.868461699797722*^9, 3.8684617007933064`*^9}, 3.868463591778158*^9, {
   3.8684636239008417`*^9, 3.868463645189536*^9}, {3.868463714469118*^9, 
   3.868463720372876*^9}, {3.868464214890938*^9, 3.868464215922386*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"dab46710-5cb0-4a2f-9c4d-6572e4333ea7"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1: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
eyMu5qL/A2Yd460=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -16.45921260650303}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
             TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-16.45921260650303, -0.10683601330348613`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {360.53333333333336, -189.525}, {
     Center, Center}, {676.0000000000001, 361.00000000000006}], InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1: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
X1w2G/5/I+lmwA==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -15.52927157894996}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Log[Q]\"", TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-15.52927157894996, -1.466263466806102}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1081.6000000000001, -189.525}, {
     Center, Center}, {676.0000000000001, 361.00000000000006}]}, {}},
  ImageSize->{1580.3515625, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.868459637848591*^9, 3.8684597050907717`*^9}, {
   3.8684597598334084`*^9, 3.8684598161662703`*^9}, {3.868459926255754*^9, 
   3.868459943924436*^9}, 3.868460000911327*^9, 3.868460075875763*^9, 
   3.8684601354574947`*^9, 3.868460318965343*^9, 3.868460462738427*^9, 
   3.868461380543751*^9, {3.868461494110753*^9, 3.868461513286518*^9}, 
   3.868461593525744*^9, 3.868461711065529*^9, 3.868463601639119*^9, 
   3.868463729802821*^9, 3.868464225864887*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"a8368f02-719d-4e88-a698-1fa6a4649124"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"0.5", ",", "100", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868460010154456*^9, 3.86846001051298*^9}, {
   3.868460081452672*^9, 3.8684600815692177`*^9}, {3.868460133495994*^9, 
   3.868460139393124*^9}, {3.868461973271223*^9, 3.868461974867223*^9}, {
   3.868463525436406*^9, 3.868463530484972*^9}, 3.868463618215296*^9, {
   3.86846373725086*^9, 3.86846373735919*^9}, {3.86846381313232*^9, 
   3.8684638180788593`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"2d2fff1e-c064-4d05-9a49-34fb92f71da9"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1: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
             
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -16.4675731310179}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
             TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-16.4675731310179, 0.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 100; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {367.4666666666667, -190.05}, {
     Center, Center}, {689., 362.}], InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJwlW3c8kN/3l6jsvfcmyd7j2HvvFEmSFoqk7CQpkr1piIZKyB6nkih77723
hJT08/n+nn+e1/t17/M+95z7uuee+9xzeFw8Lc8REhAQzB8kIPjvHb384fF2
fYFaz/cRr0tEYrjJvBMY5GYO2TV7yjpunChPSJx9ztUZqgaObP95zIY/b1D8
e5DoDiMZHFsrB1ixb+u++ImzXiBDdu7DuUFmLJWMOb3k7wMzHfJZs1tMmHg5
PiY4wQ9oDEM3xVWY0DsvuZb2TQDUfZrRMM5iRJH15u0OlxBQzJJdDGVgxBTK
thh2z9uQLdnysiuDAQ8f6xBy878DMtoHqIYlGNDXoKv2XcRd8E3LfCjWSo8z
bj12O/H3wIXyn+af6/Roc6dvVfPxffC4faNkno8e654MRETlR4FePzHTQi8d
StcOcfWUPYSYf0ZVArF0aOGxOhjj8gjmk/uer5rSIUngWl6xeyz8NLJyqqCm
Q3yw7t3vEQepHhafqHto0S/tB+z5xIPNZnDtoyxalHi5QcbnnwB/7pS5zV6g
xdnSn716oYkg4J3/t1meFrPrN59djkiCzeiE4sNHaNG2e8szNjoZ2MizZk4P
0CDl1LZySXwKOOi/L37xlgbrf/w6PJiaCsXp4Uvld2gw8MDvzn/ZaUDoWcbj
dYoGZan/ZPPnpsPhFZU/r2VpcIlz95JBfgb8jSVMtaCmwRyxv/IehZkQ4KLL
qL9EjSdV9g7Gl2VBrlqF4M1GaqQz+tdaWpMNcS5Xa9ryqHH6GIGph8tjICrq
qVeJoEaNYoLikOnHUGfdNJ1/nhozlQ+wxrs/AcXcfF1aA2rc+XQg5PniE2hX
svY4LUqNNoaEM6UeT2EYjzHco6TGgnZC42/rT6E7m52ccJoKyU8cLBzyeQbm
jOQHQ95SofvYQebV7Wdwx+m+0Y2bVFh3nijogH8ONNkWFvToUCHXKtEU3V4O
7K7Wujyko0J/X2JDwdDnkNx8eDRmghJ7/xIXKBDlwp6EaUNzISVKhx9iNIrI
BW5PmW7lO5QYQ344wJE0D4j1xYtbbClxIf7whGd0HiTc9f3lf5QSddmO6N+m
fgHei3pHlP5R4NOnR94mxL+Ad/MPyQm6KXBPhIQ+j/EljG8QT315TYEO70lu
lae+hBVeN6o7YRT4QYF07Dv7KzhXYf5O+hQF0iCp7kj2KyBPUL/eIkuBV/TI
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
qT0lQ50NeyT437MGMUSOlAQEJ/D/AKKsDic=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -107.57452550005718`}, DisplayFunction :> Identity,
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Log[Q]\"", TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-107.57452550005718`, -3.208019038993765}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 100; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1102.4, -190.05}, {
     Center, Center}, {689., 362.}]}, {}},
  ImageSize->{1576.98828125, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.86846353940478*^9, 3.868463626986524*^9, 
  3.868463746117351*^9, 3.868463826908368*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"d94be79f-d025-4509-9d0d-6f863dd584fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"0.5", ",", "10", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868463845732037*^9, 3.868463845855311*^9}, {
  3.868464190122446*^9, 3.868464191489067*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"4c23f8ca-6223-46b1-98ff-6a1f1a1a1b4b"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJwlW3c819/3R8h8e9szJGlIkpQRJ+2yR0hIpdKSlVRoqCTJyiYRkVT25l57
773n29t+G9nr5/P9vf55Pc7j+brnnOe5j9d5nfu69+y++Vj3Ng0VFdXYDiqq
/+6eU2nflkoTVU7Z5/s/9ziMF/hWnF3uaENeLNObY9mi+AQNXcRtC3P4lPHl
yJG/wvjfU9YtD39LkJAl+KoQd+H2xY/SV29ZA9VKSHjXmCDOkPG6PvnCHhZ3
BCV/phPE/g/9vF5+cYRWX0ZmTjUBbBcbiDh+O0HM3We7HH7z4wOzNUuNN19B
Ckf8qQ1xfhxEqPcSevwGapYO8Sck8OGdhxr33XnxFvZmsYkKqvJhh0vN6K/b
ezhifTCxu48Xj9xpNVzx+wAX6rtK97rx4itv2ymnv32E5BzqumA5Xlwc2en2
KeETZG/9bjwwzoNlUbdIa+ZnIOoL021958E6VpQur5veQL94RfnhTR7M6DwT
m2rpA+cnQjuGxHkw9pi167DyhWM9024z49zYMWQONu39wGw9iuZIKjc+8nOe
ec+LL5AxsSGh9YobkzP+tV147Q/hkreodmpx44jShe8P3QJgpTjDVUCUGxu0
LD728QwEwSlKlf48FyYMLyml+wVBmWZhuls5Fy6dW97ZFRwMTHHTFR8juLAz
9WrTVkQI5LVsaSk6cmE54lqE+I9QOPt+McJBlwtPCq8/uJQQBuzTzu/3HObC
0VIbJ6ySw+Hv++CKfcxc+NrJzR1+mV/h/AvLgodjnJhTbasuIz8Cviq0U/eW
c2LSISpNq5vfwHKUmePeT06smkqV+or0DUyDZg5vfOTE4UrUAn6WkSDiucHj
8YgTrxRSv4qZiIRFlg89tDqc+MplmpEMqyjwKLxZbCrHiRMbaNQrZ6Og+ycS
+CjAiVmu7kjutv8OqlTOoi+pOLFl/w4+ytJ3WBk+NHWUzIGL79K6UL+IBsvg
88ZhtRxYhEI7zLkZDe/vMM4kp3PgFw50lyVexwD/w9/NVhEcuG2DLlGe9gcM
MnvllX/gwLLv6HnU3H7AL1a2wSxbDuzFstPJlCkWogMmKUqmHHjcb+fgY89Y
0NlNprp0kQOfF2S4+IYYB/miLj5dshw4Korhzxe/ODisFO84LcKBNw8wcsXy
/IQbijb9Tiwc2DiJ8XlW8E8IOKIIb1bYcZo8U3+VUDwUr1XqrI6wY3bMdL43
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
ooBwZuGexHIdRPW/awaqhChNJU3c6P8AazSMLQ==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -16.467566614950258`}, DisplayFunction :> Identity,
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
             TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{
           0, 1.}, {-16.467566614950258`, -0.00008326430268744687}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 10; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {363.73333333333335, -189.525}, {
     Center, Center}, {682., 361.00000000000006}], InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.01], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1: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
yhuF7LQk4Y35N/XkvZ2Qteots2hHwgvEy0KPVDpB8sx7tzZ3EipR+MxbzndC
jpWQZfvW+me7REeWgnEnvA9i7vwVQULywTCq8Pud0PiEM2FPEgk3VC9rbjh1
QtOPo6nOGSQc0+WLMvbtBB1rvb6ZQhI23eqYwJhO+C1YzPmkioRFT8LkJdI6
wYlZbr9ACwk/vrzs5o6dwGu5i9LZT8LgML76sfpOOPgxPPzLNAldPnYInhvo
hFd7iR+SVklokR92J3lhy15Kr2AWNRXqV1/OYiV1Qf37oeZeMhWe6OGjsqJ0
gczd9c9iQlQoPduh0STeBaG+tK+cttaz/P/CIuVku4BPskN1WY4KackGE6En
uiA/SLvA/TgVLojyy6/rdIE2u2uNtAYV9sh0uhqadoFkrYnu0hUqrDweXldk
3QVPq4f215tRYaaOgaCYexe0s6sdLrehwhhT/jtuwV2wfXJGp8WVCl/ZdH4d
edcFdBwtOpu+VPj4RTjpTFYXLEul8xyJosLroQYaH8u7YKZ6l33oRyo8/54/
krmtCwarQy8z5FDhodzO8ftjXZAWL+cTWEaF236EyzWsdEGfMdMvuSYqZOsy
cJWl74b3Qn9uzvdT4Z8p/rpg3m7oZiorKp6lwtGNToHVnd0wvajbkbxBhY0s
EWYGit3AaZPrm8JIjYXCV74WnO2GoKo7BRW81PhBWoAkYtANORIfFFd3UGPQ
0a4LLubdQHevvR/kqPGZVkTEkF03PJ0c9o4+QY13Ta6Mn3zdDbO/afg5tanx
0iMBufcR3SA9ZHc19ho1Hn/e5cKY3A0NHOyHTjygxn3BEbUWBd0QvvDdccOR
GvkSrwjUVXeDmus5xmovaqTOFjCT6dlqTwptTnoENc5XdGUGznSDXnvMtc8f
qbGrPYL4e7MbTu9w6S7KpcaKiSsX9Fl7IC2Pn2G0khoz1gUi8oR74LhydZF4
OzVGM3WPCUr3AMPjhDbrMWr0FIw86Aw98LOifG/3b2q02WvoMqDRA2uGJhH6
tDR47Yhg7YlrPVs8ULU+wUWD6hrd/ImWPWDnZrLDbzsNKlyLvE3v0gO6BdGr
5+RoUMLKMNPcvwdqTKTU+U/SIKurILEmrgfOFKf82bxIg+sB3eelM3pAQ3l5
YNmUBkfiI8P9i3ugPWezg2hDgw2ZhmNLjT1warOlSMydBgvKBA/qDfVAdUH3
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
CfL+SeD/Aa4u05w=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -15.482855742728216`}, DisplayFunction :> Identity,
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Log[Q]\"", TraditionalForm], None}, {
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
             TraditionalForm], None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {
           Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {
           Directive[Bold, Medium], 
           GrayLevel[0]}, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.}, {-15.482855742728216`, -2.059394076050331}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Mu] = 10; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[Bold, Medium], 
              GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1091.2, -189.525}, {
     Center, Center}, {682., 361.00000000000006}]}, {}},
  ImageSize->{1593.41796875, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.868463854484687*^9, 3.868464200899732*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"1a25436e-d7c5-445b-8ce1-496166a716fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reproducing Hector\[CloseCurlyQuote]s Plot:", "Subsection",
 CellChangeTimes->{{3.868458589251995*^9, 
  3.868458596428363*^9}},ExpressionUUID->"86b84bf3-53a9-4acc-a79a-\
f4a1ec82069d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Fig", " ", "12", " ", "of", "  ", 
   "\"\<https://arxiv.org/pdf/2202.01329.pdf\>\""}], ",", " ", "Conversions", 
  ",", " ", 
  RowBox[{
   SubscriptBox["\[Phi]", "J"], " ", "=", " ", 
   FractionBox[
    SubscriptBox["\[Phi]", "me"], 
    SqrtBox["2"]]}], ",", " ", 
  RowBox[{
   SubscriptBox["l", "J"], " ", "=", " ", 
   RowBox[{"2", "*", 
    RowBox[{
     SubscriptBox["l", "me"], "."}]}]}]}]], "Text",
 CellChangeTimes->{{3.868459485391026*^9, 
  3.868459536904601*^9}},ExpressionUUID->"a5ae5640-3453-4538-8387-\
032cf049c7d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ls", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      FractionBox["0.7", "4"]], ",", 
     SqrtBox[
      FractionBox["1.", "4"]], ",", " ", 
     SqrtBox[
      RowBox[{"1.56", "/", "4"}]], ",", " ", 
     SqrtBox[
      RowBox[{"2.78", "/", "4"}]], ",", 
     SqrtBox[
      FractionBox["4.58", "4"]]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868458599832283*^9, 3.868458648809812*^9}, {
  3.868459231352145*^9, 3.868459232967993*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"dad4c646-f725-4708-b9dd-d2101dd32283"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cs", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0", ",", "1", ",", "0.5"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.1", ",", "0.5", ",", "0"}], "]"}], ",", "Yellow"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.868459371165625*^9, 3.8684594574006166`*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"96f5035c-8002-4006-acdc-52b6dda2ead1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0.5`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666668, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.1`", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.868459413894184*^9, 3.868459457808124*^9}},
 CellLabel->
  "Out[315]=",ExpressionUUID->"1d0c2b3e-1778-4ef7-9202-328ca96bf54d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getplot", "[", 
      RowBox[{
       RowBox[{"ls", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", 
       RowBox[{"cs", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "ls", "]"}]}], "}"}]}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.868458730240631*^9, 3.868458737142919*^9}, {
  3.868458963671714*^9, 3.868459006013857*^9}, {3.868459461755887*^9, 
  3.8684594636571817`*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"9d6345ab-2bf1-44b8-a4db-fa03ebfcdf5f"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.002606105651797`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 299, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594888879843`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"7df1e20c-7fbc-426d-9504-f99158c55016"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 300, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488894153*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"07f391a4-b396-47a9-a305-04f79330a8df"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 301, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488897122*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"a5e433c5-4d52-430d-b072-01d47ca47156"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 302, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488900008*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"6fd84a39-8129-46ab-a0da-8c99f511e9e0"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 303, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488902882*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"b54bd625-3e27-409e-94f0-1c341d040881"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.0064448053314559`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 304, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488915477*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"f6ff2f87-5c92-4c9f-b544-498085dc10f2"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 305, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488918764*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"ff8d417f-ab55-4be1-b169-57e75148ace5"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 316, 306, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889218273`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"342065ca-b986-4272-b240-7bcb17dc0f22"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 307, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488924988*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"e0899dcd-6327-4996-b3ba-73d81bfa11f0"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dprec\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 316, 308, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488933343*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"89c95326-2b3c-49a4-889f-fdbde11b15b8"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.011308554894513`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 309, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889547586`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"b7ba0a97-19e7-4584-ab5f-108288170c0a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"ndsz\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 316, 310, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889588003`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"7805b145-832f-481b-b2d7-03b15db5688b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1: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

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0.5]], 
         PointBox[CompressedData["
1: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
eyMu5qL/A2Yd460=
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1: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
FBj/afHJpncBheW029TPUiBIYU170qMFxFGifZuJaRi6O3XHSk4vIK+K2AwN
rmH4ef0Gb8mKBfS/4+dCw5Cjmm8fRZ1H5/87Ti41DNB7zmtn5jzq+ZanWKE0
DK63zCbeu80jY4rk/plVw+Chn/96eus8qmZcdVTVGIZqE7PKOaZ5tHOuPcJi
6zA46I/eLKyeQzlMWwqCdYfBS/ij4ebwObSaO6638NAwIHfLlvOWcyhFeI59
1GgYaisPNB9WmUPiMhZr5S2HYZ2o+vausVl0TznfWP/0MExV/VAWL5xFTGpS
13wdhmHD1fDSn4GzyEPTMyXr8jA8e6Js72E8i0Z1vlb0XR8Gx5zkuBjFWXRq
75ZRkYBh2KiXSTGiz6B2vTiRvfeGQeTSDp5nRTPoqNncliuRw/B5XKHx/t0Z
9PGkhc3zxGHwpTSqcljOoC12+YHtT4Zhc5GxqMCaGZR5SSqDK2MYRj7/ykpd
mEYqVz2btuYMw7IQP63ST9MowffrnEPxMJjx9tJsk6eR4J0tiknlw6Ah7Lkp
yHkaBYbF7fvy+W97GKtvrd89jRbj5i7+bvlb/ib3M6bi08g11SJiQ88wtNxN
d5oZ/omG0vLzbQeHIV1Kw1Ck5CeyypbqDacPw5qisppn4T9RU6En+8fpYfAJ
wGmZdj/RwY9f1X7+Gob4seD6Ndt/opJPW4xXcFBBzahntZTIT6TZEudpLkCF
h38g1314CqV1zz0MkqCCN3K6uRNNIYVBi4p8BSoYStWnusVMoSh6Po26kgrK
y2Z2iVyaQjwzUiKyG6hwwXFZuNT+KXTzt+cWPW0qvC8pb7ylMIWmOTqsvYEK
PVqS+mazk+ii4NbAzANUoKQ/t7rTMIn6JONf9RpQ4XY/w1oufRIdU5pvFLKg
Qob7Iha8NYk+rzo+p2tLhfo/v+dsrSfRbo0CBTd7KognsAQJbJ1E+Vul9z11
oQLz8rs/JcQm0frd1y62elKhyXx3iydjAj053BHO4UcFBae3HzZ+mkDSJlvz
tYOpECJKs93zYgKFnoj/Zh9OheaEA9ZpAROI/ew8W0I8FaLWKlw6YzuBrjse
V/uUSoU7A356Ljsm0Lh7gdFSGhUOPWcuqZOZQHbe0p7rsqlwJtzhrvfcOOoK
vPbQupAKzxn3b3u1jSOjBx3loWVU4PZjvVuVM46qYrbScC0V9nL/crONHEc7
UuKFJ5uosIeZa82+y+Mo+8W89vIuKliafY91NxpHq7KOW5v2U2FJHN7Q1cfR
w/yCW4E0KsyyZ5x/IzSOxD5Iv8qdokJVZ+oN1z4GCq651khZpMKOXckXhR8z
0J/GjlkpthEw3KOasf0MA13p3KpwmG8EgtPsLSZUGIj2I36vl9gIJB0JjlpH
GUO2tHmHDLkR0NOxe8BIG0NtU8fDe1RG4NLDw95aTmNIb6kgT2DdCEzJv0r9
pT6GythkvoHWCNh96d+7f5qOtPmvs7nuGAGqy1w+fyEdvRbvXPN43wgc5jhm
YexLR8sVthk1Hx0B/mtJgSL76Ch+ZcJVNvMR8Lh44pUeLx0JbFhI1rIegaOL
Azp/GkfRLW3Lcju7EbBxFX27Kn4ULUDhSOylEWj4KHG/ynYUOR+UEa7xGIGw
zt1mnatG0aDhde0FnxGQ8e9NtJmgoRPHO0+qBY1A49L8tFkhDTWe2nbLKnQE
biptYSoOoKH9DgnpIbF/009knAw7SkPFlxcaSlNG4N2rzLxGSRra6GU5y3gx
Ak/VMkt8foyglwGF8suyRmDopeCKmNcjSP6+zF7j/BFYmcuWJnFtBEVGXXcI
wCPwxvM8z5+9I4g7uTMsp3oE2vliBfWFR5Dvs215gw0jUMNjdovlGxX9fJ3Q
I9ExArnLnm6VfUVFDrkLrAf7RqCs5AV7rCcVfS+1XHON+vd9v7n10X0/FZlX
FRqmT4xA/JfdJu/EqOhTvczVrvm//ePzJt6ofxjpfr2ezMdCg3R13Zv62cMo
73vnxx08NDiTvvjzpd8wWkvdNnJJhAaq6mYjNkbD6PFEgtAjGRp0X5M7dnnZ
MJJaWNjcqEwDPiebzb0TFPSA5cRJFjUaGMQaBz0royBW3qIATU0aqNluPVoe
SUHXRGXTz+rQwJ2uH7rtHAUxZL0aovfQQOLdGwtObQo6p9I1U3mEBvEv9+Sv
5qagzrU68nMmNBBTSMOPuoaQoVbintVWNOBcq3TnYuYQqtyxeMHyLA148z1W
BfsNoe37T4Tdc6SBOvd06ZzpEHqrX5Rb7E6DKMphx4JVQ0j1mGwP/QYNOHZ7
m9YuDaJkGy9WxUAaWJu3PFzTOIhE7btWG4bQ4Ih57ZWOZ4PojouOoV80DXwD
Fzjarg+i356JHtnJNKj4IhSgaDiI3P0Wk/qf0UCyvED+/YpBRA0+8VEskwby
spH8MYsDyCaiiLovlwZnb8rd/9A4gFoTZIWultJA5PvL1s0vB9CRJ16bX1bS
wJDXcPW0zwDCr7qsOupo8Al9r140G0Cbc3QCeNpp8J23ee7QugGUUZyYptNL
gyE+HaZetgGkXLFY70ihwSu24lWF3f0o9suJmWTG3/dZ7lXamdOP+NuK5Opn
aeBqJyG0K6QfBXyT3cPENApZJyMuUc/1o/khrwsaXKNgXmu6rm1nP/pfOJfQ
KBxQkHjMLtWP/hdeJTUK/ZztKlcnfiBLpqTucqVRMH7SKrjm0w/UwLXEMrNq
FJwZ/kj+2Q+0T9hqtarGKNy55Rlh5PsDFUkXG1hsHYWT9y5Ry4//QBrKch7B
uqMQN6GhenXTD/R8zY2kwkOjwNSVkHVe8AeS0+wuoxmNwk69gNHokT4UobOd
Kmc5CsyCpXuYK/sQ194kQf3To/D6M/+ytNQ+5K23pOXrMApG1nIT97370JSp
lVXW5VEYMLysnHG8D104Wezfd/1vfomXVnBs7kO95+TSRAJG4VjgTscEkT5k
eulG/Z57o6CKWh3sGd9RrUf3tHvkKNx+OhTj/Pk72uW7Xe554ig8ftN5/k3a
d5QblLS7/ckouIh/MlcN+o7UwpbsuTJGYX3ItW9tZ7+j1Dir0K05oyCoe8ir
ZPd3JJla/N6heBQChrRfdSp9RyFpct2J5aNwZvF114nfvYgl+wbLl8+j4Ot0
945TUS/yLOxe9btlFIJmDU5TPXvRWNl2gw09f/Pfcdi1bnMvOvMp6Yrt4N/n
xgVYdvob6mheSgynj8LF1ArrhnffkEG3VVnZ9Ci0Cbpb0S5/QxUDxcNTv0Yh
4nzCl4sbv6FtdDnBFRx0qFxorjac7EFZ0ze0zAXoUHrb43x8dg9a+bv7RJAE
HVKNgir2uvWgJI4d/vkKdPhyM4vZeFMPEhZMfkldSQf/l5t34OluFCT5q05m
Ax1w+Fjig7xu9Evx5PQRbTp4aWnuLb7WjdxWlch6Ax18aF3WB7d3o2F1+d2Z
B+hA+bRRcuOfLmS91du+14AOr3bTEjzLulCLbs8DIQv63/mllIzs7S50+PCO
97q2dFBmW1kldbgLIePkrsv2dJC496nNRaALaZ34xfzUhQ7i9zlvKjd3oldn
Tq5q9aSDvaT40tq4TqTkWKLP4ffXNWduh57sRDHu8le0g+nQHR1qdWh5J+Lz
9k60D/9bXpFF6XFqB/IP7PkQH0+Hrq5EOnrTgWZDdgzXptLhoO7h9V4eHcgp
JllgKY3+d75/uvLujg7U//DXpnXZdKCXUX7R2TrQ8RcnT1gX0sF1oVvh6eev
qO5NiV9oGR161upcyYj6ivbmy7/EtXTwSKPpc5z8igqxd91EEx3quvFi1oqv
SL2m56dyFx3aAp2/vBprR88ad8ia9tPhAfcdyZm8diTbmawbSKPD+SHnDaF+
7Sj8x6/zuVN/+2ffCUePI+2Ik3byAWWRDpHp+1VfibejG1MlOVJsYyBWMl64
9nsbmlyU7zrENwa6G1sCFtLbkP1/4YNiY8DXsOy7qEcb+vZfOJ3cGNy5W7jB
U7cNmYjv1O9RGYOR4tUtK/nbUI38Q3eBdWPQ6ZWirtjRimDl7wTQGgMXJlqa
7bNWlLPe+oPLjjFIXHvl+YhrK1qjXUpJ3TcGBit1HhTvbEWPQEGg+egYjPPW
1LbytiKJgz6b2MzHYH3ppiqtjhZ0z/CbpZb1GIxhqfGu5y2I+fhOPzu7Mcja
GPquyr0FXT318EXspTFo/brWb253C6Jf+P2l2mMMpHSXapyEW9Dpy9Y/533G
QHLOk0n1ezP6er1URi3ob/2a78Ytf9OM9AMUdK1Cx8DO0I/zjE8zKr/ncz4k
dgyq2ATLB442o61R30JKU8bgz/J9+1/KN6M3STtzGC/GQF4ilPM1vQmtePaw
UylrDG4oZfpPljShxNe/mYzzxyBt2XtNzwdNSCjXWjUAj4HqSba4HTZN6HZp
6dGc6r/lHd+3frd6E1qqVHAfbBiDgi92HoHMTci13idBomMMglPjJjiaGxGl
/Rs+0DcGUQsHlCufNqKT33dSPKljkH1C9n6ZRyNqHn7Inz4xBhlNY+8WDzai
gxO/Nbvmx8Bfq0HRVbYRlc5bW/KxMIDqtGiuPNaANrGgmzt4GKDT0tYn8KEB
pf8XLijCgOFYxqHNUQ3of+FjMgyQ3jwjHXe+AUXL9k41KDNg9e/CHk2dBsSr
AjIsagyIfLJGmVuwAfmtTdmlqcmAFwXRI+sr69HMpj92Z3UY8Fvh0ufiS/XI
cYdNSPQeBgQJb+MpkqxHP/ahd5VHGGAa6Fa56kMdstBX7Jw1YUCfQ8YK9ot1
6Iu5L9NqKwZ4XbijbyBeh/bY9K60PMuA9Le5FzjwF1RwHo7ec2SA5BAtdfXF
L2i9S4pbsTsD9st1L8+X+IKeev6Jp99gQN3EJoW3ZZ+RjJ8NVghkgGVB7AdR
588oLBgNGYQwwLMoclev7Gf0v3CZaAZEhzyqF6n5hP53fD6ZAQbeUs9ee3xC
E497j/c/Y0CioOZ8psondP4V3BTLZIBT1B92ieZa1P0u5fm+XAa419lw/vCr
RcbFfz57lDJgJoNFR0SjFlWX20y9qGRAmZTN92ffa9DOL0i6o44Bz1oytySF
1aD/O673187U2z931aD/275nwPaDSDBzohqlDPXed6QwYOJxlHT142okzoB3
yQwG1DTcGNU1rUb/m+7PMuDOea0mGY5q9H+rxOOw4+4yCeP8KvT/AGljAQY=

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.1, 0.5, 0]], 
         PointBox[CompressedData["
1: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
3P3Y/60Kp1Cd1KN3qPon9v8ArwEZPg==
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         PointBox[CompressedData["
1:eJxF23c8Vo3/P3Ah2Xtc12VGyy23JAlxWhpkjyTkLkmSiKSQkKSSvXdpkIRk
j5NKS/YeSZJkXKTI7Pe57+/vcb3OP+fxfJx/znmc8T7nvN+v1cfOmpxgZmJi
6mVhYvp3HTr+LH22Nk+77uJsZ8fWTeQvypzvZQcjItWj4W5Ysiypxrwy7YS9
HbGSw1rthMZq8ucFnj83YxyJD80XY7NPy5CdMzeUDh93JU6n3yte9VSaLFYO
Ozrm7UF4qH72cWqSImOco8L8or0IgdPBIho0KdL9QVy14GMf4p327qygK5Kk
/NSH2eZjVwi5Z7PR0YsSZDxvY5jE2QCiKTWqxzlEgly1sXm9g/dVQrs7LS9L
ToL0PNBa/ST4GrFNmHLj0xtx8qtD+6G5qOuEo7nz1wMXxEnzq530Xek3iPd7
QiVDFcXJlxndwbdybhHC5QkJad9ppEp1r3R7yW1i10iD45PHNNLYhd4Tdiyc
CHDf8VzYk0Zy+E4+KHSMIKLP5kzs200jyZtT7l0ukUQjf926bmEa6ZX4g1j2
iCLYw06aun6nkpuyprnkvKOJSj/zbdUvqORw8c+Off4xBN1+e/j1dCqZVvvr
rnNwLLF9L6U3/gqVtGibORsRGkfc3TtY9Oo4leT9MqtZFBVPnDzWf2vsAJWs
/fF7VU9CAvFrXWja1GYq6btivuVPWiLx14bfOtVSVFKVfyFtzf0k4sjeAhsd
Hio5JrV4+kBOMuHxaucXr2UKmam4pOZSkEIseB5+avqDQh7ZvswSVZJKbNVQ
t279RiGF9P40FFelEU6uOjLLAxRyaCOTgcuxdKJ160m2rj4KubOQqfDKUDrR
2E7wnuulkCmaK2hRjhnE/edvA3v+t32uZsWVe6MZBO1l3QXFzxTSXJf5a7HL
HYJ/c/XxayMUMq+J+eC7qTuEg8Q1Zu6fFJL7MEtBr8ddIl/5yOmxFVTS8RML
hT57l4ilO/ofFaKSL0+yXl7hnUlcy1NvfriBSkrTWb8ILWcSmbqc7LRdVNLb
c6XuOv97BFvnibWidlSyY2ll3jbW+8Rec5NOkUAqqRLEJqoXfJ84Z73T6vEj
KhnGvcrHhvMB0X7tVnh0N5X8HrXq89nQB8QQnTekgJ9G7hVn3x/A/5BIzx+U
+duQRt65w54bHfWQYL1S//laHI1clucQfiCaRSy3/AooH6WRVvkcl0oTsgi+
cB226wbi5LNtnJ/eS2QTcw51oQ0vxEkBknPvx7RsIsCPnm9tLEGe2ceVMyn7
iBCZGvWzZZIk39ZzCbLcf0Qsvc8dL/4kSa614PYSkc8hXjpWLzwTkCav9HF/
XJ+TQ8hVM38VcZUhe+159mgoPSaao865HSZkyW1jPNkHCx4T4SfGjs9fkyOj
3Xn5j6rmEgU1SiIxNTLk5Dyvp1tJLiFoZGn4Tkua1Avg6w3UfEK0cTILCr6R
JB9w8O+KrXpCnDgjdfN0sQQZsJ/drFUmjwj9Z86ba1icVLrFHmxzLI9g+v9L
XwN72de78E0hjvGzQ7D6IQ6ZuXX5DA8ncpgGOMIxHzmucWXDu2U5S6NH4akT
nGOSigUMp2VxSj9wgQ+Oc5psyoPnN3EFlU7BDz24SnapPGXYooRr9L0HzLrI
JWVeBBcQ3MYfZ2G7QO6rJ9ULGeZ9zV08eQmu4OT5frECdjLgkWRZhsUieYxu
Ec8YftXGEyjiD7tTeYtSa+DVNrwj61mLGG5I55XI14F9v/AaagTDChv4Al68
gbtO8z07yFnMcPATvm9terDqNJ/40VD481Z+g2/1cPglfn83/hKGtav4C+eN
4bEVAsOBUXCijgCNpw3eHyKgHytayvBMncAVaUs4k1/w6cME2MRM8KtyD8wU
L0gtlyhj+HGP4ME9tvARaSG/D2kwx3GhAosBuPi+0FC/bDnDJ74LUU7Zw0J/
C+v9uAc/dxO+7D0Mn30mnM8qX8Gw5Jzwl1An+P12ETGxHNjriohu+ji87qWI
r7xSJcOtq0TzClzhAD3RQc0CeFOYqOirafhjs+gBA9Uqhm+Jivl0eMIaVmJP
7Ergbylin0fm4JgBMRF3zWrcT2sp+xd94ClHindQFWxkwX1oFRPJ8HqvW5Pv
ZeClBO4b4Tvh1vJbcubH4Ed93JXUQDjgzy2Lj3fhw6t5Ju+8hDftDg05OQSv
OsEjt5HtOY7/WmjF5Dr42UMei2f74FvvQukXHeHjYzwh2iGwBu9tWZZsWGAT
b8Xrd/A349vmt0bhandeuhF3DcOxMbeviyjCZ4p5Zbv14T1dt8tTXWDxBV7z
42HwD4mwifV58BttvutjjXCaXdjq/CnYM4Cv/LzgC4b1M8PMNFTgNbV8E8um
8MJwWPALD7iZg3/19Rg4SyG87GARfEWf30ygAz50Nny8bRb+O4I/OJHykuGV
T8NljqrDva38ZXJW8NOZcNNvl+AbFIHxnCT4H42Ia24V8DZrAZmtfTDf5YjS
+SX4a5qAabXUK4Yrn0eMBRJw1KDAtf12sNPKSGkef3jnesHSpgyYciDSJLYG
pjsJjlkNwrW3IoOkWWsZTskVlP6yBvZojCx5qAPr/RA0OeMAywpHjSoHw3Oq
QkEzD+DGQ1FS5W/gBxeFSvxG4MtJUcZ7OF8zbF4pNMquAG/sj7r6QQ9mWSEs
FekMd8tGF1uEwvl7hI3Fc+Fgh+jv/fWw7XXhq5l0WDU7WvIU/xuGueuEixWV
4cHxaKMfxnAZn8j3onNwhHJMoHcU7GgqIrmjECbOxxSxtsGicSJGb3/B4yUx
I6Gibxl+2S0SaKIGJy3GSIhZwuekRIt6vOADO2IN0xNgmWOiI/Zl8GxgbIB8
D1x/T1RiYgG+9zr2WYHEO4Z9RkQNL2jBJlxx3zRtYXlFsQAmP5jJME78VRrc
4Sr2LISEcyPjDAwG4KBCsW+CzO8Ztm6P8++QhVV+i4kn74Y5afGFdvbwgCbF
YG0QXGITPzxyDw7zo/jn1sIOGfE092FY6wWlUI29jmHhoXj9xQ3wKBt1mDwA
12xIuBLkBCfoUmm6N2FX54SnvDnw3ttU/ZY6WDIv4WvcOPyziXrFmvcD6ud0
AnW1EnxHhPZ0yBC+qJZ4MNsVNjpM++oSAa/3TvRTKYCXk2nU381wW1ViQcU0
nPOJdtBfuJ7hQOakIR1V2GqNuB+nBay8N4nS4AmzO4oXRMXB/SFJepYlcNEj
8SGJLjj0Q9LlgTnYni5OuU9rYFhTIDnfSRMWUJHQU7KGv5klf5n2gas9JS6X
pMCx8clivlXwmTKJ/J39sKyLwVoWpkaGef14z53gh+fC6qtey8BD6be5/lKG
G/MNLG/thMtreO9NGMMPWuqnjI7BkV9uaz89B1/+ZXBTJBA+xcbXeSEKNhdr
WNN9F96xIcxteyG8Ud2wKvUlLKbLx7WiDWY50nDo+BA8cTos89UvuNvHcGo9
WxPDr0L5tG+IwvmpDTfG1sHJT8I6DNTg66Thmvx9sHsTn5uQJXz0c0PleUdY
dzqMs9MLVmU1OqQRAq8W4c9MToC51zVOLmfBv7eGa/1TBg/uM7rx4h3cYMnf
sbYHLjvVKHd9FL5/Kdz1+wIccdOo8iB3M8O+yfycTyRgx8eNFgKKsFlV+F13
LZhoMJps04cVPvFrbbOFRacaQxJdYGbmiPbFy/C4oLHc0TC4S07A9Xka/HJL
U4VcHpynE8FxjYSTLIwtvjXC104K3NUdgM95NdFzpmCbkIjtfMwtqA+JxiFu
gvCWRwLtLbKwTEWT7FYVmOtDxNn43fBsn3HFvCn8eUKAw8Yerv/TZF7tAZfy
R95ZHQTfW21CD4yBwzcLbv96D/bZ3Xx9fxF80iyyLbsWNj1hIsvTAWt7Cp49
Owz/Fdxc3jQLi8RHsm9hb0V9yjIxj6XAY6WCd35vgDveNU9YqcMveiI1Kw/A
uWMm16Wt4MQlwTZ/JziIt2X1l0uwm3SUy96bsPUm0/KHSfD+nULsXDmwikmL
2ZkKWPp4VEZDHczpYTqh3AfPXBXSjB6HB2JagmeW4A/3o1otedtQH4tNV5dL
wZlvhFwkleCwrpYyPwK+9O8PH0PYYcHUbI8dbMwtnHHfFdaSbB1n94c3/B2t
cToCFibMgj9kwH8MhVuVCuBRu1aZyBq43S36zM9muCbArMxiEH4cJbyqdBpO
yGw1FWdtZ/jqs+h0X2HYtdZsvH8NfKRDWGOXKrzvW+u1TB1481x0C5sFLMVp
LnPKAeYQFznz3hP+pdBWqhgMf9oewxYeB7/XNzf98QAuthVJNyuB75xtGyt6
A9++EqNO7YIvRphf8x6BT9wRaembg42etknv4OxgePvLGOc7NHh9m3kpqwIs
9FWE7aQmvDzTZvJWD/6+KjZNwRpuo1iMhTrDz+VF1Sd94ByN9iCTUDheL7a5
MAUOtLaQFsuFz54Rdb5YBVtdbi/pqYd1wmJXavfDyukWJul0WCJfNI2ZqZNh
9pr2UXt+eLo5dttrGbh/0CJIXhl+91O0+eZOuGhlh9SEMZwhGnfa6Bgcuv5Q
ScE52Gub2EqRQNj+QIfxhSjY0CoutesurHn60KhmIbzOR2xb6ktYMLTjKlMb
vJQS13RsCB7JPST16hfcWi12ej1bF8PVjR3FIaLwo4E41rF1cOyPQ8YGanAA
CyU1bx98Rrjzu6AlfHhtvNp5R3jPVsurHV7wpn2UJvUQWNyyUzI5AV51Kt5p
OQv+cdGy2K4M/niDwvriHfw2qdNobQ/8LCc+JXgUTq+0/D6yAN+qp6gd5O5m
+EJ/Z2CuBHx8Mr6RXxE2WHFY0l0L1hCkOrXpw2vluorUbGH+LQksiS7w4p7D
RouX4WFzaoptGNzi0DVCpsFVFxK2yuXB2dcPBwaRcEwCtXG4EfbP7pLQHYCd
yxNO5UzBlnWHi3iZexje3UdlcROElSa6DFtkYdqfhGRVFZiN32okbjc8JUPb
Om8K9yl3B1jbw292JTZUecCFplYSq4PgNHvaqcAY+Mb57mdD92DPa4nM+4vg
f+KsDLNrYf2HtGTuDnhbafc3l2F4zbtE1aZZmK/HKkCFvZfhhVFaQwwF/rrY
Lf57A9zMk+RopQ5XSh15VnEAzlISZ5a2gqN39Bj4O8FXjJOSBi/Bp48d+aZz
Ez7kLq76MAnedbXHnzMH/jsmqd65AqbePyLeUAezFos7KvfBk697CqPG4Z7O
pBUzS/DrkSMGlrx9DBfMiyeVScGpXL3DEkpwiETyFj8CPq9o7T9gCNtpS9Tv
toMPGvbS7rvCanbJJ9n9YTk360KnCJg3QGLFhwx4PrJXX6kAHrqbnBhRAzcV
Wg9PN8MVryS2WAzCD9t7r5RMw1HDyR9orB8Z9vttTfMVhp04JE/2r4HNaX1P
d6rCOxVSmDJ14I3bbfTZLGCKvmSiowPMYtv39Z0nTHdJUVEMhrv9bK6ExcG1
4ZIfph7A+Rl9VLMSOKUgxaHoDXz9hc1TShfs0SrJ5D0CHx3qO9g3B+vNpCQQ
nP0Mb11l+zWDBstSpFRYFWAe+Y9+DprwnHpq3Rs9+IuuLVXBGm44IuUQ6gyX
O38soPvA931T/xiHwpG3bQ8WpsC+aVIJornwqbyPQ15VsNnz1M099fCOZls/
rX5YYVCqLo0Oc106y72C6ROehwENmzezw7P/tsf54TP/tsMp8Ock+r1XMrBl
pmHdzAa4PufJj/XK8J5nfNTD6nBp5Vnixk5YqbbhRPkB+F690q0xY5jWEVYg
aQWH99M7DY7BbN8M//g5wT6TT9bmn4OnfvMd/HwJPrnC9ZxQINzH0Ri/5yZs
Krip+nwU/IYWPnQ/CdaWm+TqvAsXKhht5siB/9qSZ6lRCKdt5/c7XQGL6Lje
S34J39RvfP+hDl5hsenHcivsaRtO2dQHjzlMav8zBB87a3QichzuuJB388Uv
WP8Kf8HPJfjFddfOtWwDDKtHNC5b8MK5CZvWXheF19wJ1yuVghOzJ92+r4P5
nxrFiyvBQeV5VQfV4IUX/EO+BOxW58r1ZB883Nqo/MkQtu7bZClgCTcPhV/e
ZQfvn5jMdHeEq2aM3me6wip/8qbavOCsVQKUVf6wNL+b9rYQOJrSZH8qAuZc
rXwzMQG+Ih+R/z4DnlGe6ljMgk9rGC8rFsADu/LXHC2DD+kJ6IXXwB9M3dye
v4N3WTfF/WiGS+yVq+R64L/PRHwxG4Qzz09xXhuFqZeNlYun4bBr+Ye+LcAr
wwQuU1k/M+wd55apyw1PpjW98xaGHR4qT+VIwL15EWIf18AmpVNafIrw6+fG
9jtUYa13+TfctOCnzQL5d3TgDT1uHS36cOpg0xKrBSw8prxmqy1842eE7kkH
+M/ilGu8C3x+pUncW094lKegcv4y/I+o4BeFYLhd6hynTRh8cH3zpttxcI3S
5kPVafC2bZG+kw/gxzt+3F2dB8sdMHlnUgInGBdMBpIwn5Wg2LM38NVj57S+
NsLzTs3HxbpgV/fNN/YPwEPekXkXR+AjV3+0Z0/BTbdMlnrm4H0xBXI8zIOo
/ymCutqc8Ob751zPCsIPc5tj02mwVPHmyiZZOKo6cpBZAeZ484Njiwrs12iy
6YQm/KuzwCJ2N+w0IOj7Wg/+NHLu7m9T2OJH81t5a7hufvOklT28kyVK9JYz
XMw1vb3SA1YUNj0+4QPfkXgaIh0EU9YK5RmFwrcV3dv9Y2DWrS2LBSnwRW0V
uS/3YPreqAMiufAJw+mze4vgnkOmsReqYCO7pxUPa+FaR6HBrnp4u5s7B1cH
XHCxRWl7P7w+QMXizDCcciPKJ5UOC0VN32mYhUOSTN/+762D4eW7T+nK7LBH
jpDocX74e6H79mgKfLSy5dgrGbjtlUrIzAZYrz7qyXpl+Hn7dJulOry133Qx
ZCecM/xUtvwALDspdGDMGI7/7X5W0grmWdEaY3AMDuTYUuHnBM8JRH/OOwef
pf1k/3wJ/iJrpiQUCFspFJrvuQk3qgj7nI+C9273uHM/CS7f0/qm4y6srL+F
zp4DPzCPFtEohCVsf2qeroAjHcyOJb+E2c8WXv9QB1++IPxkuRWe9vNoU+qD
T11vXbAbgvvDt8hGjsPmCdH7X/yC32X8dPm5BO/INotZyzbEcFFBYbkFL7yx
XPhzsCic8cKDvVQKFqtr/fv7Oji0dYu5uBLM0hftfVAN9hr6meFLwBPjZm9y
98H2M4UT/YZw17KwiIAlbLjqvOYuO/gVX9s/7o6wJkX1eqYrnCcTk9vmBa+T
/9XK5g8nK5svqIXAghrPVp+KgIN3iexPTICXdM+7vM+A3U3bohez4JEjquWK
BbCtfcyAbRnc6vxrVXgNrHve/O/n72DS95nZj2ZY9ZqIt1wP/Oj2+QyzQXh1
XNvroFE4Lk11omga5n4YI/xtAQ7I+6VBZf3K8O8S8390ueEzz58FewvDg29F
cnMk4MPN51v71sAN3W3zvIrwnkHV1TtU4bLRmH1uWvCmn7/O3NGB7y+aR7fo
w+Iri8pYLeAIHtEBVVt4lajnqpMOsK9Uu2K8C/xj3Vazt56wo1LspfnL8Ee1
mXSFYNhsh8Vr6zD47f6i8dA4mDAWFa5Og58d9tSYfAD/dazdbnUenO60Ndik
BBZ1j30cSMK3vGdaCt/AK65azA81whduFcmIdcHj0aL79g/Ax1M8z1wcgTvv
tUdlT8EGuVvLeubgl0Wxn7iZhxnWqJ5h0+aEn7y2UDwrCK9tLDJNp8FJnaKX
mmRhgQHPdGYF+NpIe62KCrw4tXXcXhM+Nx8rFLsbHmaeVX+tB9twHbL7bQq3
CBVfk7eGD0iIPbayh6vWXGi56QxvUeyYq/CAs1XVZCZ8YBntuL3SQXDM3lln
o1CYy/BQlH8M7H+ouLQgBZ49KvZp8B7s7HiBTSQX/uzasXFvEWx5Uc30QhVc
7x938WEtvPvGbFpXPVwaeaiWswNWSioe0+yHM++KCZ0Zhmk5F9RT6XB4YcfR
hlmYrVLtGhPTN4a9X8XlKLPD/42f88Mn/x0np8B9H4ulX8nAJsNie2c2wG/o
F5zXK8PavzsiLdXhQqZtpSE7YXmO+P6yA3CawO+VY8awCM1yo6QVfFO2xMTg
GMykQLno5wR7qnil5Z2DxzQ7Xw1cgv/Zs21MMBDuOBgvuOcmrG/+e9v5KPiF
jeXR+0nwNoeSoI67cK4LJYc9B15zwatZvRBO9Ov87VQB813fJp38Eg4Kj9f5
UAcvxP8+vdwKu2VYRir1wV+zSkrshmDrAkp/xDjcXOa18sUveP+LToWfS3Dl
+20ma9lGGFZpjfey4IWzen+nBovCUkOWr0qk4OjxktGRdTDnDEVQXAm+suy1
7aAa/Iuty9aXgE/zqQfl7oMHxBIe9RvCh2Tmmvgt4boNh3/vtIN3KZdKuTvC
JepUnUxX+O9dF0+3ecF3dbsi2Pxhqql6iVoIHHYk4aNjBLzSfo41MQG+5HxY
4X0GPOlRaryYBTv4Ur0UC+CeoIuptmWw8e2ul2E18OtY9VHyHayVliDwoxku
eDCnJtcDb8g7bGs2CKeWlF4NGoWFn1MfFU3DIW8vNg0vwH+aumYprN8ZPt+t
LqXLDY9+TtjjLQzbjc455UjA7dOHI/rWwAcXS4t5FeEaVtpHQhVW47nE6qYF
Pxbp/uuODiwnpWHcog8nrEu8wGoB8yrNp6jawlfVrF46OMDzRNn3OBf47H6a
wFtPeMjoktr8ZfjI4W4bhWC46R+Nq9Zh8F6nxOzQOLji3HxjVRq82dtqlv4A
fhhYJrk6D5a8RdtjUgJHRV9yCiRhjpTu8MI3sN89jeKhRvjn48Q+0S7YqWie
Zf8A/KnK6q+LI7DF6zKj7Cn4fQPtQs8cvLPzUgo38yjDxZ+6X2hxwhtHNL67
CMJ3phL502kwZX5+a5MsfJv5iA2zAszCVR6oogJfFBLPtteE6eLejTG74RNr
emZq9eDujZqSv01hI9Wk3fLWcK3Wwikre3j73iPhN53hfIPyogoPeP0h8b5x
HzjlqDeLdBAs5NgjbxQKX3fVNPKPgZe9kjwLUmAP/4XkwXvwSMiRF8K58NHI
8hGdIrgtUZz/QhWsd9d768NamHzUY91VD28t1Azk7IBzKpKyNPth2VcLDc7D
cNyHIzMpdJinvVyiYRYO/Ci++39VjuG5r96nlNnh/+Jc/PB/8SoKbMWU3PtS
Bm5kX2Se2QDrCFjLr1eGy6kVhpbqsLKshGfITvj+Xz7JZQdgCZXemlFjOFJz
+4iEFcy+J5nP4Bjse3BR1c8Jnjazts47B5+yqQgYuAT3n5DIEgyEzVx8Gnbf
hN959v7yiIJ3+G2XuJ8EFwUn7+q4CyuELzqy58AZ8dZh6oWwWEbFM6cKODRL
ojfpJcxc4MP8oQ72KuvdsNwKT9RsN1Tqg4+/Tz5vNwR3tSwmRYzDhr3WNTW/
4FdfKr5NL8Ea4xJ8a9nGGc775aNqwQuvW+49EiwKJ7NpBZRIwQJ8KQ9H1sHB
Ykv1NCV4Sdrml54a7L6hUtyXgL9tktyVuw+2Vfd17DeEW3f23ea3hHV1tZ7t
tIOrTVJ6zjnCqkeWVmS6wo+O22xo84JlnCsN2PzhWA/J82ohMLevb5JjBBwQ
1Pc8IQGeDdX69i4DPhObwruYBQ+mLm1RLIAPP7A5YlsG1z+p9A+rgfeUSD4k
38FlpG/9VDO86W3fT9ke+F6TlrjZICzenbIzaBSO+Lx0smgaXjVqc3t4AfaZ
riyksE4w/GNBsucAN+z4b3xQGP74b5xOAjYV0TboWwO/lUz14FWEiXXLiYQq
XPi37XNXLfgvtarhDB04nZDibdGHRfdf3sJqAd80+milaguvOKzt7+AAX/gn
9UGcCzzc8ZHcNzBBdOvwG5hmL1TbfNIe9hqZIHaIagxlxMxXt3xL5cmemiA8
D2h8XPlprnr/1LJKz9wEEa/AvTPYba66as7WipuZTpzv1E97oTlXvYW5+ooW
J53ovrQyVFh1rjr733idIJ34sI+696HFXPV/cSsanRCmCwffTpqrjhHvn26U
pRNRX3r+bGKar+ZaQ9CYFeiEgOt7XZaA+Wr/jWk7VFToRN0Om0oT6YXqmS1/
HOw16YRGJMuRvzoWqp21jobG7KYTTLnKwjpZi9Wfdaqf1urRiWbW6Uau2KVq
SwPp7llTOrF/ppQzLXW5+oOFH5O8NZ1QdMkvHX/5p3r30f51VvZ0Intat28i
iIksPUno33SmE+coCk9qNVeQf7umuVd40Ak9ecGffWzMZKbXn4RxHzpxJoiZ
R32UmaT5HyWlguiE/BDLsdAJFjI8pPqrYSidmHrF4rSVupL8L14SQye8FW2E
/lxgI/8bN0+hE6d/mlu8kWYnp+70Hx68RyfkBlMr/6hykicfEVeEc/+3v/cC
u43Yecjep2n3dYroxJL8Fz7BQn7SpOJPnWcVnciSr5Iw6BYh37w8Ov2glk7U
cASt0v0pRGp/qKZ21dMJg+xHDZ6S/OT/jbfRia4N+WM+jtzk/7W76YTv+89k
WhcHmfa1/5bzMJ2opnNOjY2vIkXoxNMUOp0ovHGn9bs9G/nf5/Hs/85Ps5zO
aqmV5P9dNZPEJ6stDwbZWMn/B05RE8g=
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -18.855071987360812`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {-18.855071987360812`, -0.07107079726800697}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.41833\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.6245\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.833667\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.06666666666666668, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.1`", ",", "0.5`", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 1.07005\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8684587463798923`*^9, 3.868458953787648*^9, 
  3.868459036313692*^9, 3.8684590984826803`*^9, 3.8684592639462*^9, 
  3.8684594936911592`*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"08bd19f6-b45c-49e2-a29a-03c7839ae4ab"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1262, 932},
WindowMargins->{{12, Automatic}, {Automatic, -161}},
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0ecdde53-08f4-4990-ab38-c806dfcaedb6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 178, 3, 67, "Section",ExpressionUUID->"f7e013f5-5357-48e7-8900-4e5a90e67106"],
Cell[761, 27, 16591, 425, 303, "Input",ExpressionUUID->"a395ccca-f8f0-445c-ac46-355ac1dddfb3"],
Cell[17355, 454, 2448, 67, 106, "Input",ExpressionUUID->"2fa3ccc6-f36f-4de3-9f55-56744c1ec546"],
Cell[CellGroupData[{
Cell[19828, 525, 174, 3, 54, "Subsection",ExpressionUUID->"621ed0a5-d6da-4160-8df8-42baaa6d697a"],
Cell[CellGroupData[{
Cell[20027, 532, 4690, 125, 209, "Input",ExpressionUUID->"6f7a1333-e554-487c-9ab4-031bd1b18a5c"],
Cell[24720, 659, 9272, 232, 158, "Output",ExpressionUUID->"06199f02-b60a-49b9-8b46-08e47f817017"]
}, Open  ]],
Cell[34007, 894, 12798, 319, 247, "Input",ExpressionUUID->"e7e5e68b-3358-46f5-bb67-09546f5d9fc6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46854, 1219, 162, 3, 67, "Section",ExpressionUUID->"cdb01500-2fc1-4960-92a2-58f7c71ebcdc"],
Cell[CellGroupData[{
Cell[47041, 1226, 801, 23, 77, "Input",ExpressionUUID->"7738804b-4951-43d9-9b19-37322b77db30"],
Cell[47845, 1251, 365, 10, 34, "Output",ExpressionUUID->"03e8d7d9-6b78-4640-b212-b713a719f2b8"]
}, Open  ]],
Cell[48225, 1264, 14257, 341, 388, "Input",ExpressionUUID->"c13bbe28-e01b-450e-a83d-bbad15337666"],
Cell[62485, 1607, 27910, 605, 785, "Input",ExpressionUUID->"96fc18bc-ff94-4a93-9f57-1420a7cbb04a"],
Cell[90398, 2214, 2957, 73, 137, "Input",ExpressionUUID->"9f03cc6d-6fc5-4b36-b1f1-1c225dfdb39c"],
Cell[93358, 2289, 1013, 19, 33, "Input",ExpressionUUID->"d16c994f-02a9-42f2-a812-a6a1346c24e3"],
Cell[94374, 2310, 1234, 29, 33, "Input",ExpressionUUID->"d8ab13ea-dfc3-4528-bc91-ee9f95e3f3e5"],
Cell[95611, 2341, 948, 16, 33, "Input",ExpressionUUID->"ee9bd2a2-a221-4093-aa5b-01ad875f9e52"],
Cell[96562, 2359, 5642, 136, 232, "Input",ExpressionUUID->"01a482d5-c4be-4be0-a101-233ff1342842"],
Cell[CellGroupData[{
Cell[102229, 2499, 687, 10, 30, "Input",ExpressionUUID->"dab46710-5cb0-4a2f-9c4d-6572e4333ea7"],
Cell[102919, 2511, 64198, 1149, 458, "Output",ExpressionUUID->"a8368f02-719d-4e88-a698-1fa6a4649124"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167154, 3665, 562, 9, 30, "Input",ExpressionUUID->"2d2fff1e-c064-4d05-9a49-34fb92f71da9"],
Cell[167719, 3676, 63636, 1142, 450, "Output",ExpressionUUID->"d94be79f-d025-4509-9d0d-6f863dd584fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231392, 4823, 292, 5, 30, "Input",ExpressionUUID->"4c23f8ca-6223-46b1-98ff-6a1f1a1a1b4b"],
Cell[231687, 4830, 63673, 1142, 458, "Output",ExpressionUUID->"1a25436e-d7c5-445b-8ce1-496166a716fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295397, 5977, 191, 3, 54, "Subsection",ExpressionUUID->"86b84bf3-53a9-4acc-a79a-f4a1ec82069d"],
Cell[295591, 5982, 573, 18, 55, "Text",ExpressionUUID->"a5ae5640-3453-4538-8387-032cf049c7d2"],
Cell[296167, 6002, 581, 18, 56, "Input",ExpressionUUID->"dad4c646-f725-4708-b9dd-d2101dd32283"],
Cell[CellGroupData[{
Cell[296773, 6024, 595, 15, 30, "Input",ExpressionUUID->"96f5035c-8002-4006-acdc-52b6dda2ead1"],
Cell[297371, 6041, 8330, 226, 34, "Output",ExpressionUUID->"1d0c2b3e-1778-4ef7-9202-328ca96bf54d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305738, 6272, 697, 19, 30, "Input",ExpressionUUID->"9d6345ab-2bf1-44b8-a4db-fa03ebfcdf5f"],
Cell[306438, 6293, 535, 12, 28, "Message",ExpressionUUID->"7df1e20c-7fbc-426d-9504-f99158c55016"],
Cell[306976, 6307, 552, 11, 28, "Message",ExpressionUUID->"07f391a4-b396-47a9-a305-04f79330a8df"],
Cell[307531, 6320, 551, 12, 28, "Message",ExpressionUUID->"a5e433c5-4d52-430d-b072-01d47ca47156"],
Cell[308085, 6334, 552, 11, 28, "Message",ExpressionUUID->"6fd84a39-8129-46ab-a0da-8c99f511e9e0"],
Cell[308640, 6347, 551, 12, 28, "Message",ExpressionUUID->"b54bd625-3e27-409e-94f0-1c341d040881"],
Cell[309194, 6361, 534, 12, 28, "Message",ExpressionUUID->"f6ff2f87-5c92-4c9f-b544-498085dc10f2"],
Cell[309731, 6375, 552, 11, 28, "Message",ExpressionUUID->"ff8d417f-ab55-4be1-b169-57e75148ace5"],
Cell[310286, 6388, 545, 11, 28, "Message",ExpressionUUID->"342065ca-b986-4272-b240-7bcb17dc0f22"],
Cell[310834, 6401, 551, 12, 28, "Message",ExpressionUUID->"e0899dcd-6327-4996-b3ba-73d81bfa11f0"],
Cell[311388, 6415, 543, 11, 28, "Message",ExpressionUUID->"89c95326-2b3c-49a4-889f-fdbde11b15b8"],
Cell[311934, 6428, 535, 12, 28, "Message",ExpressionUUID->"b7ba0a97-19e7-4584-ab5f-108288170c0a"],
Cell[312472, 6442, 530, 11, 28, "Message",ExpressionUUID->"7805b145-832f-481b-b2d7-03b15db5688b"],
Cell[313005, 6455, 113187, 2010, 239, "Output",ExpressionUUID->"08bd19f6-b45c-49e2-a29a-03c7839ae4ab"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

