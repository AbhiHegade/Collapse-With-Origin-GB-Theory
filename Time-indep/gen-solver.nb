(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    893845,      17874]
NotebookOptionsPosition[    883584,      17713]
NotebookOutlinePosition[    883976,      17729]
CellTagsIndexPosition[    883933,      17726]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Time Independent Equations ESGB", "Section",
 CellChangeTimes->{{3.8683965998339148`*^9, 
  3.868396612985517*^9}},ExpressionUUID->"f7e013f5-5357-48e7-8900-\
4e5a90e67106"],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesys", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["ss", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["Q", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
       RowBox[{"4", " ", 
        RowBox[{"ss", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{"4", " ", 
           RowBox[{"Q", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["nn", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"nn", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["Q", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{"4", " ", 
           RowBox[{"Q", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["Q", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"12", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Q", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["r", "4"]}], "-", 
            RowBox[{
             SuperscriptBox["r", "4"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            RowBox[{"24", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"4", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"12", " ", 
             SuperscriptBox["r", "2"]}], "-", 
            RowBox[{"25", " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
            RowBox[{"12", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "2"], "+", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"r", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "4"]}], "-", 
            RowBox[{"1024", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
            RowBox[{"2880", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "-", 
            RowBox[{"48", " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"128", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["r", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "4"], "+", 
               RowBox[{"4352", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
               RowBox[{"32", " ", 
                SuperscriptBox["r", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "4"], " ", 
             SuperscriptBox[
              RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"12", " ", 
                SuperscriptBox["r", "2"]}], "-", 
               RowBox[{"32", " ", 
                SuperscriptBox["r", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"7", " ", 
                   SuperscriptBox["r", "2"]}], "+", 
                  RowBox[{"8", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "5"], "-", 
           RowBox[{"96", " ", "r", " ", 
            SuperscriptBox[
             RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"96", " ", 
            SuperscriptBox["r", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"5", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{"32", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
              RowBox[{"39", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
              RowBox[{"15", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "3"]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Q", "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], " ", 
               SuperscriptBox["r", "4"]}], "+", 
              RowBox[{"7", " ", 
               SuperscriptBox["r", "4"], " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
              RowBox[{"192", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "-", 
              RowBox[{"192", " ", 
               SuperscriptBox[
                RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}]}], 
             ")"}]}]}], ")"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Q", "[", "r", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8683966941143436`*^9, 3.868396700475195*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a395ccca-f8f0-445c-ac46-355ac1dddfb3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"odesys", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nn", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", 
        RowBox[{
         RowBox[{"nn0", "[", "r", "]"}], " ", "+", " ", 
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"nn1", "[", "r", "]"}]}], "+", " ", 
         RowBox[{
          SuperscriptBox["\[Epsilon]", "2"], "*", 
          RowBox[{"nn2", "[", "r", "]"}]}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ss", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{
         RowBox[{"ss0", "[", "r", "]"}], " ", "+", " ", 
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"ss1", "[", "r", "]"}]}], "+", " ", 
         RowBox[{
          SuperscriptBox["\[Epsilon]", "2"], "*", 
          RowBox[{"ss2", "[", "r", "]"}]}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]", " ", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"\[Phi]1", "[", "r", "]"}]}], " ", "+", " ", 
         RowBox[{
          SuperscriptBox["\[Epsilon]", "2"], "*", 
          RowBox[{"\[Phi]2", "[", "r", "]"}]}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"Q1", "[", "r", "]"}]}], " ", "+", " ", 
         RowBox[{
          SuperscriptBox["\[Epsilon]", "2"], "*", 
          RowBox[{"Q2", "[", "r", "]"}]}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Epsilon]", "*", 
         RowBox[{"\[Beta]1", "[", "r", "]"}]}]}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "@", 
  RowBox[{"Series", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.868959364900264*^9, 3.868959389584552*^9}, {
  3.8689594459693813`*^9, 3.86895945764257*^9}, {3.868963661153656*^9, 
  3.8689637860826187`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e7510afa-3d16-4c5b-a9e9-59fb18070b70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"ss0", "[", "r", "]"}], 
     RowBox[{"2", " ", "r"}]], "+", 
    RowBox[{
     SuperscriptBox["ss0", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "+", 
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"ss1", "[", "r", "]"}], 
        RowBox[{"2", " ", "r"}]], "+", 
       RowBox[{
        SuperscriptBox["ss1", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["nn0", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "+", 
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{
      SuperscriptBox["nn1", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}]}], ",", 
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["Q1", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"Q1", "[", "r", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"Q1", "[", "r", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"ss0", "[", "r", "]"}], "2"]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"ss0", "[", "r", "]"}], "4"], " ", 
         RowBox[{
          SuperscriptBox["\[Beta]1", "\[Prime]",
           MultilineFunction->None], "[", "0", "]"}]}]}], 
       RowBox[{
        SuperscriptBox["r", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox[
           RowBox[{"ss0", "[", "r", "]"}], "2"]}], ")"}]}]]}], ")"}]}], ",", 
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Q1", "[", "r", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Phi]1", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.868959384583436*^9, 3.868959390067094*^9}, {
  3.868959447140291*^9, 3.868959458592823*^9}, {3.868963759595498*^9, 
  3.868963786403349*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"ce8b9941-94fc-40c8-9c92-6f0e32fcc83b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"odedecoupled", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["Q", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"12", " ", 
          SuperscriptBox["r", "3"], " ", 
          SuperscriptBox["rh", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Q", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "7"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "r"}], "-", "rh"}], ")"}]}], "-", 
            RowBox[{"96", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}], " ", 
             SuperscriptBox["rh", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"r", "-", "rh"}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "4"], "+", 
            RowBox[{"24", " ", 
             SuperscriptBox["rh", "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"12", " ", 
                SuperscriptBox["r", "2"]}], "-", 
               RowBox[{"25", " ", "r", " ", "rh"}], "+", 
               RowBox[{"12", " ", 
                SuperscriptBox["rh", "2"]}]}], ")"}]}], "+", 
            RowBox[{"24", " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}], " ", 
             SuperscriptBox["rh", "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"r", "-", "rh"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}]}], "+", 
            RowBox[{"64", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", "r"}], "-", 
               RowBox[{"5", " ", "rh"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r"}], "-", 
                RowBox[{"3", " ", "rh"}]}], ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
            RowBox[{"16", " ", 
             SuperscriptBox["r", "3"], " ", "rh", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "r"}], "+", 
               RowBox[{"3", " ", "rh"}]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"r", "-", "rh"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "6"], " ", "rh", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["r", "3"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"12", " ", 
                   SuperscriptBox["r", "2"]}], "-", 
                  RowBox[{"32", " ", "r", " ", "rh"}], "+", 
                  RowBox[{"21", " ", 
                   SuperscriptBox["rh", "2"]}]}], ")"}]}], "+", 
               RowBox[{"24", " ", 
                RowBox[{"(", 
                 RowBox[{"r", "-", "rh"}], ")"}], " ", 
                SuperscriptBox["rh", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", "rh"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "8"], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", "r"}], "-", 
              RowBox[{"7", " ", "rh"}]}], ")"}], " ", 
            RowBox[{"Q", "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
           RowBox[{"96", " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"96", " ", 
            SuperscriptBox["r", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["r", "2"]}], "-", 
              RowBox[{"5", " ", "r", " ", "rh"}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox["rh", "2"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"768", " ", 
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], " ", 
            SuperscriptBox["rh", "2"], " ", 
            RowBox[{"Q", "[", "r", "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "3"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["r", "3"]}], "-", 
              RowBox[{"32", " ", 
               SuperscriptBox["r", "2"], " ", "rh"}], "+", 
              RowBox[{"39", " ", "r", " ", 
               SuperscriptBox["rh", "2"]}], "-", 
              RowBox[{"15", " ", 
               SuperscriptBox["rh", "3"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "3"]}]}], ")"}]}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Q", "[", "r", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868474986627901*^9, 3.868474991641748*^9}, {
  3.868475074987924*^9, 3.868475086355723*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"7cf68800-7ce5-4c2a-a805-224e6a01c188"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"odedecoupled", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Beta]", "->", " ", 
       RowBox[{"Function", "[", 
        RowBox[{"x", ",", "  ", 
         RowBox[{"\[Epsilon]", "*", "x"}]}], "]"}]}], ",", 
      RowBox[{"Q", "->", " ", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "r", "]"}]}], "]"}]}]}], "}"}]}], "//",
    "Simplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "''"}], "[", "r", "]"}], ",", " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], ",", " ", 
      RowBox[{"\[Phi]", "[", "r", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{"rh", "->", " ", "1"}], "}"}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.868475246444482*^9, 3.868475267983048*^9}, {
  3.8684780293323507`*^9, 3.8684780590619907`*^9}, {3.868478093911726*^9, 
  3.8684780974640427`*^9}, {3.868478134223626*^9, 3.868478163587949*^9}, {
  3.868478296053282*^9, 3.868478312419388*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"02daa90c-d868-4ce6-8e31-829bb3d48938"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"12", " ", 
      SuperscriptBox["r", "3"], " ", "\[Epsilon]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}]}], "-", 
        RowBox[{"96", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["r", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"12", "-", 
        RowBox[{"25", " ", "r"}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["r", "2"]}]}], ")"}], " ", "\[Epsilon]", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
     RowBox[{"32", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
      SuperscriptBox["r", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"21", "-", 
        RowBox[{"32", " ", "r"}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["r", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Epsilon]", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "3"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", "\[Epsilon]", 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
         SuperscriptBox["r", "6"]}], "+", 
        RowBox[{"64", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"3", "-", 
            RowBox[{"2", " ", "r"}]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", "r"}]}], ")"}], " ", 
         SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
      SuperscriptBox["r", "6"], " ", 
      SuperscriptBox["\[Epsilon]", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "5"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "8"], "-", 
       RowBox[{"96", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["r", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "7"}], "+", 
          RowBox[{"6", " ", "r"}]}], ")"}], " ", "\[Epsilon]", " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "+", 
       RowBox[{"768", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        SuperscriptBox["\[Epsilon]", "3"], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "+", 
       RowBox[{"96", " ", 
        SuperscriptBox["r", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"5", " ", "r"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}]}], ")"}], " ", 
        SuperscriptBox["\[Epsilon]", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
       RowBox[{"64", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "15"}], "+", 
          RowBox[{"39", " ", "r"}], "-", 
          RowBox[{"32", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["r", "3"]}]}], ")"}], " ", 
        SuperscriptBox["\[Epsilon]", "3"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}], "3"]}]}], ")"}]}], 
    ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "r", "]"}]}]], "Output",
 CellChangeTimes->{{3.868475265358968*^9, 3.868475268529512*^9}, {
  3.8684780356031017`*^9, 3.8684780982016363`*^9}, {3.868478137602685*^9, 
  3.868478163955619*^9}, {3.8684783047184067`*^9, 3.868478312787363*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"0dd20b31-df32-4345-bc6d-0d9736c9f41a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"12", " ", 
         SuperscriptBox["r", "3"], " ", 
         SuperscriptBox["rh", "2"], " ", "\[Epsilon]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "7"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "r"}], "-", "rh"}], ")"}]}], "-", 
           RowBox[{"96", " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12", " ", 
            SuperscriptBox["r", "2"]}], "-", 
           RowBox[{"25", " ", "r", " ", "rh"}], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["rh", "2"]}]}], ")"}], " ", "\[Epsilon]", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
        RowBox[{"32", " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", "rh"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12", " ", 
            SuperscriptBox["r", "2"]}], "-", 
           RowBox[{"32", " ", "r", " ", "rh"}], "+", 
           RowBox[{"21", " ", 
            SuperscriptBox["rh", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[Epsilon]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "3"]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", "rh"}], ")"}], " ", "\[Epsilon]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}]}], "+", 
           RowBox[{"64", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "r"}], "-", 
              RowBox[{"5", " ", "rh"}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "r"}], "-", 
               RowBox[{"3", " ", "rh"}]}], ")"}], "2"], " ", 
            SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "4"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["r", "6"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", "rh"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Epsilon]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "5"]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", "rh"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "8"], "-", 
          RowBox[{"96", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox["\[Epsilon]", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["r", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", "r"}], "-", 
             RowBox[{"7", " ", "rh"}]}], ")"}], " ", "\[Epsilon]", " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}], "+", 
          RowBox[{"768", " ", 
           RowBox[{"(", 
            RowBox[{"r", "-", "rh"}], ")"}], " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox["\[Epsilon]", "3"], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}], "+", 
          RowBox[{"96", " ", 
           SuperscriptBox["r", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "-", 
             RowBox[{"5", " ", "r", " ", "rh"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["rh", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Epsilon]", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
          RowBox[{"64", " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"8", " ", 
              SuperscriptBox["r", "3"]}], "-", 
             RowBox[{"32", " ", 
              SuperscriptBox["r", "2"], " ", "rh"}], "+", 
             RowBox[{"39", " ", "r", " ", 
              SuperscriptBox["rh", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox["rh", "3"]}]}], ")"}], " ", 
           SuperscriptBox["\[Epsilon]", "3"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], "3"]}]}], ")"}]}], 
       ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], ",", 
   "\[Phi]", ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.868478206928956*^9, 3.868478213327132*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"93ae0edd-f3c4-4ac0-bf5e-73a15380295c"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8684782921292458`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"9502303e-d56d-46bd-be89-2ab353a6918b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Series", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868478061969829*^9, 3.8684780762180967`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a992b241-7539-4023-a154-adb7e0f3ad5a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "r"}], "-", "rh"}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"(", 
     RowBox[{"r", "-", "rh"}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"12", " ", 
       SuperscriptBox["rh", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox["r", "3"], " ", "rh", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
      RowBox[{"20", " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["rh", "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
      RowBox[{
       SuperscriptBox["r", "6"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["r", "5"], " ", "rh", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "4"]}], "-", 
      RowBox[{
       SuperscriptBox["r", "4"], " ", 
       SuperscriptBox["rh", "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "4"]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["r", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"r", "-", "rh"}], ")"}]}]], "+", 
  RowBox[{
   SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "r", "]"}]}]], "Output",
 CellChangeTimes->{{3.868478070249009*^9, 3.86847808311526*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"6f767bc9-294d-461c-8a81-610955c52b7b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rulehorizon", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nn", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", 
        RowBox[{"Sum", "[", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["nn", "j"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ss", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["ss", "j"], "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\[Phi]", " ", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "j"], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "->", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], ",", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "j"], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"r", "-", "rh"}], ")"}], "j"]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", " ", 
          "r"}], "]"}]}], "]"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866989149869413*^9, 3.866989280309387*^9}, {
  3.866989314399839*^9, 3.866989354107645*^9}, {3.8669894145637493`*^9, 
  3.866989416721031*^9}, {3.866989597267037*^9, 3.866989597573399*^9}, {
  3.8689636054460773`*^9, 3.8689636230853033`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"2fa3ccc6-f36f-4de3-9f55-56744c1ec546"],

Cell[CellGroupData[{

Cell["Coefficients Near Horizon:", "Subsection",
 CellChangeTimes->{{3.868396795605669*^9, 
  3.868396807022821*^9}},ExpressionUUID->"621ed0a5-d6da-4160-8df8-\
42baaa6d697a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"odesys", "/.", "rulehorizon"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"Series", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "rh", ",", "1"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"coeffsrule", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     SubsuperscriptBox["\[Phi]", "1", "2"], "->", " ", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rh", "3"]}], " ", 
        SubscriptBox["\[Phi]", "1"]}], "-", 
       RowBox[{"12", " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["rh", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[Beta]", "\[Prime]",
         MultilineFunction->None], "[", 
        SubscriptBox["\[Phi]", "0"], "]"}]}]]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "//", "Simplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Phi]", "2"], "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "80"}], " ", 
          SuperscriptBox["rh", "3"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
         RowBox[{"64", " ", 
          SuperscriptBox["rh", "2"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
         RowBox[{"12", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"7", " ", 
             SuperscriptBox["rh", "2"]}], "-", 
            RowBox[{"12", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "5"], "+", 
            RowBox[{"48", " ", "rh", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox["rh", "3"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rh", "4"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
           RowBox[{"96", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
        ")"}]}]}], "}"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868396826147756*^9, 3.868396849918255*^9}, {
  3.8683969670378437`*^9, 3.8683969859055567`*^9}, {3.8683970383203*^9, 
  3.868397044250245*^9}, {3.868397089336754*^9, 3.868397113488892*^9}, {
  3.868397169119562*^9, 3.8683971928640747`*^9}, {3.868397297014398*^9, 
  3.8683973827605743`*^9}, {3.868397480716022*^9, 3.868397480832529*^9}, {
  3.868397528408719*^9, 3.868397533127055*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"6f7a1333-e554-487c-9ab4-031bd1b18a5c"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"rh", "+", 
        RowBox[{"4", " ", 
         SubscriptBox["\[Phi]", "1"], " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"r", "-", "rh"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       SubscriptBox["ss", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"rh", "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Phi]", "1"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"]}], "-", 
      FractionBox[
       RowBox[{"72", " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}], "rh"], "+", 
      RowBox[{"4", " ", 
       SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
       RowBox[{
        SuperscriptBox["\[Beta]", "\[Prime]",
         MultilineFunction->None], "[", 
        SubscriptBox["\[Phi]", "0"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rh", "2"], "+", 
         RowBox[{"24", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"12", " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "80"}], " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", 
               SuperscriptBox["rh", "2"]}], "-", 
              RowBox[{"12", " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "5"], "+", 
              RowBox[{"48", " ", "rh", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "3"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rh", "5"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["rh", "4"], " ", 
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
         RowBox[{"96", " ", "rh", " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Phi]", "0"], "]"}]}]], 
       RowBox[{
        SubscriptBox["\[Phi]", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rh", "4"], "+", 
          RowBox[{"48", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"192", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"80", " ", 
                SuperscriptBox["rh", "3"], " ", 
                SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
               RowBox[{"64", " ", 
                SuperscriptBox["rh", "2"], " ", 
                SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", 
                  SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
               RowBox[{"12", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "7"}], " ", 
                   SuperscriptBox["rh", "2"]}], "+", 
                  RowBox[{"12", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                SubscriptBox["\[Phi]", "1"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["rh", "5"], "+", 
                  RowBox[{"48", " ", "rh", " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["rh", "3"], " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                    SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], 
              ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "6"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "5"], " ", 
              SubscriptBox["\[Phi]", "1"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}]}], 
         ")"}]}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.868396830779805*^9, 3.8683968504332237`*^9}, {
   3.868396959397595*^9, 3.868396986591711*^9}, {3.868397041344277*^9, 
   3.868397044603455*^9}, {3.868397110857274*^9, 3.868397113768283*^9}, 
   3.868397193372365*^9, {3.8683973049391317`*^9, 3.868397312421626*^9}, {
   3.8683973446986437`*^9, 3.868397383043962*^9}, 3.8683974856742077`*^9, 
   3.868397538352797*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"06199f02-b60a-49b9-8b46-08e47f817017"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeffsrule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["ss", "1"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"rh", "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["ss", "2"], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12288", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "5"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "6"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "-", 
              RowBox[{"288", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "2"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"4", " ", "rh", " ", 
            SubsuperscriptBox["\[Phi]", "1", "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "+", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "-", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "2"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "96"}], " ", 
               SuperscriptBox["rh", "6"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
              RowBox[{"4608", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "4"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"5", " ", 
                  SuperscriptBox["rh", "2"]}], "-", 
                 RowBox[{"6", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["rh", "8"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["rh", "2"], "+", 
                 RowBox[{"24", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}],
            "-", 
           RowBox[{"16", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "6"], "+", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "4"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
              RowBox[{"48", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"7", " ", 
                  SuperscriptBox["rh", "2"]}], "+", 
                 RowBox[{"48", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}]}],
            "+", 
           RowBox[{"288", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["rh", "5"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", 
                 SubscriptBox["\[Phi]", "0"], "]"}], "3"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"7", " ", 
                  SuperscriptBox["rh", "3"]}], "+", 
                 RowBox[{"36", " ", "rh", " ", 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", 
                   SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"32", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"rh", "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Phi]", "1"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "4"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "3"], " ", 
              SubscriptBox["\[Phi]", "1"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", 
                SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
          ")"}]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rh", "3"]}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rh", "6"], "-", 
          RowBox[{"192", " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}]]}], 
       RowBox[{"8", " ", 
        SuperscriptBox["rh", "2"], " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Phi]", "0"], "]"}]}]]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      SubscriptBox["\[Phi]", "2"], "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "80"}], " ", 
          SuperscriptBox["rh", "3"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "3"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
         RowBox[{"64", " ", 
          SuperscriptBox["rh", "2"], " ", 
          SubsuperscriptBox["\[Phi]", "1", "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", 
            SubscriptBox["\[Phi]", "0"], "]"}], "3"]}], "+", 
         RowBox[{"12", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", 
           SubscriptBox["\[Phi]", "0"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"7", " ", 
             SuperscriptBox["rh", "2"]}], "-", 
            RowBox[{"12", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Phi]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "5"], "+", 
            RowBox[{"48", " ", "rh", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", 
               SubscriptBox["\[Phi]", "0"], "]"}], "2"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox["rh", "3"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rh", "4"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["rh", "3"], " ", 
            SubscriptBox["\[Phi]", "1"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", 
             SubscriptBox["\[Phi]", "0"], "]"}]}], "-", 
           RowBox[{"96", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", 
              SubscriptBox["\[Phi]", "0"], "]"}], "2"]}]}], ")"}]}], 
        ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868396940806965*^9, 3.8683969497389307`*^9}, {
  3.868397009036913*^9, 3.868397009287722*^9}, {3.868397258749552*^9, 
  3.8683972701782303`*^9}, {3.868397568775285*^9, 3.868397575972232*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e7e5e68b-3358-46f5-bb67-09546f5d9fc6"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shift-Symmetric-Theory", "Section",
 CellChangeTimes->{{3.868397967278953*^9, 3.8683979696821747`*^9}, {
  3.8689588200191936`*^9, 
  3.868958825508148*^9}},ExpressionUUID->"085a3ebb-c2b2-4bde-8b77-\
d029d80f42e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"genseries$ss", "[", 
   RowBox[{"\[Epsilon]_", ",", "rh_", ",", "\[Phi]0_", ",", "l_"}], " ", 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Phi]1", ",", "\[Phi]2", ",", "ss1", ",", "ss2", ",", "rulebeta", ",", 
      "\[Phi]max"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rulebeta", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", "->", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", " ", 
          RowBox[{
           SuperscriptBox["l", "2"], "*", "x"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]1", " ", "=", " ", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["rh", "3"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rh", "6"], "-", 
           RowBox[{"192", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}]]}], 
        RowBox[{"8", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", "\[Phi]0", "]"}]}]], "/.", 
       "rulebeta"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ss1", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"rh", "+", 
            RowBox[{"4", " ", "\[Phi]1", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
           ")"}]}]]}], "/.", "rulebeta"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Phi]2", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "80"}], " ", 
           SuperscriptBox["rh", "3"], " ", 
           SuperscriptBox["\[Phi]1", "3"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
          RowBox[{"64", " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox["\[Phi]1", "4"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"]}], "+", 
          RowBox[{"12", " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"7", " ", 
              SuperscriptBox["rh", "2"]}], "-", 
             RowBox[{"12", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"\[Phi]1", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "5"], "+", 
             RowBox[{"48", " ", "rh", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
             RowBox[{"24", " ", 
              SuperscriptBox["rh", "3"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
            ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"4", " ", 
          SuperscriptBox["rh", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "4"], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
           ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ss2", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"12288", " ", 
             SuperscriptBox["rh", "2"], " ", 
             SuperscriptBox["\[Phi]1", "5"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "6"]}], "-", 
            
            RowBox[{"64", " ", 
             SuperscriptBox["rh", "3"], " ", 
             SuperscriptBox["\[Phi]1", "4"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["rh", "4"], "-", 
               RowBox[{"288", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
               "+", 
               RowBox[{"24", " ", 
                SuperscriptBox["rh", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4", " ", "rh", " ", 
             SuperscriptBox["\[Phi]1", "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["rh", "4"], "+", 
               RowBox[{"48", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["rh", "4"], "-", 
               RowBox[{"48", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
               "+", 
               RowBox[{"24", " ", 
                SuperscriptBox["rh", "2"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"\[Phi]1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "96"}], " ", 
                SuperscriptBox["rh", "6"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
               "-", 
               RowBox[{"4608", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"5", " ", 
                   SuperscriptBox["rh", "2"]}], "-", 
                  RowBox[{"6", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                 ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["rh", "8"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["rh", "2"], "+", 
                  RowBox[{"24", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                 ")"}]}]}], ")"}]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["rh", "2"], " ", 
             SuperscriptBox["\[Phi]1", "3"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["rh", "6"], "+", 
               RowBox[{"24", " ", 
                SuperscriptBox["rh", "4"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
               RowBox[{"48", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"7", " ", 
                   SuperscriptBox["rh", "2"]}], "+", 
                  RowBox[{"48", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                 ")"}]}]}], ")"}]}], "+", 
            RowBox[{"288", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["rh", "5"], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"7", " ", 
                   SuperscriptBox["rh", "3"]}], "+", 
                  RowBox[{"36", " ", "rh", " ", 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                 ")"}]}]}], ")"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"32", " ", 
            SuperscriptBox["rh", "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"rh", "+", 
               RowBox[{"4", " ", "\[Phi]1", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}], 
             "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "4"], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
              RowBox[{"96", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
             ")"}]}], ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "+", " ", 
        RowBox[{"ss1", "*", "\[Epsilon]"}], " ", "+", " ", 
        RowBox[{"ss2", "*", 
         SuperscriptBox["\[Epsilon]", "2"]}]}], ",", " ", 
       RowBox[{"\[Phi]1", " ", "+", " ", 
        RowBox[{"2", "*", 
         RowBox[{"(", "\[Epsilon]", ")"}], "*", "\[Phi]2"}]}], ",", " ", 
       RowBox[{"\[Phi]0", " ", "+", " ", 
        RowBox[{"\[Epsilon]", "*", "\[Phi]1"}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox["\[Epsilon]", "2"], "*", "\[Phi]2"}]}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868959256616769*^9, 3.8689592577631073`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f00e1950-161e-487e-9646-2ffea09af278"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["192", 
    RowBox[{"1", "/", "4"}]], "2"], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8689709753995447`*^9, 3.868970988289403*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5a2b2207-083e-41ff-8c6d-5103c5902323"],

Cell[BoxData["1.8612097182041991`"], "Output",
 CellChangeTimes->{{3.868970979622365*^9, 3.868970988634688*^9}, 
   3.869145055113091*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"6cf61a87-e9ca-4d0d-b20d-4549b6f66286"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol$ode$ss", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]", ",", "ssval", ",", "Qval", ",", "phival", ",", 
      "valshorizon", ",", "ndsol", ",", "rend"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "=", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rend", " ", "=", " ", 
      RowBox[{
       SuperscriptBox["10", "5"], "*", "rh"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["rh", "6"], "-", 
         RowBox[{"192", " ", 
          SuperscriptBox["rh", "2"], " ", 
          SuperscriptBox["l", "4"]}]}], "<=", "0"}], ",", " ", 
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"valshorizon", " ", "=", " ", 
         RowBox[{"genseries$ss", "[", 
          RowBox[{"\[Epsilon]", ",", "rh", ",", "\[Phi]0", ",", "l"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ssval", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Qval", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phival", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", " ", "=", " ", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["r", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["Q", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
                
                RowBox[{"4", " ", 
                 RowBox[{"ss", "[", "r", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"r", "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                  ")"}]}]], "+", 
               RowBox[{
                SuperscriptBox["ss", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "12"}], " ", 
                   SuperscriptBox["l", "2"], " ", "r", " ", 
                   SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "-", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["l", "4"], " ", 
                   SuperscriptBox["r", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], "2"]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["l", "2"], " ", 
                   SuperscriptBox["r", "3"], " ", 
                   SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"25", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}]}], ")"}]}], "+", 
                  RowBox[{"32", " ", 
                   SuperscriptBox["l", "4"], " ", 
                   SuperscriptBox["r", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "12"}], "+", 
                    RowBox[{"44", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"53", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
                    RowBox[{"21", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"Q", "[", "r", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox["r", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["l", "2"], " ", "r", " ", 
                   SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1024"}], " ", 
                    SuperscriptBox["l", "4"]}], "-", 
                    SuperscriptBox["r", "4"], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4352", " ", 
                    SuperscriptBox["l", "4"]}], "+", 
                    SuperscriptBox["r", "4"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"6144", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
                    RowBox[{"2880", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}]}]}], ")"}],
                 "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["r", "5"], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"5", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}]}], ")"}]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "6"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8"}], "+", 
                    RowBox[{"32", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"39", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
                    RowBox[{"15", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"6", " ", 
                    SuperscriptBox["r", "4"]}], "-", 
                    RowBox[{"7", " ", 
                    SuperscriptBox["r", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}]}]}], 
                   ")"}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["Q", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Q", "[", "r", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ss", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", " ", 
              "ssval"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Q", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], " ", "==", 
              " ", "Qval"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", 
              "phival"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"ss", ",", "Q", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", 
             RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], ",", " ", "rend"}], 
            "}"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", " ", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<StiffnessSwitching\>\"", ",", 
              RowBox[{"\"\<NonstiffTest\>\"", "->", "False"}]}], "}"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.868958902484219*^9, 3.8689589357125998`*^9}, {
  3.868959046460966*^9, 3.868959115051379*^9}, {3.868959204321547*^9, 
  3.8689592072431507`*^9}, {3.868959261738532*^9, 3.868959344190289*^9}, {
  3.86895941023814*^9, 3.868959429387137*^9}, {3.8689594745758877`*^9, 
  3.8689595575553226`*^9}, {3.868959662877234*^9, 3.86895967831168*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"dd578f29-3a51-4286-8ede-e1efe45fb5f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"get$diff$val", "[", 
   RowBox[{
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"mh_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ans", ",", "rh", ",", "rvals", ",", "diffvals$ss", ",", "madm"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", " ", "=", " ", 
      RowBox[{"2", "*", "mh"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ans", " ", "=", " ", 
      RowBox[{"sol$ode$ss", "[", 
       RowBox[{"1", ",", "l", ",", "rh"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rvals", " ", "=", " ", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Subdivide", "[", 
          RowBox[{"rh", ",", " ", 
           RowBox[{"10", "*", "rh"}], ",", "100"}], "]"}], ",", 
         RowBox[{"Subdivide", "[", 
          RowBox[{
           RowBox[{"10", "*", "rh"}], ",", " ", 
           RowBox[{"100", "*", "rh"}], ",", "100"}], "]"}], ",", 
         RowBox[{"Subdivide", "[", 
          RowBox[{
           RowBox[{"100", "*", "rh"}], ",", " ", 
           RowBox[{"1000", "*", "rh"}], ",", "100"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Subdivide", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["10", "3"], "rh"}], ",", " ", 
           RowBox[{
            SuperscriptBox["10", "4"], "*", "rh"}], ",", "10"}], "]"}], ",", 
         RowBox[{"Subdivide", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["10", "4"], "rh"}], ",", " ", 
           RowBox[{
            SuperscriptBox["10", "5"], "*", "rh"}], " ", ",", "10"}], "]"}]}],
         "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diffvals$ss", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"rvals", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ss", "[", 
                 RowBox[{"rvals", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}], "/.", "ans"}], ")"}],
               "2"]}], 
            RowBox[{"2", "*", "mh"}]]}], "]"}], "*", "100"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"1", " ", 
           RowBox[{"Length", "[", "rvals", "]"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"madm", " ", "=", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ss", "[", 
           RowBox[{
            SuperscriptBox["10", "5"], "*", "rh"}], "]"}], ")"}], "2"], "*", 
        SuperscriptBox["10", "5"], "*", 
        FractionBox["rh", "2"]}], "/.", "ans"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Max", "[", "diffvals$ss", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"1", "-", 
          FractionBox["madm", "mh"]}], "]"}], "*", "100"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8689598433156147`*^9, 3.8689598532122602`*^9}, {
  3.868959911147642*^9, 3.868960323585115*^9}, {3.8689695530840197`*^9, 
  3.8689696740842457`*^9}, {3.8689702508222303`*^9, 3.868970257231093*^9}, {
  3.869145033616268*^9, 3.869145050396553*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e3935f36-e7ec-4d79-b4c9-c04465e117a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lvals", " ", "=", " ", 
  RowBox[{"Subdivide", "[", 
   RowBox[{"0.1", ",", "1", ",", "100"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mvals", "[", "l_", "]"}], ":=", " ", 
   RowBox[{"Subdivide", "[", 
    RowBox[{
     RowBox[{"1.865", "*", "l"}], ",", "8", ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mytab", "[", "l_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "mv", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mv", " ", "=", " ", 
      RowBox[{"Mvals", "[", "l", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"l", ",", 
         RowBox[{"mv", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"get$diff$val", "[", 
           RowBox[{"l", ",", " ", 
            RowBox[{"mv", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "mv", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.868963904405594*^9, 3.8689639491736813`*^9}, {
  3.868963985095058*^9, 3.868964117665053*^9}, {3.868964148324437*^9, 
  3.8689641848825817`*^9}, {3.8689651091459923`*^9, 3.868965111066945*^9}, {
  3.8689696632289877`*^9, 3.868969663835091*^9}, {3.8689700135637627`*^9, 
  3.868970013692395*^9}, {3.8689709447792683`*^9, 3.868970944899179*^9}, {
  3.8689710341463003`*^9, 3.868971052133675*^9}, {3.868971294422503*^9, 
  3.8689712948716707`*^9}, {3.8689736610709352`*^9, 3.8689736633490143`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"6bbb3307-967d-465e-9a4f-dfbfc8da6501"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1`", ",", "0.109`", ",", "0.11800000000000001`", ",", "0.127`", ",", 
   "0.136`", ",", "0.14500000000000002`", ",", "0.154`", ",", "0.163`", ",", 
   "0.17200000000000001`", ",", "0.181`", ",", "0.19`", ",", "0.199`", ",", 
   "0.20800000000000002`", ",", "0.21700000000000003`", ",", 
   "0.22600000000000003`", ",", "0.235`", ",", "0.244`", ",", "0.253`", ",", 
   "0.262`", ",", "0.271`", ",", "0.28`", ",", "0.28900000000000003`", ",", 
   "0.29800000000000004`", ",", "0.30700000000000005`", ",", "0.316`", ",", 
   "0.325`", ",", "0.334`", ",", "0.343`", ",", "0.35200000000000004`", ",", 
   "0.361`", ",", "0.37`", ",", "0.379`", ",", "0.388`", ",", "0.397`", ",", 
   "0.406`", ",", "0.41500000000000004`", ",", "0.424`", ",", "0.433`", ",", 
   "0.442`", ",", "0.451`", ",", "0.46`", ",", "0.46900000000000003`", ",", 
   "0.478`", ",", "0.487`", ",", "0.496`", ",", "0.505`", ",", "0.514`", ",", 
   "0.523`", ",", "0.532`", ",", "0.541`", ",", "0.55`", ",", "0.559`", ",", 
   "0.5680000000000001`", ",", "0.5770000000000001`", ",", 
   "0.5860000000000001`", ",", "0.5950000000000001`", ",", 
   "0.6040000000000001`", ",", "0.6130000000000001`", ",", "0.622`", ",", 
   "0.631`", ",", "0.64`", ",", "0.649`", ",", "0.658`", ",", "0.667`", ",", 
   "0.676`", ",", "0.685`", ",", "0.6940000000000001`", ",", 
   "0.7030000000000001`", ",", "0.7120000000000001`", ",", 
   "0.7210000000000001`", ",", "0.7300000000000001`", ",", "0.739`", ",", 
   "0.748`", ",", "0.757`", ",", "0.766`", ",", "0.775`", ",", "0.784`", ",", 
   "0.793`", ",", "0.802`", ",", "0.811`", ",", "0.8200000000000001`", ",", 
   "0.8290000000000001`", ",", "0.8380000000000001`", ",", 
   "0.8470000000000001`", ",", "0.856`", ",", "0.865`", ",", "0.874`", ",", 
   "0.883`", ",", "0.892`", ",", "0.901`", ",", "0.91`", ",", "0.919`", ",", 
   "0.928`", ",", "0.937`", ",", "0.9460000000000001`", ",", 
   "0.9550000000000001`", ",", "0.964`", ",", "0.973`", ",", "0.982`", ",", 
   "0.991`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.868963916819854*^9, 3.868963921113381*^9}, 
   3.86896403109011*^9, 3.868964185561391*^9, 3.868965111619233*^9, 
   3.868969569688797*^9, {3.8689696553684483`*^9, 3.868969675437916*^9}, 
   3.868969709582273*^9, 3.868970014277976*^9, 3.868970267274973*^9, 
   3.868970945281005*^9, {3.8689710356274033`*^9, 3.8689710524338007`*^9}, 
   3.868971295512643*^9, 3.8689736639508142`*^9, 3.8691450583032427`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ae9337b4-9393-4e7e-8576-07705a7bfdc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subdivide", "[", 
  RowBox[{"1.87", ",", "8", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.868971116136619*^9, 3.868971122229237*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"d0a53c62-5e31-4455-b070-bbe4f98d9bca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.87`", ",", "1.9926`", ",", "2.1152`", ",", "2.2378`", ",", 
   "2.3604000000000003`", ",", "2.483`", ",", "2.6056`", ",", "2.7282`", ",", 
   "2.8508`", ",", "2.9734`", ",", "3.096`", ",", "3.2186000000000003`", ",", 
   "3.3411999999999997`", ",", "3.4638`", ",", "3.5864000000000003`", ",", 
   "3.7089999999999996`", ",", "3.8316`", ",", "3.9542`", ",", "4.0768`", ",",
    "4.1994`", ",", "4.322`", ",", "4.4446`", ",", "4.5672`", ",", "4.6898`", 
   ",", "4.8124`", ",", "4.9350000000000005`", ",", "5.0576`", ",", "5.1802`",
    ",", "5.3028`", ",", "5.4254`", ",", "5.548`", ",", "5.6706`", ",", 
   "5.793200000000001`", ",", "5.9158`", ",", "6.0384`", ",", 
   "6.1610000000000005`", ",", "6.2836`", ",", "6.4062`", ",", "6.5288`", ",",
    "6.651400000000001`", ",", "6.774`", ",", "6.8966`", ",", "7.0192`", ",", 
   "7.1418`", ",", "7.2644`", ",", "7.3870000000000005`", ",", "7.5096`", ",",
    "7.6322`", ",", "7.7547999999999995`", ",", "7.8774`", ",", "8.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.868971122742464*^9, 3.868971296401987*^9, 
  3.868973665052362*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"8ab3f48f-4dc5-4c32-9c38-6ee6023bba88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"get$diff$val", "[", 
  RowBox[{"0.1", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.868969534360817*^9, 3.868969543157319*^9}, {
  3.8689697010297327`*^9, 3.8689697013523693`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"0485d8b6-6abb-49b1-86ec-605ddefe5f9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.01943882589113821`", ",", "2.990691694293446`*^-6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.868969544235848*^9, 3.868969571350052*^9}, {
   3.8689696661489162`*^9, 3.86896971089854*^9}, 3.868970016014813*^9, 
   3.868970269107746*^9, 3.868970946899576*^9, {3.86897103826609*^9, 
   3.868971054199065*^9}, 3.868971300791088*^9, 3.868973665641158*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"883ad910-1c74-4526-a877-163f86ec2f3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["list"], "Input",
 CellChangeTimes->{{3.8689711324364862`*^9, 3.868971132996359*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"5e7a60fe-f0d3-4e42-9486-c7a6be1722fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "0.1865`", ",", "5.781917597653385`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "0.34277`", ",", "0.4471606529516947`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.1`", ",", "0.49904000000000004`", ",", 
             "0.09892346963089604`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "0.65531`", ",", "0.033232573506203344`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "0.81158`", ",", "0.014121596366978295`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.1`", ",", "0.9678500000000001`", ",", "0.01836178777739894`"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "1.12412`", ",", "0.01690042456222729`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.1`", ",", "1.2803900000000001`", ",", "0.02230413641706175`"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "1.43666`", ",", "0.017580101887360033`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "1.59293`", ",", "0.023904805857788425`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "1.7492`", ",", "0.023987237628475544`"}], 
            "}"}], ",", 
           TemplateBox[{"2580"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
            "1.`", ",", "6.895700000000001`", ",", "0.027101425615105867`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "7.0184`", ",", "0.02525453524120369`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "7.1411`", ",", "0.02356236132805556`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "7.2638`", ",", "0.022009603600348093`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "7.3865`", ",", "0.02058269894815723`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "7.5092`", ",", "0.019269599543680904`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "7.6319`", ",", "0.018059582317286882`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "7.7546`", ",", "0.016943085014542447`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "7.8773`", ",", "0.015911564724735427`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.`", ",", "8.`", ",", "0.014957375518132032`"}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 31108525299113959651, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 31108525299113959651, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 31108525299113959651, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31108525299113959651 === $SessionID, 
   Out[127], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8689711333003273`*^9, 3.868971301449439*^9, 
  3.868973666221394*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"50fb284c-242a-4ee2-bdab-1e1f3603b10e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", " ", "=", " ", 
   RowBox[{"mytab", "[", "0.1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868964261971117*^9, 3.868964268221671*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"4170aa89-6aec-49f1-8e60-a512399dc4c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"j", "=", "2"}], ",", 
    RowBox[{"j", "<=", 
     RowBox[{"Length", "[", "lvals", "]"}]}], ",", " ", 
    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"list", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"list", ",", 
       RowBox[{"mytab", "[", 
        RowBox[{"lvals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868964220456792*^9, 3.868964302173677*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3886ef77-fa9b-411f-ba02-b2068514bd19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", " ", 
  RowBox[{
  "\"\</Users/abhi/Work/Projects/Hyperbolitcity-Gravitational-Collapse/Paper/\
Data/data-shift-symm.txt\>\"", ",", "list", ",", "\"\<Table\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8689643114642*^9, 3.8689643857266006`*^9}, {
  3.868965142138904*^9, 3.868965142405615*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a73e7036-59ec-4512-a40c-450d6e0c823b"],

Cell[BoxData["\<\"/Users/abhi/Work/Projects/Hyperbolitcity-Gravitational-\
Collapse/Paper/Data/data-shift-symm.txt\"\>"], "Output",
 CellChangeTimes->{{3.868964312372685*^9, 3.868964322948607*^9}, {
   3.868964362534552*^9, 3.868964386352578*^9}, 3.868965143809379*^9, 
   3.8689697246468153`*^9, 3.8689700302538767`*^9, 3.868971070037723*^9, 
   3.868971316193056*^9, 3.868973717778998*^9, 3.869145117216037*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"56a834e1-14f9-4383-af4f-1d5b67260726"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gaussian Theory", "Section",
 CellChangeTimes->{{3.868397967278953*^9, 
  3.8683979696821747`*^9}},ExpressionUUID->"cdb01500-2fc1-4960-92a2-\
58f7c71ebcdc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"genseries", "[", 
    RowBox[{
    "\[Epsilon]_", ",", "rh_", ",", "\[Phi]0_", ",", "\[Mu]_", ",", "l_"}], 
    " ", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Phi]1", ",", "\[Phi]2", ",", "ss1", ",", "ss2", ",", "rulebeta", ",",
        "\[Phi]max"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rulebeta", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", "->", " ", 
         RowBox[{"Function", "[", 
          RowBox[{"x", ",", " ", 
           RowBox[{
            SuperscriptBox["l", "2"], "*", 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"1", "-", " ", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], "*", 
                 SuperscriptBox["x", "2"]}], "]"}]}], ")"}], 
             RowBox[{"2", "\[Mu]"}]]}]}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]1", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["rh", "3"]}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["rh", "6"], "-", 
            RowBox[{"192", " ", 
             SuperscriptBox["rh", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}]]}], 
         
         RowBox[{"8", " ", 
          SuperscriptBox["rh", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", "\[Phi]0", "]"}]}]], "/.", 
        "rulebeta"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ss1", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"rh", "+", 
             RowBox[{"4", " ", "\[Phi]1", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
            ")"}]}]]}], "/.", "rulebeta"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Phi]2", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "80"}], " ", 
            SuperscriptBox["rh", "3"], " ", 
            SuperscriptBox["\[Phi]1", "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox["\[Phi]1", "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", 
               SuperscriptBox["rh", "2"]}], "-", 
              RowBox[{"12", " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}]}],
            "+", 
           RowBox[{"\[Phi]1", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["rh", "5"], "+", 
              RowBox[{"48", " ", "rh", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
              "-", 
              RowBox[{"24", " ", 
               SuperscriptBox["rh", "3"], " ", 
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
             ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           SuperscriptBox["rh", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "4"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
             RowBox[{"96", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
            ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ss2", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"12288", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox["\[Phi]1", "5"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "6"]}], "-", 
             RowBox[{"64", " ", 
              SuperscriptBox["rh", "3"], " ", 
              SuperscriptBox["\[Phi]1", "4"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "-", 
                RowBox[{"288", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "2"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4", " ", "rh", " ", 
              SuperscriptBox["\[Phi]1", "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "+", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}],
                ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "4"], "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "2"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"\[Phi]1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "96"}], " ", 
                 SuperscriptBox["rh", "6"], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], 
                "-", 
                RowBox[{"4608", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "4"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"5", " ", 
                    SuperscriptBox["rh", "2"]}], "-", 
                   RowBox[{"6", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["rh", "8"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["rh", "2"], "+", 
                   RowBox[{"24", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}], "-", 
             RowBox[{"16", " ", 
              SuperscriptBox["rh", "2"], " ", 
              SuperscriptBox["\[Phi]1", "3"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["rh", "6"], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["rh", "4"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
                RowBox[{"48", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"7", " ", 
                    SuperscriptBox["rh", "2"]}], "+", 
                   RowBox[{"48", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}], "+", 
             RowBox[{"288", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["rh", "5"], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Beta]", "\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"7", " ", 
                    SuperscriptBox["rh", "3"]}], "+", 
                   RowBox[{"36", " ", "rh", " ", 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"32", " ", 
             SuperscriptBox["rh", "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"rh", "+", 
                RowBox[{"4", " ", "\[Phi]1", " ", 
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}],
               "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["rh", "4"], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
                RowBox[{
                 SuperscriptBox["\[Beta]", "\[Prime]",
                  MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
               RowBox[{"96", " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Beta]", "\[Prime]",
                   MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
              ")"}]}], ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"ss1", "*", "\[Epsilon]"}], " ", "+", " ", 
         RowBox[{"ss2", "*", 
          SuperscriptBox["\[Epsilon]", "2"]}]}], ",", " ", 
        RowBox[{"\[Phi]1", " ", "+", " ", 
         RowBox[{"2", "*", 
          RowBox[{"(", "\[Epsilon]", ")"}], "*", "\[Phi]2"}]}], ",", " ", 
        RowBox[{"\[Phi]0", " ", "+", " ", 
         RowBox[{"\[Epsilon]", "*", "\[Phi]1"}], " ", "+", " ", 
         RowBox[{
          SuperscriptBox["\[Epsilon]", "2"], "*", "\[Phi]2"}]}]}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.868397769946203*^9, 3.868397843410778*^9}, {
   3.868397952994532*^9, 3.868398042487883*^9}, {3.868398084147476*^9, 
   3.868398197812793*^9}, {3.868398288850016*^9, 3.8683983380612373`*^9}, {
   3.8683983906976*^9, 3.8683984488143387`*^9}, {3.8683984848532887`*^9, 
   3.868398564396184*^9}, {3.868398609905776*^9, 3.8683986630769663`*^9}, {
   3.868398734544733*^9, 3.868398734728674*^9}, 3.8683988734689407`*^9, {
   3.86839890635949*^9, 3.868398935022238*^9}, {3.868399087012645*^9, 
   3.868399118102948*^9}, {3.868399189085883*^9, 3.868399243676395*^9}, {
   3.868399286750311*^9, 3.868399299642791*^9}, {3.868400486649914*^9, 
   3.8684005043367443`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c13bbe28-e01b-450e-a83d-bbad15337666"],

Cell[BoxData[
 RowBox[{
  RowBox[{"genseriesdecoupled", "[", 
   RowBox[{
   "\[Epsilon]_", ",", "rh_", ",", "\[Phi]0_", ",", "\[Mu]_", ",", "l_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "rulebeta"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rulebeta", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", "->", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", " ", 
          RowBox[{
           SuperscriptBox["l", "2"], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Mu]"}], "*", 
                SuperscriptBox["x", "2"]}], "]"}]}], ")"}], 
            RowBox[{"2", "\[Mu]"}]]}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]1", " ", "=", " ", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["rh", "3"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rh", "6"], "-", 
           RowBox[{"192", " ", 
            SuperscriptBox["rh", "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}]]}], 
        RowBox[{"8", " ", 
         SuperscriptBox["rh", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "\[Prime]",
           MultilineFunction->None], "[", "\[Phi]0", "]"}]}]], "/.", 
       "rulebeta"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Phi]2", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "80"}], " ", 
           SuperscriptBox["rh", "3"], " ", 
           SuperscriptBox["\[Phi]1", "3"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
          RowBox[{"64", " ", 
           SuperscriptBox["rh", "2"], " ", 
           SuperscriptBox["\[Phi]1", "4"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "\[Prime]",
              MultilineFunction->None], "[", "\[Phi]0", "]"}], "3"]}], "+", 
          RowBox[{"12", " ", 
           RowBox[{
            SuperscriptBox["\[Beta]", "\[Prime]",
             MultilineFunction->None], "[", "\[Phi]0", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"7", " ", 
              SuperscriptBox["rh", "2"]}], "-", 
             RowBox[{"12", " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"\[Phi]1", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rh", "5"], "+", 
             RowBox[{"48", " ", "rh", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "\[Prime]",
                 MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}], "-", 
             RowBox[{"24", " ", 
              SuperscriptBox["rh", "3"], " ", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}]}]}], 
            ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"4", " ", 
          SuperscriptBox["rh", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["rh", "4"], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["rh", "3"], " ", "\[Phi]1", " ", 
             RowBox[{
              SuperscriptBox["\[Beta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Phi]0", "]"}]}], "-", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "\[Phi]0", "]"}], "2"]}]}], 
           ")"}]}], ")"}]}], " ", "/.", "rulebeta"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]1", " ", "+", " ", 
        RowBox[{"2", "*", 
         RowBox[{"(", "\[Epsilon]", ")"}], "*", "\[Phi]2"}]}], ",", " ", 
       RowBox[{"\[Phi]0", " ", "+", " ", 
        RowBox[{"\[Epsilon]", "*", "\[Phi]1"}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox["\[Epsilon]", "2"], "*", "\[Phi]2"}]}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868475112979498*^9, 3.868475169887384*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0a2f1910-35ab-4f9b-a382-69713691b401"],

Cell[BoxData[
 RowBox[{
  RowBox[{"genseriesdecoupled1", "[", 
   RowBox[{
   "\[Epsilon]_", ",", "rh_", ",", "\[Phi]0_", ",", "\[Mu]_", ",", "l_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "rulebeta"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rulebeta", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", "->", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", " ", 
          RowBox[{
           SuperscriptBox["l", "2"], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Mu]"}], "*", 
                SuperscriptBox["x", "2"]}], "]"}]}], ")"}], 
            RowBox[{"2", "\[Mu]"}]]}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]1", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"12", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", "\[Phi]0", "]"}]}], 
         SuperscriptBox["rh", "3"]]}], "/.", "rulebeta"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Phi]1", " ", ",", " ", 
       RowBox[{"\[Phi]0", " ", "+", " ", 
        RowBox[{"\[Epsilon]", "*", "\[Phi]1"}]}]}], " ", "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8684860401656837`*^9, {3.868486118328766*^9, 3.868486137392768*^9}, {
   3.868486387563013*^9, 3.8684863960870113`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"cfaad6b5-17ec-456f-a9b8-9d984a75714a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesoldecoupled", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]", ",", "ssval", ",", "Qval", ",", "phival", ",", 
      "valshorizon", ",", "ndsol"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "=", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"192", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
            SuperscriptBox["\[Phi]0", "2"]}]], " ", 
          SuperscriptBox["l", "4"], " ", 
          SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", " ", 
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"valshorizon", " ", "=", " ", 
         RowBox[{"genseriesdecoupled", "[", 
          RowBox[{
          "\[Epsilon]", ",", "rh", ",", "\[Phi]0", ",", "\[Mu]", ",", "l"}], 
          "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Qval", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phival", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", " ", "=", " ", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Mu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["r", "7"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r"}], "-", "rh"}], ")"}]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["rh", "2"]}], "-", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["rh", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "r"}], "+", "rh"}], ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"25", " ", "r", " ", "rh"}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["rh", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]]}], " ", 
                    SuperscriptBox["r", "6"], " ", "rh"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"32", " ", "r", " ", "rh"}], "+", 
                    RowBox[{"21", " ", 
                    SuperscriptBox["rh", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "6"], " ", "rh", " ", "\[Mu]"}]}], 
                    ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"384", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "4"]}]}], ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Mu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["r", "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "r"}], "-", 
                    RowBox[{"5", " ", "rh"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r"}], "-", 
                    RowBox[{"3", " ", "rh"}]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Mu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r"}], "-", 
                    RowBox[{"3", " ", "rh"}]}], ")"}], " ", "rh", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"r", "-", "rh"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"3", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "8"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"6", " ", "r"}], "-", 
                    RowBox[{"7", " ", "rh"}]}], ")"}], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"5", " ", "r", " ", "rh"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["rh", "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"768", " ", 
                    SuperscriptBox["l", "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "3"]}], "-", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "6"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8", " ", 
                    SuperscriptBox["r", "3"]}], "-", 
                    RowBox[{"32", " ", 
                    SuperscriptBox["r", "2"], " ", "rh"}], "+", 
                    RowBox[{"39", " ", "r", " ", 
                    SuperscriptBox["rh", "2"]}], "-", 
                    RowBox[{"15", " ", 
                    SuperscriptBox["rh", "3"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "3"]}]}], ")"}]}], 
                 ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["Q", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Q", "[", "r", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Q", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], " ", "==", 
              " ", "Qval"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", 
              "phival"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Q", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", 
             RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], ",", " ", "rend"}], 
            "}"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", " ", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<StiffnessSwitching\>\"", ",", 
              RowBox[{"\"\<NonstiffTest\>\"", "->", "False"}]}], "}"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.86847517677584*^9, 3.868475235793375*^9}, {
  3.868475299350608*^9, 3.8684753142976294`*^9}, {3.868475344961132*^9, 
  3.8684753456012897`*^9}, {3.868475533766049*^9, 3.868475533943019*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c730bd40-f5d0-4c72-9346-5e8780fd30de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesoldecoupled1", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]", ",", "ssval", ",", "Qval", ",", "phival", ",", 
      "valshorizon", ",", "ndsol"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "=", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"192", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
            SuperscriptBox["\[Phi]0", "2"]}]], " ", 
          SuperscriptBox["l", "4"], " ", 
          SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", " ", 
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"valshorizon", " ", "=", " ", 
         RowBox[{"genseriesdecoupled1", "[", 
          RowBox[{
          "\[Epsilon]", ",", "rh", ",", "\[Phi]0", ",", "\[Mu]", ",", "l"}], 
          "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Qval", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phival", " ", "=", " ", 
         RowBox[{"valshorizon", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", " ", "=", " ", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Q", "'"}], "[", "r", "]"}], "==", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Mu]"}], " ", 
                   SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "5"], " ", 
                    RowBox[{"Q", "[", "r", "]"}]}], "-", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"], " ", "rh", " ", 
                    RowBox[{"Q", "[", "r", "]"}]}], "+", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["rh", "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}]}], ")"}]}], 
                RowBox[{
                 SuperscriptBox["r", "5"], " ", 
                 RowBox[{"(", 
                  RowBox[{"r", "-", "rh"}], ")"}]}]]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Q", "[", "r", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "==", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Q", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], " ", "==", 
              " ", "Qval"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", 
              "phival"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Q", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", " ", 
             RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], ",", " ", "rend"}], 
            "}"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", " ", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<StiffnessSwitching\>\"", ",", 
              RowBox[{"\"\<NonstiffTest\>\"", "->", "False"}]}], "}"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ndsol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.868486011815113*^9, 3.868486024984552*^9}, 
   3.868486141549467*^9, {3.868486266686376*^9, 3.8684862692409353`*^9}, {
   3.8684863190848503`*^9, 3.8684863445034637`*^9}, {3.868486406214301*^9, 
   3.868486406393125*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c8718020-190e-48f8-bfac-714f1a0ff555"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"odesol", "[", 
    RowBox[{
     RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"l_", "?", "NumericQ"}], ",", 
     RowBox[{"rh_", "?", "NumericQ"}], ",", 
     RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Epsilon]", ",", "ssval", ",", "Qval", ",", "phival", ",", 
       "valshorizon", ",", "ndsol"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]", " ", "=", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["rh", "4"], "-", 
          RowBox[{"192", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
             SuperscriptBox["\[Phi]0", "2"]}]], " ", 
           SuperscriptBox["l", "4"], " ", 
           SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", " ", 
        RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], " ", ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"valshorizon", " ", "=", " ", 
          RowBox[{"genseries", "[", 
           RowBox[{
           "\[Epsilon]", ",", "rh", ",", "\[Phi]0", ",", "\[Mu]", ",", "l"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ssval", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
         
         RowBox[{"Qval", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phival", " ", "=", " ", 
          RowBox[{"valshorizon", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ndsol", " ", "=", " ", 
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["Q", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"4", " ", 
                   RowBox[{"ss", "[", "r", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", "r"}], 
                    "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}]}], ")"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 SuperscriptBox["ss", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "12"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "-", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "5"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"25", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["l", "2"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]]}], " ", 
                    SuperscriptBox["r", "4"]}], "-", 
                    RowBox[{"1024", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"2880", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"32", " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"68", " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "-", 
                    RowBox[{"24", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["l", "2"]}], "-", 
                    RowBox[{"7", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["l", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]]}], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "256"}], " ", 
                    SuperscriptBox["l", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"3", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "5"]}], "-", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", "r", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"96", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox["r", "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"5", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"64", " ", 
                    SuperscriptBox["l", "6"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Q", "[", "r", "]"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8"}], "+", 
                    RowBox[{"32", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"39", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"]}], "+", 
                    RowBox[{"15", " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "3"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["l", "2"], " ", 
                    RowBox[{"Q", "[", "r", "]"}], " ", 
                    RowBox[{"\[Phi]", "[", "r", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "6"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"]}], "+", 
                    RowBox[{"7", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "\[Mu]", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]], " ", 
                    SuperscriptBox["r", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "2"]}], "+", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}], "-", 
                    RowBox[{"192", " ", 
                    SuperscriptBox["l", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"ss", "[", "r", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "r", "]"}], "2"]}]}], ")"}]}]}], 
                    ")"}]}], ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["Q", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Q", "[", "r", "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], " ", "==", 
               "0"}], " ", ",", " ", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ss", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", " ",
                "ssval"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Q", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], " ", "==",
                " ", "Qval"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\[Phi]", "[", 
                RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], "]"}], "==", 
               "phival"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"ss", ",", "Q", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", " ", 
              RowBox[{"rh", " ", "+", " ", "\[Epsilon]"}], ",", " ", "rend"}],
              "}"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
            RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", " ", 
            RowBox[{"Method", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<StiffnessSwitching\>\"", ",", 
               RowBox[{"\"\<NonstiffTest\>\"", "->", "False"}]}], "}"}]}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ndsol", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.868400644223871*^9, 3.868400657067308*^9}, {
   3.86840085477413*^9, 3.868401023029036*^9}, {3.86840109568638*^9, 
   3.868401249568252*^9}, {3.868443791269828*^9, 3.8684439952504263`*^9}, {
   3.86844417308782*^9, 3.8684441779236317`*^9}, {3.8684443243523607`*^9, 
   3.868444336930501*^9}, {3.8684444051318607`*^9, 3.868444502994285*^9}, {
   3.868444756100567*^9, 3.868444761320334*^9}, {3.868444829870184*^9, 
   3.868444846363247*^9}, {3.8684450075755777`*^9, 3.868445010271202*^9}, {
   3.868446255303215*^9, 3.86844626276694*^9}, 3.868446362511128*^9, {
   3.868446879983774*^9, 3.868446881421142*^9}, {3.868453214131628*^9, 
   3.8684532377437773`*^9}, 3.868455472237918*^9, {3.868455548832224*^9, 
   3.868455551108316*^9}, {3.8684755513129597`*^9, 3.868475551529574*^9}, {
   3.868567950205489*^9, 3.8685679533304443`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"96fc18bc-ff94-4a93-9f57-1420a7cbb04a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotsodevsdecoupled", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rh", ",", "rend", ",", "expr1", ",", "expr2", ",", "p1", ",", "p2", ",",
       "p3", ",", "p4", ",", "expr0"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", " ", "=", " ", "1"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"rend", " ", "=", " ", 
      SuperscriptBox["10", "5"]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"expr0", " ", "=", " ", 
      RowBox[{"odesoldecoupled1", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"expr1", " ", "=", " ", 
      RowBox[{"odesoldecoupled", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"expr2", " ", "=", " ", 
      RowBox[{"odesol", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr0"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr1"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Schwarzschild\>\"", ",", "\"\<Decoupled\>\"", ",", 
           "\"\<Exact\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<r\>\"", ",", "\"\<\[Phi][r]\>\""}], "}"}]}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr2"}], ")"}], "-", 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr1"}], ")"}]}], 
           "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr2"}], ")"}], "-", 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "expr0"}], ")"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "100"}], "}"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Decoup-Exact\>\"", ",", "\"\<GR-Exact\>\""}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p3", " ", "=", " ", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "*", 
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
              "[", "r", "]"}]}], "/.", "expr0"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "*", 
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
              "[", "r", "]"}]}], "/.", "expr1"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "*", 
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
              "[", "r", "]"}]}], "/.", "expr2"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Schwarzschild\>\"", ",", "\"\<Decoupled\>\"", ",", 
           "\"\<Exact\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p4", " ", "=", " ", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
               "[", "r", "]"}], "/.", "expr2"}], ")"}], "-", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
               "[", "r", "]"}], "/.", "expr1"}], ")"}]}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
               "[", "r", "]"}], "/.", "expr2"}], ")"}], "-", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], 
               "[", "r", "]"}], "/.", "expr0"}], ")"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "100"}], "}"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Decoup-Exact\>\"", ",", "\"\<GR-Exact\>\""}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868482792161481*^9, 3.868482965333839*^9}, {
   3.868483034003409*^9, 3.8684830587044687`*^9}, {3.868483142782572*^9, 
   3.8684831542175283`*^9}, {3.8684831932045517`*^9, 
   3.8684832501229887`*^9}, {3.868483343199813*^9, 3.868483347236575*^9}, {
   3.868483456283969*^9, 3.868483460088472*^9}, {3.8684835212353687`*^9, 
   3.868483632751398*^9}, {3.8684839096979723`*^9, 3.8684839106979856`*^9}, {
   3.8684841707959757`*^9, 3.86848421766088*^9}, {3.868484682284251*^9, 
   3.868484747229479*^9}, {3.868484784712598*^9, 3.8684848159248667`*^9}, {
   3.868485066619606*^9, 3.8684850716076117`*^9}, 3.868486169356587*^9, {
   3.868487142178699*^9, 3.868487318474086*^9}, {3.8685395357667437`*^9, 
   3.868539555976141*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8e11d182-24a6-4f33-bc7e-603d7ba806d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"asymvals", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"(", " ", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["rh", "4"], "-", 
       RowBox[{"192", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Phi]0", "2"]}]], " ", 
        SuperscriptBox["l", "4"], " ", 
        SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], ";"}], 
      "*)"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "20"}]}], "}"}], " ", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"ss", "[", "rend", "]"}], "2"], "*", 
         FractionBox["rend", "2"]}], ",", " ", 
        RowBox[{"\[Phi]", "[", "rend", "]"}], ",", 
        RowBox[{
         RowBox[{"-", "rend"}], "*", "rend", "*", 
         RowBox[{
          RowBox[{
           RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], "[", 
          "rend", "]"}]}]}], "}"}], "/.", 
      RowBox[{"odesol", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}]}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.868443887939736*^9, 3.868443893055936*^9}, {
   3.868444010806406*^9, 3.8684440600355997`*^9}, {3.8684446102929163`*^9, 
   3.8684446244616957`*^9}, {3.868444715133399*^9, 3.86844472265226*^9}, {
   3.86844481080482*^9, 3.86844481500989*^9}, {3.8684449856264133`*^9, 
   3.868445025604411*^9}, {3.8684532419467278`*^9, 3.868453259470333*^9}, {
   3.868453300077703*^9, 3.8684533048649178`*^9}, {3.8684535368479853`*^9, 
   3.868453550907642*^9}, {3.868461313533247*^9, 3.868461323317602*^9}, 
   3.8684613568926992`*^9, {3.868461434873954*^9, 3.868461448315082*^9}, {
   3.868461488980864*^9, 3.868461506488057*^9}, 3.8684755773036757`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"9f03cc6d-6fc5-4b36-b1f1-1c225dfdb39c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"asymvalsdecoupled", "[", 
   RowBox[{
    RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
    RowBox[{"l_", "?", "NumericQ"}], ",", 
    RowBox[{"rh_", "?", "NumericQ"}], ",", 
    RowBox[{"rend_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  RowBox[{"(", " ", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["rh", "4"], "-", 
       RowBox[{"192", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Phi]0", "2"]}]], " ", 
        SuperscriptBox["l", "4"], " ", 
        SuperscriptBox["\[Phi]0", "2"]}]}], "<=", "0"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Kanti bound exceeded\>\"", "]"}], ";"}], 
      "*)"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "20"}]}], "}"}], " ", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.5", "*", "rh"}], ",", " ", 
        RowBox[{"\[Phi]", "[", "rend", "]"}], ",", 
        RowBox[{
         RowBox[{"-", "rend"}], "*", "rend", "*", 
         RowBox[{
          RowBox[{
           RowBox[{"Derivative", "[", "1", "]"}], "[", "\[Phi]", "]"}], "[", 
          "rend", "]"}]}]}], "}"}], "/.", 
      RowBox[{"odesoldecoupled", "[", 
       RowBox[{"\[Phi]0", ",", "\[Mu]", ",", "l", ",", "rh", ",", "rend"}], 
       "]"}]}]}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8684753577597713`*^9, 3.868475383196967*^9}, {
  3.868475573786656*^9, 3.8684756035014763`*^9}, {3.8684757780391903`*^9, 
  3.868475780149293*^9}, {3.868476176045271*^9, 3.8684761770517263`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8ae142c3-4553-4cbb-9e6f-60a824483a8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phivals", " ", "=", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Subdivide", "[", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]], ",", "10"}], "]"}], ",", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]], ",", "0.1", ",", "100"}], "]"}], ",", 
       RowBox[{"Subdivide", "[", 
        RowBox[{"0.1", ",", "1", ",", "1000"}], "]"}]}], "]"}]}], " ", "//", 
    "N"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868444692191601*^9, 3.868444703503525*^9}, {
   3.8684447351384974`*^9, 3.868444746951045*^9}, {3.868444965034512*^9, 
   3.868444969153479*^9}, {3.868445325074354*^9, 3.868445336118436*^9}, {
   3.868445917940257*^9, 3.868445924126381*^9}, {3.8684464244859962`*^9, 
   3.8684464360485363`*^9}, {3.868452472797268*^9, 3.868452477373605*^9}, {
   3.8684525130208073`*^9, 3.868452577891109*^9}, {3.868452629083909*^9, 
   3.868452688719399*^9}, 3.8684527761978893`*^9, {3.8684536249112864`*^9, 
   3.868453631456491*^9}, {3.868454022209413*^9, 3.8684540363570547`*^9}, {
   3.868455299590055*^9, 3.868455302576934*^9}, 3.8684596656428556`*^9, 
   3.8684596980203247`*^9, 3.868471907339374*^9, 3.868472041394738*^9, {
   3.8684724854494867`*^9, 3.868472541576234*^9}, {3.8684729594300013`*^9, 
   3.868472964248909*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"d16c994f-02a9-42f2-a812-a6a1346c24e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mylist", "[", 
    RowBox[{"l_", ",", "rh_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvals", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", "l", ",", "rh", ",", 
         
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868444861579915*^9, 3.868444924714356*^9}, 
   3.8684449731387367`*^9, {3.8684450751544867`*^9, 3.8684451121389112`*^9}, {
   3.868445266620206*^9, 3.868445268598083*^9}, {3.868445724622143*^9, 
   3.868445725945362*^9}, {3.868445944168755*^9, 3.868445944258614*^9}, {
   3.8684463872979794`*^9, 3.8684464086654*^9}, {3.868453354058766*^9, 
   3.868453393363132*^9}, {3.868455069722703*^9, 3.868455116284226*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d8ab13ea-dfc3-4528-bc91-ee9f95e3f3e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mylistdecoupled", "[", 
    RowBox[{"l_", ",", "rh_"}], "]"}], ":=", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvalsdecoupled", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", "l", ",", "rh", ",", 
         
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868475394892947*^9, 3.8684754136499043`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"30eff812-87e4-4318-b1d8-7d8412bd8e28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"asymvDD", "[", 
   RowBox[{"l_", ",", "rh_", ",", "phi0_"}], "]"}], ":=", " ", 
  RowBox[{"asymvals", "[", 
   RowBox[{"phi0", ",", "3", ",", "l", ",", "rh", ",", 
    RowBox[{"rh", "*", 
     SuperscriptBox["10", "5"]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868446419248767*^9, 3.8684465339677134`*^9}, {
   3.868446569067192*^9, 3.8684466018942003`*^9}, {3.868446792983719*^9, 
   3.8684467940638227`*^9}, {3.868446932185182*^9, 3.8684469334831448`*^9}, {
   3.868451840289419*^9, 3.868451841024732*^9}, {3.8684524578591537`*^9, 
   3.868452460228105*^9}, {3.868452781802559*^9, 3.8684527844854593`*^9}, {
   3.868452851504339*^9, 3.868452852736185*^9}, {3.8684528835011806`*^9, 
   3.868452883674533*^9}, {3.868453397556905*^9, 3.868453493668119*^9}, {
   3.868455124769383*^9, 3.8684551416417723`*^9}, 3.868455175096243*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"ee9bd2a2-a221-4093-aa5b-01ad875f9e52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"getplot", "[", 
   RowBox[{"l_", ",", "\[Mu]_", ",", "color_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "list$", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list$", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"phivals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
          RowBox[{"asymvals", "[", 
           RowBox[{
            RowBox[{"phivals", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", 
            "rh", ",", 
            RowBox[{
             SuperscriptBox["10", "5"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[\!\(\*SubscriptBox[\(\[Phi]\), \(asym\)]\)]\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[Q]\>\""}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getplotdecoupled", "[", 
   RowBox[{"l_", ",", "\[Mu]_", ",", "color_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "list$", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list$", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"phivals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
          RowBox[{"asymvalsdecoupled", "[", 
           RowBox[{
            RowBox[{"phivals", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", 
            "rh", ",", 
            RowBox[{
             SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[\!\(\*SubscriptBox[\(\[Phi]\), \(asym\)]\)]\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[Q]\>\""}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8684584556546097`*^9, 3.8684585513437223`*^9}, {
   3.868458659229899*^9, 3.8684587209434767`*^9}, {3.868458862174424*^9, 
   3.8684588649858837`*^9}, {3.868458910415257*^9, 3.86845894077864*^9}, {
   3.8684590499117413`*^9, 3.868459065167838*^9}, {3.868459222130397*^9, 
   3.8684592285375423`*^9}, {3.8684593252195387`*^9, 3.868459364280149*^9}, {
   3.868459615671277*^9, 3.868459832478126*^9}, {3.868459920271881*^9, 
   3.8684599387018747`*^9}, 3.868460199043989*^9, {3.8684602913884087`*^9, 
   3.8684603064861403`*^9}, {3.868461398920333*^9, 3.868461426770871*^9}, {
   3.868461457505577*^9, 3.868461471640436*^9}, {3.868461581119595*^9, 
   3.868461589470826*^9}, {3.868475421787273*^9, 3.868475430174644*^9}, {
   3.868483428871234*^9, 3.8684834293689137`*^9}, {3.868483743477549*^9, 
   3.86848374902503*^9}, {3.8684837895201797`*^9, 3.868483819437134*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"01a482d5-c4be-4be0-a101-233ff1342842"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"list1", "[", 
    RowBox[{"\[Mu]_", ",", "l_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvalsdecoupled", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", "rh", 
         ",", 
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868476120351707*^9, 3.868476120658662*^9}, {
  3.868476395285733*^9, 3.868476416525828*^9}, {3.868476549071844*^9, 
  3.868476594122416*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"e099cdb1-ed0b-440e-929f-ac791b19d19e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"list2", "[", 
    RowBox[{"\[Mu]_", ",", "l_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phivals", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
       RowBox[{"asymvals", "[", 
        RowBox[{
         RowBox[{"phivals", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", "rh", 
         ",", 
         RowBox[{
          SuperscriptBox["10", "10"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8684760138863573`*^9, 3.868476027552763*^9}, {
  3.868476403509574*^9, 3.868476450871037*^9}, {3.868476574842595*^9, 
  3.8684765919314327`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4374c7e8-90e8-465b-9bdc-b12837c733b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotcomp", "[", 
    RowBox[{"mu_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l1", ",", "l2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l1", " ", "=", " ", 
       RowBox[{"list1", "[", 
        RowBox[{"mu", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l2", " ", "=", " ", 
       RowBox[{"list2", "[", 
        RowBox[{"mu", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ListLogPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"l1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"1", "-", " ", 
                FractionBox[
                 RowBox[{
                  RowBox[{"l1", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], 
                 RowBox[{
                  RowBox[{"l2", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}]]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "l1", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListLogPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"l1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"1", "-", " ", 
                FractionBox[
                 RowBox[{
                  RowBox[{"l1", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], 
                 RowBox[{
                  RowBox[{"l2", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}]]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "l1", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListLogPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"l1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"1", "-", " ", 
                FractionBox[
                 RowBox[{
                  RowBox[{"l1", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], 
                 RowBox[{
                  RowBox[{"l2", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}]]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "l1", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "}"}]}]}], "]"}]}],
   "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.868476214064818*^9, 3.8684763350580683`*^9}, {
  3.8684763728088512`*^9, 3.86847637802171*^9}, {3.868476525106538*^9, 
  3.868476525412306*^9}, {3.868476597992506*^9, 3.8684767281038427`*^9}, {
  3.868476840990456*^9, 3.868476848769549*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"7b27c68b-0685-44c1-b44a-e3581600a055"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getplotfull", "[", 
   RowBox[{"l_", ",", "\[Mu]_", ",", "rh_", ",", "color_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "list$", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list$", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"phivals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "}"}], " ", ",", 
          RowBox[{"asymvals", "[", 
           RowBox[{
            RowBox[{"phivals", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "\[Mu]", ",", "l", ",", 
            "rh", ",", 
            RowBox[{
             SuperscriptBox["10", "5"], "*", "rh"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "phivals", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[\!\(\*SubscriptBox[\(\[Phi]\), \(asym\)]\)]\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"list$", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"list$", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "list$", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Mu] = \>\"", "<>", 
           RowBox[{"ToString", "[", "\[Mu]", "]"}], "<>", "\"\<; l = \>\"", "<>", 
           RowBox[{"ToString", "[", "l", "]"}]}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", "color"}], "}"}]}], 
        ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(H\)]\)\>\"", ",", 
           "\"\<Log[Q]\>\""}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Bold", ",", " ", "Medium"}], "]"}], ",", "Black"}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868566662627748*^9, 3.868566673111209*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"fd7181ac-8cf9-4ebd-873c-3a25c79624c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Section",
 CellChangeTimes->{{3.868546841897771*^9, 
  3.868546846566865*^9}},ExpressionUUID->"1ab3aed8-541b-4b2a-8203-\
e869cd679d55"],

Cell[BoxData[
 RowBox[{"odesol", "[", 
  RowBox[{
   RowBox[{"\[Phi]0_", "?", "NumericQ"}], ",", 
   RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", " ", 
   RowBox[{"l_", "?", "NumericQ"}], ",", 
   RowBox[{"rh_", "?", "NumericQ"}], ",", 
   RowBox[{"rend_", "?", "NumericQ"}]}], "]"}]], "Input",ExpressionUUID->\
"a419569c-ba2f-4305-9c71-2ae1b385fe23"],

Cell[CellGroupData[{

Cell[BoxData["ans"], "Input",
 CellChangeTimes->{{3.868566893693285*^9, 3.8685668943470078`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"864c118e-864b-4867-8896-960f336962bc"],

Cell[BoxData[
 RowBox[{"odesol", "[", 
  RowBox[{"0.45`", ",", "12", ",", "0.5`", ",", "0.58`"}], "]"}]], "Output",
 CellChangeTimes->{3.868566894689624*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"c3e28e49-6fab-483d-8cb6-3bd30dee1d2d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"compareGR", "[", " ", 
   RowBox[{"l_", ",", "mu_", ",", "\[Phi]0_", ",", "mh_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rh", ",", "p1", ",", "p2", ",", "p3"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rh", " ", "=", " ", 
      RowBox[{"2", "*", "mh"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"ans", " ", "=", " ", 
      RowBox[{"odesol", "[", 
       RowBox[{"\[Phi]0", ",", "mu", ",", "l", ",", "rh", ",", 
        RowBox[{"rh", "*", 
         SuperscriptBox["10", "5"]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"LogLogPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ss", "[", "r", "]"}], "/.", "ans"}], ",", " ", 
          SqrtBox[
           RowBox[{"2", "*", 
            FractionBox["mh", "r"]}]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "rh", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Exact\>\"", ",", "\"\<GR\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<r\>\"", ",", "\"\<Shift profile\>\""}], "}"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"(", 
             RowBox[{"1", "-", " ", 
              FractionBox[
               SqrtBox[
                RowBox[{"2", "*", 
                 FractionBox["mh", "r"]}]], 
               RowBox[{
                RowBox[{"ss", "[", "r", "]"}], "/.", "ans"}]]}], ")"}], "]"}],
            "*", "100"}], ",", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"(", 
             RowBox[{"1", "-", " ", 
              FractionBox["mh", 
               RowBox[{
                RowBox[{"r", "*", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"ss", "[", "r", "]"}], "2"], "2"]}], "/.", 
                "ans"}]]}], ")"}], "]"}], "*", "100"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "rh", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<r\>\"", ",", "\"\<Percent difference\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Profile\>\"", ",", "\"\<ADM Mass\>\""}], "}"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p3", " ", "=", " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "ans"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r", ",", "rh", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<r\>\"", ",", "\"\<\[Phi][r]\>\""}], "}"}]}]}], "]"}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8685684608252087`*^9, 3.868568655787533*^9}, {
  3.868568700105061*^9, 3.868568712286202*^9}, {3.868568752798438*^9, 
  3.868568758693327*^9}, {3.868569057109398*^9, 3.868569211447392*^9}, {
  3.8685694726206627`*^9, 3.868569535821013*^9}, {3.8685695807003517`*^9, 
  3.86856958275138*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"da0f5696-7f83-40c1-9078-6d1ee9873cda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareGR", "[", 
  RowBox[{"0.5", ",", "3", ",", "0.34", ",", "0.54"}], "]"}]], "Input",
 CellChangeTimes->{{3.868568888826386*^9, 3.86856889123909*^9}, {
  3.86856934279282*^9, 3.868569350344584*^9}, {3.86856942194515*^9, 
  3.86856942203576*^9}, {3.868569588858204*^9, 3.8685696006656427`*^9}, {
  3.8685696429812326`*^9, 3.8685696440907393`*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"879d5d8f-484b-4121-8f7f-27fd966491b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAl3anj7mzsz9avU1m6i1tvk4jWZm9
DrQ/tf9lf7CxSr8E0AqjwWm0PweibjJJn1q/cClutskftT/Db+zV03tqv0rc
NN3Zi7Y/ZMLIYtk4er/8QcIq+mO5Pz6V8nZHwIm/YA3dxToUvz+Hu8WNo/mY
vxRSCf5dOsU//X26xlzgp7++SY+S7cfQP7bis1cmj7e/n6mePg2K1j/JFltM
/BjBv7h61k1CL9w/NqjMGVlZxr+REL+qeifhP0fIfqw0IMy/W0PVugQD5D8E
MFCDq8vQv85gI8fNG+c/JrO17UzK07/etgWFISbqP4ZktZSBwda/hGwqzyX8
7D+KcrwC+4nZv2mGw4q0B/A/V++pZPSR3L9bBhN0LnfxP97TJ4q/aN+/m6Is
tm3f8j/moGrYcRnhvzA0YnZMZvQ/PJg+632d4r+Q9bh8A9P1PxaTBa4OCOS/
RKwrAVpe9z+EoU/vgZHlv0Z/aN514vg/dkfopP4T578TgsYBakz6P9DUoyWw
fOi/NHpAo/3U+z++OQ4MHgTqvyCi24ppQ/0/KHum9YBx679gv5LwdND+P8zC
36W2/ey/d/yJ1yIrAEB/45cbs4LuvyMx21n34ABAJ5BQg7nt7795YDqbG6YB
QAlDGY2zu/C/tSeq/yteAkAyrq4neXPxvxj9fhCfEgNA2D9PSLsn8r8lzWHg
YdYDQEGWO3s36/K/GDVV0xCNBEDawpGKxaHzv7WXVoUPUwVAcIDrMIRn9L95
CL3jcBUGQF0uw3HOKfW/IhE0Zb7KBkBr32Dc5d71v3UUuaVbjwdAAp74unSj
9r+ur04J5UYIQPielpXMWve/DllJGdH6CECK/HtitA74vxj9UegMvglAz8nh
VsDR+L8HOWvaNHQKQOVpJPXph/m/oW+Si6w5C0CjT/kFNU36vyA+yl8Q8gtA
5FkDv54F+7/GGmfg1qYMQFCtfDRBuvu/FvIRIO1qDUBxkTEXWn78v0xhzYLv
IQ5AkebQBkI1/b8sy5akQegOQDKH2n6Q+/2/M0PFcvaqD0DZYW/oNL7+v5Ap
ArJLMBBALEawCMlz/7/brigKxJIQQPgohjReHADAGYDXc7LuEEDeVYUMPngA
wGvYuDPSSBFAnt8Fo2jSAMASLiHTmaoRQA2hbmQbNAHAq88RhNcFEkCSADGS
Zo8BwDiP1+xuBxJAiZezI/6QAcDETp1VBgkSQBJq4LGVkgHA3s0oJzUMEkA8
IOnDxJUBwBLMP8qSEhJAJdLIvCKcAcB6yG0QTh8SQGOxMfbdqAHASsHJnMQ4
EkCd92JuUcIBwNeAjwVcOhJArbTphejDAcBkQFVu8zsSQBiqDZp/xQHAfr/g
PyI/EkCgaI24rcgBwLK99+J/RRJAeIBr0QnPAcAauiUpO1ISQOW0VZDB2wHA
p3nrkdJTEkD6gomAWN0BwDQ5sfppVRJABxSnb+/eAcBOuDzMmFgSQHf9c0sd
4gHAgrZTb/ZeEkCRH5X/eOgBwA92GdiNYBJAj5dJ7Q/qAcCcNd9AJWISQN/S
xdum6wHAtrRqElRlEkDseCy81O4BwEN0MHvrZhJAqsqnrmvwAcDQM/bjgmgS
QNG5DKMC8gHAXfO7TBpqEkBnSamZmfMBwOqygbWxaxJA4cDNkjD1AcBStmdL

            "]]}, Annotation[#, "Charting`Private`Tag$545427#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAl3anj7mzsz8DgZ2wiM5ovk4jWZm9
DrQ/z+2NpmXBRr8E0AqjwWm0P5iMfAk0wVa/cClutskftT8g3vM6G8Fmv0rc
NN3Zi7Y/5oWv0w7Bdr/8QcIq+mO5P8xZDaAIwYa/YA3dxToUvz+gQzyGBcGW
vxRSCf5dOsU/kbhT+QPBpr++SY+S7cfQP64dvyP/tbe/n6mePg2K1j+77u49
H53Bv7h61k1CL9w/1b8mTVRCx7+REL+qeifhPz9mzlQHYs2/W0PVugQD5D/p
ZX26jYzRv85gI8fNG+c/XIPLxlal1L/etgWFISbqP2vZrYSqr9e/hGwqzyX8
7D8Tj9LOroXav2mGw4q0B/A/YC8vFfKY3b9bBhN0LnfxP6IX5/PyO+C/m6Is
tm3f8j/iswA2MqThvzA0YnZMZvQ/dkU29hAr47+Q9bh8A9P1P9cGjfzHl+S/
RKwrAVpe9z+Kvf+AHiPmv0Z/aN514vg/jZA8Xjqn578TgsYBakz6P1qTmoEu
Eem/NHpAo/3U+z96ixQjwpnqvyCi24ppQ/0/Z7OvCi4I7L9gv5LwdND+P6jQ
ZnA5le2/d/yJ1yIrAEA1CuguChvvvyMx21n34ABAxjnFmVlD8L95YDqbG6YB
QBxpJNt9CPG/tSeq/yteAkBZMJQ/jsDxvxj9fhCfEgNAuwVpUAF18r8lzWHg
YdYDQMjVSyDEOPO/GDVV0xCNBEC7PT8Tc+/zv7WXVoUPUwVAWKBAxXG19L95
CL3jcBUGQBwRpyPTd/W/IhE0Zb7KBkDFGR6lIC32v3UUuaVbjwdAGB2j5b3x
9r+ur04J5UYIQFG4OElHqfe/DllJGdH6CECyYTNZM134vxj9UegMvglAuwU8
KG8g+b8HOWvaNHQKQKpBVRqX1vm/oW+Si6w5C0BEeHzLDpz6vyA+yl8Q8gtA
xEa0n3JU+7/GGmfg1qYMQGojUSA5Cfy/FvIRIO1qDUC5+vtfT838v0xhzYLv
IQ5A8Gm3wlGE/b8sy5akQegOQNDTgOSjSv6/M0PFcvaqD0DXS6+yWA3/v5Ap
ArJLMBBAxFvuo/nC/7/brigKxJIQQC2zHSr1QwDAGYDXc7LuEEBrhMyT458A
wGvYuDPSSBFAvdytUwP6AMASLiHTmaoRQGQyFvPKWwHAq88RhNcFEkD90wak
CLcBwDiP1+xuBxJAipPMDKC4AcDETp1VBgkSQBZTknU3ugHA3s0oJzUMEkAw
0h1HZr0BwBLMP8qSEhJAZNA06sPDAcB6yG0QTh8SQMzMYjB/0AHASsHJnMQ4
EkCcxb689ekBwNeAjwVcOhJAKIWEJY3rAcBkQFVu8zsSQLZESo4k7QHAfr/g
PyI/EkDQw9VfU/ABwLK99+J/RRJAA8LsArH2AcAauiUpO1ISQGu+GklsAwLA
p3nrkdJTEkD5feCxAwUCwDQ5sfppVRJAhj2mGpsGAsBOuDzMmFgSQKC8MezJ
CQLAgrZTb/ZeEkDUukiPJxACwA92GdiNYBJAYXoO+L4RAsCcNd9AJWISQO45
1GBWEwLAtrRqElRlEkAIuV8yhRYCwEN0MHvrZhJAlXglmxwYAsDQM/bjgmgS
QCI46wO0GQLAXfO7TBpqEkCv97BsSxsCwOqygbWxaxJAO7d21eIcAsAGR01c

            "]]}, Annotation[#, "Charting`Private`Tag$545427#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {0.07696113354855992, -2.2641045262197657`}, 
       FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, 
         "ClippingRange" -> {{{0.07696113354855992, 
          4.60517009357566}, {-2.2641045262197657`, \
-4.6206215810778974`*^-8}}, {{0.07696113354855992, 
          4.60517009357566}, {-2.2641045262197657`, \
-4.6206215810778974`*^-8}}}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Shift profile\"", TraditionalForm], None}, {
          FormBox["\"r\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Exact\"", "\"GR\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
YkO1rBw0oP8HbUsIHg==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$545495#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
4x9tO++ODomZZI3HETCpcXWSPN+MqF98PxSP4yk4v84VTelXOvgxgYBH1Wle
p8j7fXRjd0ciARdG4/lPoiXVj1u9SiaA9+XcixNo/488fXWpBPy0+v3ECf0l
KutIRToBrbZJHx3RB9S0PxVfIUDn0E8N0gV9nbZ3Mwl4GyJV44AWjfIYyM0i
ALqUgkh7q646fiWHgNfiu9xJ9/UWDF3KJcCvzDiFtH6kqVP0dQKyFnmMkr71
3/C3oHwCrn9p9CTLX94betL7Fo6/LEudrM+ZCNkxtzs4vzTkNpP17dr5zNXx
HgGX7MHEGQ09lhNH7mP97hTlkO3LC5925xQSMNgUqeSCFtqZNEUpIkDP+MU3
sn9cP+w4Z/gI6+Pk3nMa3RbWMr23BPt31yXus2itHSe81Z8QYOC7zfIcmi8s
10++goCT9vXXfdFO2/ctSFXi+jr9Oo18z3zd1RMgWkXA30qiMgidrrImhKeO
AMfDT29Eorm6HvLNviDARTXNIRZtF0INn2gg4A/n46GL6O2dkVH9zQSUr4jp
S0MnBW9a2vmKgGe03pOZ6L9K1bGvWwlQ2XtW5Rq6Nmgu/lkbAd8n95reRW9T
ShN53EGAdQbzRqEF+f8/aon3OnG93/VUKyHfaxRdUjJ6CDhqmjlSja5sXyKR
1EdA4Lj3SvL9Rz4wPz2mn4ABBfETr9E/2/ozfAYISJbd/agHHerPyLX4ge0j
Tt38iz4dt93QcAz/XsVmDzeub+uMpSOq4wRcHiEWyPWu8bRGZcUU5geXJ6KS
5HvUb9WndXMEUJ2Xe+9Bd/KttC76h+vtuUfkfnSd6A+uHC46OPS1vDAn3792
5hn48dLhj17xaxvyve3U6jf/LaXDIeUO4Si0jt/4GRlhOuiKGF9MRCvGNK9Z
voIOH8JZ+66i+W6FWo2sokNEeMjWYnTJwNRQ1lo6pBU+EP2MXm/VvrBMgQ6q
vt2bDMn3TOfCnFlFOs6PA04M9LR33P5hZTokpbd32KBbUw2ia3bSYWhy33Y/
dMi7R2I+WnQoLpxvKUaPmKQoDRnToXn5gVBlzP+PtDiWVQ502GDneX037iep
U4XNnU500MpeLENBe99fBuPOdDhbIvT8KHrvpmo5aTc6BKaedYlC161UHvXz
osO/7Ohz3eiOIZ5AzSg6TJUllgfj/jWdXHD9/m06CPRZrB3G/VDz1+KJzFE6
+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
epdlxJ+FBQ7k1dkaWaD/BwILzy8=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$545495#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Percent difference\"", TraditionalForm], None}, {
          FormBox["\"r\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Profile\"", "\"ADM Mass\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
/g9fzZva
         "]]},
       Annotation[#, "Charting`Private`Tag$545558#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"\[Phi][r]\"", TraditionalForm], None}, {
       FormBox["\"r\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.868568891677429*^9, 3.868569213027811*^9, 3.868569350608971*^9, 
   3.868569423023868*^9, 3.868569537181305*^9, {3.868569584193451*^9, 
   3.868569600972205*^9}, 3.868569644816752*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"6f4b740c-d4f7-4e6d-8892-b72b45dce725"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareGR", "[", 
  RowBox[{"0.5", ",", "12", ",", "0.35", ",", "0.36"}], "]"}]], "Input",
 CellChangeTimes->{{3.86856856336903*^9, 3.868568580441296*^9}, {
  3.868568690579691*^9, 3.868568745493347*^9}, {3.868568821333802*^9, 
  3.86856887541556*^9}, {3.8685689841781*^9, 3.868569006993672*^9}, {
  3.8685693632703876`*^9, 3.8685693789825287`*^9}, {3.868569665572681*^9, 
  3.868569666885612*^9}, {3.86856971846422*^9, 3.868569723262958*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"429a9a55-e062-4647-97c1-a4d404fd5539"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAgSvzfzUG1b88t3C8LFRtvhAlNuhq
7dS/5CpkSyrmSr+eHnlQoNTUvz+F+a/C5Fq/uhH/IAuj1L/gXBlPNOJqv/T3
CsLgP9S/sxI1KOjcer9oxCIEjHnTv/DNZC4D0Yq/Tl1SiOLs0b9JDFTUHrSa
vzUeYyEfp82/zre2vqBpqr9ghlCb5zbAv1fwdF47uLq/MzSLRFJVnb9njxhs
0lPDvwcSoT8gRbE/BHfUoy4Dyb+W18EvtvrFP8i0skXBJc+/FtcvBnE30T+E
LrZsb3bSv+VxRsj89tc/6Om6hoij1b+NdC4VB5feP8VOdFV0zdi/nF02JIpi
4j9QGljiqsnbv7NYuadLvOU/s1kiMqgN37/LdWeeDt3oP7f5LZmSD+G/z0Z+
2hDu6z/14wSDRpLiv5XveADOQe8/61lobkQ35L8uXc9MRi7xP7OafEYSweW/
cy5UDgPd8j948d5Aomznv61ZjXLfg/Q/aT+aJukQ6b/oFVyQPA72P51Vg3JX
meq/Bb4cI/e59z9QFPhLOUPsvyH3cm8ySfk/SnrNlevQ7b8eHLswy/n6P8Ro
MrkzgO+/E5u3lIOi/D/E2JCV2ZPwvwerSbK8Lv4/G0UeQHVZ8b/cps1EU9z/
P77vFNzRL/K/2ZlzSLW2AEB4D4r06/fyvz+N2r9QewFA0nVRNz2887+Wdrrx
mlACQCsYstIqkfS/bShlgKUXA0BS79ov8Ff1vzXQiMle7wNAxf84BGov9r/4
pAbkJ8MEQDvxGWvoAve/O0JPW7GIBUANFJdbUcj3v27VEI3pXgZA4UceeESe
+L8iMZ0b4iYHQGmYPXgoZvm/0bmDe+rqB0DY7uGk9yn6v3A445WhvwhA1Hpb
AJ/++r+Qfw0NGYYJQF7dvE/mxPu/oLywPj9dCkCwMZ3S/5v8vzDCHs0lJgtA
fKKfxL9k/b+79OYsHOsLQGdDiqCvKf6/Nx0oR8HADEAKY5zwMP/+vzMONL4m
iA1AmW99KZPG/78g9bjvOmAOQJZiyt5DTwDACAmY8l40D0BrYWWYVLkAwG/l
QVJD+g9A3wYV2jgcAcDkWzI2a2gQQEt5vASFhwHAUCmp8ZTMEEC4z/Qyn+sB
wDkNzZXGLhFA+TfYZNlNAsAbbC2XT5kRQG36cSROuALAPS/zxrj8EUAxDoa+
xBsDwKgwq6p0/hFAo66UhIAdA8ASMmOOMAASQPlCwEU8HwPA6DTTVagDEkCC
83a5syIDwJQ6s+SXChJAOL0OZ6IpA8DsRXMCdxgSQDG2HOd+NwPAmlzzPTU0
EkDp6L5SNVMDwAVeqyHxNRJAdteqqfBUA8BwX2MFrTcSQN2FRACsVgPARmLT
zCQ7EkB42b+tIloDwPJns1sUQhJAyuwzExBhA8BJc3N5808SQCTpIF3rbgPA
tHQrXa9REkA6DZnapnADwB5240BrUxJAJuYiXmJyA8D0eFMI41YSQPKfeHnZ
dQPAoH4zl9JdEkBz6U4QyHwDwAuA63qOXxJAqjpfzYN+A8B2gaNeSmESQLxP
+ZQ/gAPATIQTJsJkEkBHP/hCt4MDwLeFywl+ZhJAm89xJnOFA8Aih4PtOWgS
QHNjnhEvhwPAjYg70fVpEkBqcywE64gDwPiJ87SxaxJAXhvL/aaKA8BISFgl

            "]]}, Annotation[#, "Charting`Private`Tag$581417#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAgSvzfzUG1b9SDmp6LAdrvhAlNuhq
7dS/jle42QPLSL+eHnlQoNTUv/xlX8vNyli/uhH/IAuj1L+g6zLEsspov/T3
CsLgP9S/1K6cQKXKeL9oxCIEjHnTvyiQ0X6eyoi/Tl1SiOLs0b/pAOwdm8qY
vzUeYyEfp82/QDl5bZnKqL9ghlCb5zbAv3Q0zzyE1bm/MzSLRFJVnb8oKsfH
4DDDvwcSoT8gRbE/6yH4+31Xyb+W18EvtvrFP5xk+IHIAdC/FtcvBnE30T8/
2h950x7Tv+VxRsj89tc/picrWpl+1r+NdC4VB5feP/son4Ceztm/nF02JIpi
4j9STD4apeXcv7NYuadLvOU/tKPgTrMf4L/LdWeeDt3oP0CyN8oUsOG/z0Z+
2hDu6z/BGkPolTjjv5XveADOQe8/JW9Ae3Ti5L8uXc9MRi7xP4hU08fTb+a/
cy5UDgPd8j/NJViJkB7ov61ZjXLfg/Q/B1GR7WzF6b/oFVyQPA72P0MNYAvK
T+u/Bb4cI/e59z9ftSCehPvsvyH3cm8ySfk/e+526r+K7r8eHLswy/n6P7yJ
31WsHfC/E5u3lIOi/D82yd2HCPLwvwerSbK8Lv4/MdGmFiW48b/cps1EU9z/
PxvP6F/wjvK/2ZlzSLW2AECGlfUFfFfzvz+N2r9QewFA7IhcfRcc9L+Wdrrx
mlACQENyPK9h8fS/bShlgKUXA0AaJOc9bLj1vzXQiMle7wNA4ssKhyWQ9r/4
pAbkJ8MEQKWgiKHuY/e/O0JPW7GIBUDoPdEYeCn4v27VEI3pXgZAG9GSSrD/
+L8iMZ0b4iYHQM8sH9mox/m/0bmDe+rqB0B+tQU5sYv6v3A445WhvwhAHTRl
U2hg+7+Qfw0NGYYJQD17j8rfJvy/oLywPj9dCkBNuDL8Bf78vzDCHs0lJgtA
3b2giuzG/b+79OYsHOsLQGjwaOrii/6/Nx0oR8HADEDkGKoEiGH/vzMONL4m
iA1A8ATbvXYUAMAg9bjvOmAOQGZ4ndaAgADACAmY8l40D0BbAg3YkuoAwG/l
QVJD+g9AjvDhB4VNAcDkWzI2a2gQQLpZ85TOuAHAUCmp8ZTMEEAnJ2pQ+BwC
wDkNzZXGLhFAEAuO9Cl/AsAbbC2XT5kRQPJp7vWy6QLAPS/zxrj8EUAULbQl
HE0DwKgwq6p0/hFAfy5sCdhOA8ASMmOOMAASQOkvJO2TUAPA6DTTVagDEkC/
MpS0C1QDwJQ6s+SXChJAazh0Q/taA8DsRXMCdxgSQMJDNGHaaAPAmlzzPTU0
EkBxWrScmIQDwAVeqyHxNRJA3FtsgFSGA8BwX2MFrTcSQEZdJGQQiAPARmLT
zCQ7EkAcYJQriIsDwPJns1sUQhJAyGV0uneSA8BJc3N5808SQB9xNNhWoAPA
tHQrXa9REkCLcuy7EqIDwB5240BrUxJA9XOkn86jA8D0eFMI41YSQMt2FGdG
pwPAoH4zl9JdEkB3fPT1Na4DwAuA63qOXxJA4X2s2fGvA8B2gaNeSmESQE1/
ZL2tsQPATIQTJsJkEkAigtSEJbUDwLeFywl+ZhJAjYOMaOG2A8Aih4PtOWgS
QPmEREyduAPAjYg70fVpEkBjhvwvWboDwPiJ87SxaxJAzoe0ExW8A8AHAFxv

            "]]}, Annotation[#, "Charting`Private`Tag$581417#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       Ticks -> {Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
          Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
       AxesOrigin -> {-0.32850396628480644`, -2.466837076136449}, 
       FrameTicks -> {{Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
           Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, 
         "ClippingRange" -> {{{-0.32850396628480644`, 
          4.605170085300863}, {-2.466837076136449, \
-5.0343614878465394`*^-8}}, {{-0.32850396628480644`, 
          4.605170085300863}, {-2.466837076136449, \
-5.0343614878465394`*^-8}}}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Shift profile\"", TraditionalForm], None}, {
          FormBox["\"r\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Exact\"", "\"GR\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$581485#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
/9F//7B/RL0IuYb+P7ma5ro=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$581485#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"Percent difference\"", TraditionalForm], None}, {
          FormBox["\"r\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Profile\"", "\"ADM Mass\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$581548#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"\[Phi][r]\"", TraditionalForm], None}, {
       FormBox["\"r\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.868568580826015*^9, 3.86856859737538*^9}, 
   3.868568659404581*^9, {3.868568737946274*^9, 3.868568759951722*^9}, {
   3.868568857687427*^9, 3.868568876372773*^9}, {3.8685689981551743`*^9, 
   3.868569007303969*^9}, 3.868569227560852*^9, 3.868569379333311*^9, 
   3.8685697235129013`*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"9da944be-f118-405c-a361-473023247ec3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplotfull", "[", 
  RowBox[{"0.5", ",", "12", ",", 
   RowBox[{"0.36", "*", "2"}], ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868569315897355*^9, 3.868569316318266*^9}, {
  3.868569427734027*^9, 3.8685694278563757`*^9}, {3.868569682376796*^9, 
  3.8685696856265697`*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"bab5f79f-049a-49fc-9992-ff528c768f14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxlXHc8lf/7do5NIu2QxidJi9KgdJciGtpSaSqKloa0pC2lraEIkRGFzML9
tvfe+5xjHY6dWanfeZ7H96+ffz6v8+LznPe4x3Vf1/U0/ciZ7cfYIiIiZmIi
ItR/XdojPAdSQ1b55UqatHnOI1E2g9lG56fAidZexeuWM0n1v8ia79s0wHPw
sPR/EjNIR4N9ID98MexJPhJ5dNl00mE8oennal0Y7ZURec9nGrlUVvH0huVq
CF3O2ee0aBoZeOC/4G7QWvB7PS04IlCVXFp5Kdu5xxD2mn55MkVOlQx2GFg/
Xb4BHorsUXa5M5XYe42TeuWwGU4bJ3qNHzWV/AnoLtx8ZCt0bnpxdIunyv/7
/CL1uMquzYegqzxianDdFKIebbbt9onj8Gq+sZqO/mRSu9MnsVz/LJjaSD9y
Up5EAja/r+7cegHiI8tV3y6fSC4avuyXOGgPLR81/Tc7TCCr4JHC1FPXQPbH
9OfJnPFEXFnf1U3PERYGSodsNBtPrCetmvFp3S34/neLuaBuHMkdp/s1dOMd
iLV9wFt1YRxZMmbpyrjt9yAkSft4peI44ia3KCN9jxNYiKxQ6o0ZS/5JLzAt
PuQMruullmseH0uOSmjU11k9gm9ao/Y7Ko8lmWy1s4LTj8GVP6Q+ulSRvP73
1OG37lOw2S6fOO+lIskcHm1wc9Uz2PI6LcHEVJEM/34kK6n/HOK00tj/lBTJ
wl8yhY8MXkB+9rLDVQ1jiMWg0xtF45dQG8AufhoyhrgKd/tmkyu45lddLncY
Q9J678yauvUVDCWxTC9uGUN+9bDbPu54DbeXZ7ssmjGGzO92DJuz+w1o/FaV
4PUrkIOdf+2/7n0L4knrjfflKJDn7ddgyQE3eO2o5nPFV4GkCH6J/zj8DtIX
6JyedkOBDLbYZ68+9h4UUuXPa+5VIBr8/uepx93BuEnT7tlSBbKv6cKeTSc9
oHyhVPa8cQrkcUOPauGZD9BuZydZ3ShPDtsu//lZxxPs3uzRu+srT66cvVR6
+ocnDPw0+bTYSp68OBMZo6XnBY/vHgpJ15Anwaf73vfGe4HO40Jb9a7RJPWU
tmPUam9wTLxirhM1mtSdPG9xJdEbqma8+V1/YzQZtAkz1Fv3ESp1r39X3DCa
jLXpniOS+hH2JwaFhY4fTeZZa8olrfeBbNZ6xy88OWJ44kzX3QwfSDhZrjQY
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
QPFLHzJ8XzWEh6y9NOVuH9LwObcadA0V5D6b9yHD/1WD/Z4H2Qnafbj/L5Vw
1SAc09eby/UhwwdWwxzDCyr2Tb2oTgOYGmB9vvlXkfQiww/WgFXUST8Nt17s
HaYGwhrQjuLxYi/0IsMX1oDXi2CntC29SKjtrqsBtX0G143m9iLDH9aAA88y
VE+yFx9S8OBwDSxZ/HW6b/1PZPjEGgi+taL0GvmJu+mBvgbqzmzmJbr/RD2a
X6yBuxt+Wly8+hNnCE+P8174/Rrht5/v+YkM31gDzR/gwqTlP7GDkn+/14BJ
3rRz4hN/IsM/1kAWuZC0u78Hv1N0W1kNXMOPUXKlPcjwkTXAeaviNyuyB+/S
A0MNzPCY9NP9VQ8y/GQtlM/bIX7xUg9uo7qlYi2sImVbAsx6cBnNV9bChPVJ
m3R0e1CZkoc0a0EyQs5hpnIPMvxlLVh83nnK8m838n9ThoFakJjm/1mE240M
n1kLf5vNCrqSuvEbRRfZ1MLg6IzrS/y68S3Nb9bCkga93TnO3Uhfr1MtvPT/
JhN1uhuP0nxnLYSnh23s3t6NNBz6VAvvn6kVX1nWjQz/WQs5m5Yc3a7cjRNo
QFkLvd8mJ9qxupHhQ2thUtBwTFNTF1LdfD23FvbplKp4ZXchw4/WQur71Sk+
YV0YTNEdf2tB/Okhl643XcjwpXWQ9RTNbt/oQvsrvvPWKtfBN6358uaWXcjw
p3WQbuHpfnlzF66jyr1OHdz7Orm/UrsLGT61DkS335O/odyFCjSBWAfvl/g0
HhXrQoZfrYP9l3O6J1R0onAYFCZIHWR8jn5fH9CJDN9aBzN85tTNv9qJfpcp
wFEH/s0KJT83dSLDvwq/z+Kf92LVTqTQRtTXOgg2Grgo6O5Aho+tg0Vaq25P
TunAVVQ459RB721Nqdg3Hcjws3WQLT1hQ8HJDpSh4F9rHagGDLjuXtOBDF9b
B+f07FZvntCB1nS8cCDT0ds3RNCOB2iAwoH3f0rUHRPakUZbihzoH3qk/f11
O9LtZwoHBizX6O4/3Y4M/82BB4GGYVYG7TiHHgg5MGz+SalcuX0kvjigUDf8
O6i3DeVpQpIDRmnmdQ3ZbSPxxoGJqv+ZOfi2YZ8QzZ035IDEiaa/lxzaRuKP
A29OGJ3L392GlbSeyYEfQTzTe1ptSI9L5sL1JMzc/Ua2DenyacGBf3MWzxRv
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
7mT0x/8fqyb8jg==
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -15.434476595077562`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox[
          "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
           TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{
         0, 1.}, {-15.434476595077562`, -0.00002173154266308514}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 12; l = 0.5\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxlXHc8le//PvY49t57R1uk8W6iojSUioiGUNFSKqUh0jAiidBUKaUy47yN
kL333lv50DA6v/M8nu9fP//0Oq86j/t+7ve43td13ak6ntxxmJ1Go9lw0mjE
n3dHvsT8zvuwWqXsocZZjfmY7Pqn2Py0HNQXmPVzDWpgMzOpJW27Hoz4/dcY
76+Oo93n3/R/XgL6h1J8RtLUcHSTVO9/a0wg5NfhC8I6auhZ1xB45cgacIgx
FRdNUsXf/nHzb8avh5+966922aii50rP4tvjprDP1a5Dkl8V/4xudAk03gwl
ITySZd9U8HysBG+YtyXsv/NgXYi/Cs68/llp6WgFz8L2CXzY+f8/h+Q5K1pb
OsCKX3d/pvUqok6Kzfbrx5yhtc1lwbpNCti663l2/Tp3KLQq6rytLo+vLSOb
x6zOwLVSg6ZgkMOzpg9+cdufB4u6kNaVN2VxNdwRUTp+CdgdL+x91SeDXArr
QiNWXYVjDkGKKvYy6CKzWu3lhmtQ6Xj+RkKvNJZKmCR83HIDhuxa6n94SaOh
6LKVGTt8YY/dGjgvK40Rgou/F+z1gyU1J7ovohQy+ebvrna4DaKZLzliTkjh
IW69rrajd+DQOM2kVk0KC9m13IdO3AO30nwN82ZJfMgM9J42CYT9nz71m0dI
YuGs0Eaf1UHg+TZGcYutJM5O36HzrAsG/4OekQ2qkrhgir/yzsYQuP6fHwQP
SqDTH79wsU0PoGWiZFo1SQJDWbsNtwiF4emRkbU3JDB/4oamklUYMCyZUl92
SeDUOPvws50P4WeNdISptgQa/LyaqLsnHF4KZ+wtmBZH+7F/5xP2PYLqcWwR
rRTH4JFLYHggArRn3d2Zr8Xx29AUV/rBx8AZ+fiIx3Vx/DNwvnjN4Uh4V8vj
v+WAOOr1/wrOc46Cswt3hJ8xEcf9vWf2Wrg9gbXDPT010uJ4r3tcufJkNBzP
LZzd90sMD3oY//d2eQxcyzA48LNGDL3cPWtPpMdAajy7iV+SGIacTEpdtCoW
Lo61bhAJF8N3JyYjJzJjWfG03/eilxjmHV96NXnNUzgvn7okw04M29xOO3ll
PwWThLp739eK4R/XRNNVG56BhdT176FaYiju+lOXlvcMrE5dGZYWEEN9l4WC
OWbPYefmoizTcVE0PXbyx83vz4Htzrks2QZRtHd+X2W+5QX8N95D80dR9Dw6
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
S23KD/cDjrD1/k7ao43/BzbBcBU=
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -16.098335638639213`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox["\"Log[Q]\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-16.098335638639213`, -1.9459037065384857`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 12; l = 0.5\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{3.86856932748472*^9, 3.868569437458506*^9, 
  3.868569695052246*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"204c7455-780a-466d-a3b0-c134ccd01987"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplotfull", "[", 
  RowBox[{"0.5", ",", "12", ",", 
   RowBox[{"0.58", "*", "2"}], ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868567261323811*^9, 3.86856726175844*^9}, {
  3.868567994286241*^9, 3.868568000431797*^9}, {3.868568122825556*^9, 
  3.8685681229856243`*^9}, {3.868568232394408*^9, 3.868568232792959*^9}, {
  3.868568397573884*^9, 3.8685684002074137`*^9}, {3.8685687814729433`*^9, 
  3.8685687934034367`*^9}, {3.868568931181986*^9, 3.868568963169634*^9}, {
  3.8685692503473577`*^9, 3.8685692965952663`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"258cd5cd-625e-443a-9c0b-62a27e4003e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
dcPeRr8aHWh9igtWPxpEnTLVSMtFj7hwf9qkPeGiKmT0Ki7kJZOXNwqqkG4f
b7iwfMHWy/ujqpDRr7hwfpmoZdPbKjToOCyOaPHvNX7N33izChk9iwsmUqoK
e49WIaM/c2HgWea5K5uqkNG3uHDwar7itwVVKHKjDpgLy8j6dwLjKmT0LvF5
9ccazlCsQkav5sIDZXS9116JNP3B5oKHo/XJjvJKpNNDyIX39x00D8VXIqOH
ceFItOes1oBKZPRtLsyetDL+2qNKZPQxLsxJuPLS5EwlXqXoBTkePDmyIKh4
dyUyehkPbGKSK7yWVyKjh/Ogc9ObEQ5TKpGGL3o8yL58fcq8UZVI0/XjeCD7
9oCJ0WAFMnoaD+4nnCobVV+BtHw+gweX9NWm6eRWIKOv8eCUX96oiREVOIYu
qDyo2Hnd/b83FcjobTxoXTptxqmbFcjo7TxouKg274drBTL6Gw+S5b3dOrdU
II+y8+7mgeLSHekrFlYgo8fx4OSZRSZfzCuQ0ed5sM1pzXEttQqkx093Hsjl
kGePesqRlrsviH9vmMK1UexyZPQ6HuDtdL2vGeXI6Pk80Dlfsn5VaDky+h0P
nG1mKv99WY4XKPjsy4N1Jrpzfl4vR0bP44FGbFvcqSPlyOj/PIj3X31/xeZy
pMMvmAemyn8emEI50nRpBA/8ZlX8UDUvR0bv48H3caZVcmrlSMvTKTy4aGIh
pdBbhoz+x4OqQ3vlR3HKUIMmjHhwxv9q3dSsMmT0QPH+X+05szmsDBl/AQ9G
JQyLvvm6DBl9ULy+wgCvpJtlWHucIuh58OrEx3al42XI6IU8cEz0THLYVoaM
H4EP2rLS3bikDOl2pMCHmmn9p8dPKsNAyi6vyoeTfpdnvtUqQ0ZP5IPRQ9Qb
K1WGjH+BDxtFOgbfhKXI6It8aEjXNV9aWIqnqPI3iQ+3dd3M+DGlyOiNfFiw
9q+i1+dSZPwOfJgm+pb036NSpOWpJXzomhu7UPlcKdJ01So+HBGecq3YW4qM
HskH/+D1C0NsS9GMJsj5MLez+b337FJk9Ek+HD6uetNjbCkq04I+H3Qr31Wd
USxFRq/kg8HdUK9znSXI+CnE1zM573ejtgQZ/ZIPmks21Pull2A5BYdu8OHB
mN/7YkNLMIvWM/mw3WyzrOBVCTL+Cz6EVouidG+VIKNv8sF9tbPb9hMl+PEY
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
CjOXVZ4586Au7n/+vnmR
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -19.29170756749817}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox[
          "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
           TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-19.29170756749817, -8.371603850507086*^-6}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 12; l = 0.5\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
/dFF7a8gN6kjShaZ9BjsgY17f++emyhL9DDq9z87//pnyxJ9uwdG76+6OPRB
luhj1PpE28fXNsqiD00v8PZCcpvlxuQ+WaKX9YLfyZV31MdliR7eC1W/j1cE
TZZDBr6o9EKxzeVxPjE5ZOh67V5o0JzGd0FZjuhpveAYKi/ANpBDRj6f0ws3
d/34ecVIjuhrvbBm8/lWiRVyqMAU1F4omb8rMcJKjuhtvTDNz9J97g45orf3
Qq3JjxmlrnJEf+uF/CSZloNn5LCXtvNu7wXz9K2eIlfliB7XC3NOHZd4HSZH
9PlecD6ocm/nYzlkxs8TvaDvIKgilSSHjNzt2QtejmMhRTlyRK+j1pN+nnOp
VI7o+b3w656by4pmOaLf9YL0dZ9SwUE59KTh851eKGhy1K/9Jkf0PGq9h3LO
PubIE/2/FxLNbctOScojE34JvTDXvVfRSl0eGbo0tRf2K8vtmTldnuh9veBm
+eSZ1CJ5ZOTpQmp/lVaO/VolT/S/XpDYnDB7cKs8SjGEUS+wloSfaHaSJ3pg
L9jdTE6rOi5P/AW90BSX9rvsvDzRB3sh7bfj8opAeWw/ShP0vaC+xdav7r48
0Qt7YbRie23nc3niR+iDy/u1tT+nyyPTjgSo62x7d7738viMtsuL98GESVa5
Rp080RP74NDHH9OW9cgT/0IfCCUUBjt9lif6Yh987a37GzBJAU/S5W9aH4TH
th7LElUgemMf/Iu+PvZRWYH4HfrA6entE1OmKiAjT5n2gcm5JJ59CxWQoavW
9FH1xC8i1lyB6JF9kBxTufKTtQLqMQR5H1QcWPhj8R4Fok/2gfXOo2mBxxRQ
hBH0+8BjypRLfecUiF7ZB359wjuWByoQP0UfqDhUrIq6r0D0yz5wTVY1FYhT
wEYaDl3ug7H5T9a6ZShgCaNn9sEkH/F9Pe8ViP+iD7RvCN+0qVcg+mYfeL81
q6zuVcDHR2jCpA9KOndrbhpXIHpnH6T8kLpSz1Ikfo0+eH3y778dEop4likI
ffBCouT6mJoiHvlIE9R94F+uPevCdEXczeih1H5XvxxSWqxI/B3U9wLSmelr
FIk+2geJqhOR9raKaMLQBX3grvU3knNAkeil1N8/UJqZ6K6IGkyC9MGAJz93
92VFop/2QYiqlbFSqCLyMYCjD3aYrn1UH6VI9NR+CJAI17qdpEj8I/3wpaU2
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
ZY0+/h8qfiea
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -15.415547282908033`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox["\"Log[Q]\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-15.415547282908033`, -2.2722395698744204`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 12; l = 0.5\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{3.868567270995981*^9, 3.868568006300459*^9, 
  3.868568126956265*^9, 3.868568242110577*^9, 3.868568418713187*^9, 
  3.868568811259831*^9, 3.8685689726284513`*^9, 3.868569260225767*^9, 
  3.868569305502961*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"3085030f-fae9-4271-81d9-add568005dac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplotfull", "[", 
  RowBox[{"0.5", ",", "12", ",", 
   RowBox[{"0.55", "*", "2"}], ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868566681226088*^9, 3.8685666951542053`*^9}, {
  3.868566754218526*^9, 3.868566756249627*^9}, {3.8685669234719477`*^9, 
  3.868566923821868*^9}, {3.868567003563006*^9, 3.868567003845125*^9}, {
  3.868567208997415*^9, 3.8685672310234127`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"5c0709c7-28e3-41a3-ae70-b3c223da4836"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
C7InpjtyY/4HBEZ0fw==
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -17.45133162693237}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox[
          "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
           TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-17.45133162693237, -9.309823497498593*^-6}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 12; l = 0.5\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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

           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -15.428402049355402`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox["\"Log[Q]\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-15.428402049355402`, -2.226973485410717}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 12; l = 0.5\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.868566703498781*^9, 3.868566765235565*^9, 3.868566927878379*^9, 
   3.868567012546822*^9, {3.868567218306554*^9, 3.868567240031287*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"4f780700-d124-4bd9-bf29-cc06d0f8f63e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"0.45", ",", "3", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.868471827177401*^9, 3.8684718279179897`*^9}, {
   3.868471942772437*^9, 3.868471983550932*^9}, {3.868472126315137*^9, 
   3.8684721694076014`*^9}, {3.868472213583969*^9, 3.868472234064374*^9}, {
   3.868472292297934*^9, 3.8684723172551327`*^9}, {3.868472436484049*^9, 
   3.868472456753438*^9}, {3.86847290572587*^9, 3.868472953322263*^9}, 
   3.868472993423767*^9, {3.8684730527701273`*^9, 3.8684730949198713`*^9}, {
   3.868473125527363*^9, 3.868473212197484*^9}, {3.868476982164138*^9, 
   3.868476983590599*^9}, {3.868477146297202*^9, 3.868477146953681*^9}, {
   3.8685393291217318`*^9, 3.868539330687092*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"dcc56565-3ff4-4b86-96d7-b9e70ab2baea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxlXGVYlFvbpbtnSMFAMED0oCgq4G0DYgeKInYLNmKhCDYiKhaiYIBgB42w
NyXS3TUMzDDDMEO3wPsE36+PP+d6rpGHHXese601Z9LeExsPSIiJiW2TEhMj
/3tfGBXS9+f7ok9NVyNSt/+HY47159id0YMHF3L1dC5NxTWj0bXxG0xgumOo
LtKbgkVNHh95kXPAqPRdyaiDMRbZa3G7Fi+E2G0veZPijPD58kr/qwcXg51f
adhkWyPcdyd85o3Py0B7ofXiXv5kfN76fM7dzpXQ8T2ndNrLybhftOKo//xV
0BwysoLtOBl7vGHKPfVcA8p8w9gwvcn4X0RH0Zq960Fb3y8vtcnw/z0//nPY
YMua3XDEbCP3nM8kPC122wbvI4eh8+1Ru+Soibhu8/uUiqUnoXji2SvthhNx
xJqgmrb1Z6HRw61aau8EfG5lQK/MLg9wP5cyUPBhPF4EvmrjXS/D/kjZtH0K
47G0/tIngTbXYBKfpax43QAf1VlkGLb8OjzPmTEnX94A5zEXfvvh4AOrrk/3
cnitj+eqz7NO3HgTHvqZT2Da6ONA5dmZf51uw1Yra5tdTePwqPxMx5Ldd6HO
q1e38NE4vF/GpLH+kC9cfbLMcYftOJwlMeWkwM0P3I2vPJ4qPg4/G/X3HFro
D7zI+MHbSA9nDaus8Fr0EFLW+kzr9NLDw0O+irJLH4FedtKg0FYPzxpUKPJd
8RgMG2U36Knr4X39t59r2AeAVGG7sVGtLn5C7Pb56ifwLlE+KO2TLs7o9jEe
v/4pvI1+E590WRcPdkq0vtv0DMIjtnyqXaeLzTqu/Zy+9Tl4PvLZ2mWki3e1
jXh82/4C0l5MW1s+pIMfCS/DXJdAqPgp33CgRAenCwalE/a8BEWMjl/9qoP7
+R45iw8EgUKtaYrsXR1swut99OfwK9i11/kj56AO3sE967T6+GtQe33pqsQK
HezX1Dmh6EQw3J0RWmZvpIP3nJrf9WlBCJx5eMQyQkoHXzx5vswtIQRuO1yo
U+Vq48cnouPMbd4As+T8Hbe/2viLW09Qd9IbOJrrsirmkzb+42pxLWbxW+hV
NdlT+0Ab1x8/s+9iyltYpZamV3pWG/cf+7nSZvk70PbcEfl4uzZmHOuYLvbn
HdRonl6qukQbzzj6n3Kq7XtQrGa8XDRNG688cqL9RuZ7mNaetFRXTRvvOvy1
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
           
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -17.627830027608347`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox[
          "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
           TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-17.627830027608347`, -0.08375415580984989}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 3; l = 0.45\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxlXHc8lt0ffvZDZpR6NYmkTdrj2xJa0tASRZOSivZORUVpESmlYUTTpnPs
7L339piVip75u4f++vnn/dwfb3f3Oec7ru91XSct26Mb97EYDMY2DoNB/tej
OyKgP+3DEus1Z3490J2GoxwGsk1PaEJIgCBKp3MCrpZF1sRaTIaIuLrgrFva
uKf5dEj7l1nAhxPmivFauMdMo7Vv6QLQqjxtPF1fC58qq7h3af9S8F85v2ZG
1Hjc7x40/fq7FaCh8cyEtWM8PrXoVPatn6vgj9ur10YK4/FAj7H9vXmrIVfb
PbTKYxw+/WKY3OOL6+DkeX+p3fBxWBz8o3Cd7Qb4njbD3T947P89P0g7OGbL
ut2Q2biotL99FJ4Uvc3i2qGDcKTi95SLazRx7eZXSeXLnaB4wTS/VN3/cPC6
p9W9G5zB5lxHX9aykdhl1cM/PJvTYChME5+4OQIvgTuqY4+ch73XFSZUCzQw
d/TyR76LL8NZe7P5G/doYPuRS7TfrLwK9x5P8a1tH45zhy14/3GNK6i5eHuN
vjAczx46Z1HCxhugemK7ccCo4dhXyTDj23Y3iLSPaXqeNAzL5KdbFu++BTfH
3glGTsPwXt7kproDdyCr5t3sHzrDcCZrolOnoyc01JroWdeqY2/ZvYuiBffg
R9Ko19ufquNMibLxlSVe4GkzzczSWh1LRHcU+Mvvg+T8557aCep4hnBI4R3j
B+CX6Xzcq0sN2w24+aiZPYSqfkmWZrQafkSs1mftI/Cpea9pdEMNp/9y1R27
4TG80L1iG2CphoU/WV2Bm7yhz+5OxmR9NTztx+VP+lt94CD/7OzXkqHYpld6
+v2OJzBj0iGDtqKh+H73eZht7QtbHo5QyAkdilM7hdy4PX7gm96qOff6UDwg
OJ29dN9TuDx38zT53UPx5PY/99MO+gNjew1v8qKheGer8/a1h5/Bhi3fxVf/
G4o9m3+OKzz6HPhq0c9l/ap4z7F5faHzA0BwO/SYR5kqPut0qtQxLgBWmBuE
jIpWxQ+ORsYYLH4BI0tPMP2eqOIwx99Pf319AYpuydck51Rx2hGjy1FLX0Kk
8wqHOTaquO7wCbuzSS/haEixdP4KVTzg8GnV4pWB4LrLwUWip4rVHX7oM9IC
IefwmJqTSqp4qv1MpWSTV+BUFDVkQZsKXnXo6PfrGa/gw5HnZblfVLDNwfAi
0zWv4ebF+VufXlPBpw50RyrkvIay8co1DzapYK/9U31z17+BR33h6K2OCg7Z
53DBK/8NcEoOL8v6o4xT9obs3rzxLfyZHnDuZ4YyrrETrBhR/Ba8Lk9aq/ZM
GffbTtKr3BIEUT/rVo4/oYxVbA8M8S8Lginbkp+qmSnjSXvedNtsD4Zlgifa
9eOU8fLdLfnaVcGQm9w783K/Et5po/OlxSoE/EQQ2JGnhF2s7byDakNANlsp
e0SwEvbc9fKsw+5QuLBx5GHGNSUcZNWwa3pjKDRPnRviv0sJJ+4cv+yH3Tto
tJEoCOYp4aod5AvfgaUD/2j1MCX8a/sz/qkDYcC6W8E6/kMRK2yv6ZgvCIPS
maYrXuUqYt1to3PF9uFwYf6WviPvFPGSrTs/oq5wsD93bmTmLUW8zdL34VXH
91AxxOrP50OK+NiWilPG39+DV1/yED0zRWw8+c40zvwPwNViDRmnr4gLg6c8
bznzAd6Ou1HlLa+IbfSzVNNjP8C0S6mPPToUcGeQ/dUg0QeITDe+LM5SwKcn
DfnlvugjfNdX4DeEKWBuUDBxAh/hWZxi0tx7Cvi+nlnZ2q8f4eLXziOS4wp4
7Nt20+myj/DkXH7HdEsFHDLRLVZl6Se41XVkQcZ8BTz3jd5UIiXg7JaJFzPG
KOAU3XT/wsRP0CrZ9HsqSwFveL1f5QvrM2RKQ0XfW4fgWh3elUcrPoNXYgJf
PXsIdnj1+udJ188grLodfO/jENw/wXjvttTPcNNvofsB7yHYNbC5ZD7vC0RU
Vex7dGEIHjrB1WSUyRfICDQaNnLvEPzs5YQY8c0vUPYz9UL36iF4snby5Npv
X2Bq6vvn6oZDcNQL26dIPgLczue4u/03BK/UYim/WB0BP8Vxu1Yzh+C8gBeX
rt6OgPKAUeu3CuSxFXm82RHwNfmLf1iBPBY8r7c1VoqExaPjn62Jlccnx10u
nrg+EvYYj/00I1Aes56PWyV3NxJaDpWs2nZHHt8di6IEeZEguWVakewij0c/
syZOJAp2fvr808lGHgePkfq+s4gCmZ73JGszeTzb31/R834UpLwyGH1rljxO
Gr344tGiKBg1QXqmb4w8NifL87BoELAX/vWRk8dVo87vMdwSDWGXXHae6ZPD
B/xGFak/joaHsWMOP6iVw78041b+Lo2GK+ljGK0ZcviK747I0hExMKfv1O+j
EXJYSVOoF70tBpY+aDOc+UIO+z4hf2KgI/fWW10POWzwZPLIR8Ux8GR4TLHm
OTn8zSfu8T2VWDhybNfuBYfk8G6ftcPvrI4Fsyxdz2tb5XC/d82Dm9dj4YHZ
hze/jeWwp7ej2jUcC0s+rO2/aySHdamCHQse5j0FFhPkcDzxtrNz4uC84c87
C9Tk8ObHWp4ux+JgYI7kqhlTDnc8+qR47F0cmB0oU7v4nY+JYLl9uC0OdBNM
n5fV8THxcfIHteNhY3C/55Y8Pn7/cJ+b3a54aPA0Xdv/lY9NyPblEw9K35cY
x4fzcS3xdTuK4qHsvU1n4DM+dnkwkmOpnAAv3R58DvPkY8UHwVctzBJgpoOS
RsVFPg68v4C5zjUB1sZO99Q9yscL72ddMkUJ4HHI0fe+DR8XellJVwgTIPHq
0vhxG/j4kBdZ8L/Cxm7pqeylfMzwItqT01eYdKdws48BH1PLDf0KjI/+1Ve1
+Xj6vYABg9avMPZum99tdT5Ou2twapoWgiUu6VqfOHxsdTfp9yQrBJkmhbLf
v3n4l+cmZx1vBA01vEzLNh6+RTUEBNEx8RrF5Tw8ND022oOHYXvF/YtHMnm4
ZhX7tIIOBvZu66fa8TwclLZmrvsyDE+eair1hfGwM9XfMXzbWnm09jnxB9Oq
I1zPY2BlR+1r9uJhhVW6LixfDBlpqV4cVx4uTSUbBoayz+wnS07y8EvjyD5J
MYYJHyy07x/kYcdU6adzPzGsW2NZKt3Bw/ONTY7/VUmE4MIbNq7reJibSi4w
EY5PUbLXXsrD+SvLv/9anQitD1BguSEPP00Z/+H4wURYsGJ4/BtdHj6wkmwo
iVBVprn3zkgenpXycbpjYCKkvN+/3l2Bh2UrhN2dOBGUQkbN8JdycWby8rBD
tYnA0MVx6T+4+DEZLqJE+FK1JVSuhYv3JBdN2fdfEpTzINKmnIunrhjd2Tgn
CVY8nv84O4uLB5LIhpMEeM1mnjni4hTydceSIFhZkNT6iYvvkcdxNwmyXz1w
f/CGi3cuX9Je8S4JLuVP+m+LLxdPTLrxdmtmEnzIeG8wxZOLfy7L21/SlgR6
D3Y8HH6Vi78mjpi4iZsMtusvsoed5GL3ZWRDSoawjtvLJ9pz8ZbEoFfrlyaD
kZaCxlprLqbKz65kEIzwWnF9Ixd34fkTVp9LhvOH4r0KVnFx9NKrjek+yVCo
N+3bzIVcfA1nvjCOTIbDfdffv5zBxeZL1YklJ0N03oahejpcrInJhpUMQYnD
oxNGcnErvKr7qpwCvJ4VR/crcfEn1PVs0dQU0DWcydZicfFFAr3EmqVA8RjV
Zd1/ONgUXRgz70AK2Ab8+pPZycHDqIBJgY97U/pi6jm4/qvy01kvU+BQ3AJ+
bAkHv6MaWgrMgxpmViYHn/r6XHNGTQrsWCz60oU4eAW5fcIUULAI+jk2goOV
v84kKk4qbI2J8tgTwsGVi89sC5qdCqOjo7d/ec7BbxLIDUwF1ZKfk0c84uBj
i4eUBTqlQkHW7lL3WxxMgEuigqRC2tN3BoqXOVhusd+W56Gp8KDLUP2ZCwcX
xzcNG5ORCj7MTgtw4OCARVOLfVtT4Se6kNq7m4Md4p2JipAGUG6w6r0lB8+h
XpgGapu63l1Yy8GseK4asWbwXzitaMdyDs5duL7AyyoNMrMUH6yax8G+ZHk8
mwaNKXPTl07n4H0L68w9vNNAN69rtZkOB8+M01NRiEiDC6f+/rXR5GDxAqdc
t8I0KD8a9cFVlYOp9P2eBgYO8mujeBz8gCw/SumgP2t7cL+YjYnDUGRNSYfJ
Ox+8Me5j48kLyIKUDivvTtR+IWDjPzGVtyT70uHGaIZIvp6NE8lwuZYOE966
q14uZWOPGAf5vwHp0O35Zjk7h423zf/y7eTXdJg28dOxB8lsrEN0z19V6bAN
n784M5aNv88jEzgdWsrMVld+YOM48vM0voFZXU7kvbdsfHMeWRG+wc6WKW82
PWPjjdFjr3dafIPq5j6h9iM2HjuPzOBvsHCtlo/0Nht3RL1nt935BlqFGnta
r7JxxFwy476Ba9Wz+ZVn2PhKFBnQ32DGrXZupRMbr51LZsg3GDPpZkjLATYe
GVXAqGVlgP6RI4oSazZumkNGdAa8ffNDdbwlG4dH2l6qWJwBRYUJ/uvXsTFR
bIkIzIDx4a0+bivZeBVZrk5nwPa+kvachWysRh1wBiiPWuk8dhYb1xDVL/9z
Bvy9tkH77GQ2DpqdQ5ww8ec/7K+s12Jj54jhoqyeDBh4s9p1439svJRMD8VM
OCxUlctTZWPFiDdn0vUzYYhQd72lHBuXGfUSO5gJX8oXQbuMhV9+IRecCfYs
6xTXfhZ2JOH31Uxo/lqTNqWXhReQx/E8E2aP3zGzppWFuUbkwJQJRnppHT61
LJz/efvvmMpM8J24rt66lIWJZCPemAljF54STc9l4YOfO05EDM+C6T3SifJp
LGw0i/zJgicqonXdCSwsI6rzhw1ZsCPh886qCBbONCQLahbcUsULi8JY+DHZ
bm9nAU+pv6L4NQvbGm6ZOTk4C94sO65d78/C0z/5975NywJtrdvM349Y+K9B
a7hucxawTlfbqXuyMFWemdkw/M+SOQtvsPA9sp2Ny4bqOen7Dl9kYauPZIHJ
BmV2Vt2bkyw8yUDu3egd2ZDrW+bV4cjCfR82OPieygbLuKhDcw+wMFUOHmXD
ErbTFg8bFr71oUHw6FM23GhevKJrKwtbEl+nnp8Nwh3eWps3sLA20T28urOh
zGRyXYopC3fPIBMuByLSK+2XLGPhaDL8JuXA3+Dkz3g+C7vOWPtmyKocCMWz
gtcYsvAGCkDkgM/u9wvqJrMwUawIhJoDCbXdW89NYGFytdee5YDGj4rv40az
8CdyufE5wNe59zt7GAtfoAIwB0zfWlteVWJhs+kyLcmfHBAeTmEv5bHwsHCT
hrPDciHaxamHK2Pi+mkkAMiFI/bL+MX9TPwurNzmpHkuWG9YCSHfmZjcvV+H
c6F9bcRNNwETryDb0a1ceHxNXODYyMTK08gDyQWr/g8qu6qYuPKd0OpIKvH/
D31kuKmYid9QDY74+4IfTLXIYWLicKsOMvJgsXFmr2UaEy8my9+YPGAsOuu4
FzExeRp7F+bBtntqfmeimbiY6JaN2/JAFK5/8PFHJg4IJT8wDx7Mu/wtNoSJ
Hab8IRBfHoRqysJbA5l4LpluH/MgMipSWdOfiVlTbmpU5OaBtaiucvNjJs4N
ySux7MqDqGcVPO+7TLyOQI8dnHzocZp6o96NialwU8+HVK8Law2uMgfxXT7Y
HXixzv0cE0uLTwsmGuTDUPC80O7MxM1ENW+BfOj+YZ2/3pGJMzeTDTQffEI2
Log/wMQfKDyYD6brst/P3MPEj8nXHc4H/7Ebdd/tYOJz1IHkw/f9Hnenb2bi
PZs36gW458OrWrOmqHVMTMEjn3yQd3UZbmrCxNR2vc2H/HnjR9UtZWI1qgHm
g2L9WcH5BUw8sKnptV9KPvysKXPRMmIO4s18iMkMjsiexsQpJPxozIeJI12f
XdRjYmKtBALKh9L8/ybO1WLiuyS8k+VD48PFy/9oMgfxaQGstG1ojxvGxDuL
yAZWAOemaai6KTMx1d6nFMDZcwrhO+SYmAAXBGQtgH07VWJmsZiDeLYA5sd5
6KmLGfhn4Tpb1W0FcOqjyveB3wxcrkYilAK4GbBIvqWXgb+S7dOlAEaZlx8q
EzAG8W8B7MhIlstvYmD3wtp6hQcFoLJKXJ1bw8BH1UjEUQAN1/1qisoYeAu5
fR8KoLKilFlXwMBUe0IFcEkoW/o9i4HHFx614ecWQNXBa/f5aQzMozawANji
9m4dzMBdFmQDKYCBk0WrTWMZg/i6AIYNMF4c+8LA0WT5ly+Ekz9M2wPCGdh/
6GsCERRCcJz/yNIgBr5mYeZ/eWIhlF9QmDw0kDGIxwuhuiJq2EZ/BjYvIF9Y
CI0Djfk+3gxMldeNhXBF2GzZ4sXAmhaVxERFPDMMns+9wxjE74Vg1LHu5d0b
DNyar13192IhzFzZtK37MgOT03W0RyG88A+J23COgT+S5etpIbQITifHuDCw
N4X3C+Gm6qJDk5wY+DxVwAths9eP10/tGZg4DKIDF8KNvtjjGvsY2HSDeOSJ
skLoZWR+e2TDGJwPCmHprIMvNHcw8DAKMBfCNrOB3682M7BQRUB01CJY9vAH
MjJn4HoCbTiqFYGjV+tAhhkDU3BbqwhKNjj77l3JwKFk+s0ogqKHts84wMBe
5OctKQLtaeekwfMZ+KT5WA37dUXwyCv4y2YjxuD8UQTrZ3fFcmYw8HISztoX
QdXFrQqx+gw8iUAzb84UQebK4QHOOgysbE4W0CJoEO49YTSOMTivFMEXc79L
f/9j4MrcfiJDimDfVm2UPIyBEQkXvxRBRsapqQ9UGPj1eiqioT7NMOnAEAa+
Tc03RfAsaeDsMi4Dk2iptr4I8thuFuMZDGxJFcAisAjZe0XujwwtIuGYlNgP
h7gblZ0ypE1Mk6OUioFvLx8c2SBDcrn/ESdcDLPGOtQ+LZOhHiWywxRD/DHd
MR45MlREpsf8Ytjm9WrnzWQZiiHhjmkx6LReuHc7Roae5ZAFrBhmTHP49OS9
DLkqkQsuhqH/mUd/fC1D9uv6iBUXQ3qw4ZMiPxnaQB7HtWIYu8V4rcxLhuaQ
cMKrGKbcr/5m5CZDo5XIDlAMEatceM4XZYhEe+bvi2FD3ntxvLMMEc2qW+lr
MWiJNgeqOMhQTjb5Uww/ozf8dNgjQ5/Jdl1VDMs8IxoKtsoQNY53FINDWcyh
Zetl6OIdEvAVQ68k5mrsShnam71rzTd+CfgdnKO7eKEMrVYkK3QJfC3NM8sw
kKGZZDvULYFR8VYC60kypEGWZ6MSaJ8RL5aMlSES/CQvL4HEAfaFN8NlqEGB
LDAlMMH4oN02RRlKJ8fL3SVwwn95sDpbhsLIdnO0BCSZiqblf6WIKgcXSmCq
/v75b75LETGcTrp4pwQ27FU5daFNiqyJr1vsVwKaeV3CXbVStJIc34JLwGoa
F5mUSNFkKuFKwKnqUsKCbClSJcMvvQSee777PidZin6v3n5jXmkJPE3q27go
VoqqCDTc31wC40+11q7+KEWJ5HjUR7yfOfuubZAUvR1CDrilgDQ/WV97LkXU
coeWQk/SBtOwx1J0nBqwS8Gla6JJvYcUbaMAUynw5hyyHH1dipaQ48fiUsCb
jxzbc16KdAi0PWNtKfhZvH/w/oQUDbk1zq5nRymopSdF8xykqDeDHFBLIXHY
nur9tlJUQraj06Xw9b6dMG+7FMWR8P5mKew6k6S83EKKXriTgKcUbGsfDU8w
laIbGWSDK4WCcg2FZUul6DCB5g98LoVyBf/OnLlStJEsf0mlcKDy+We7GVI0
jxowSyGCH2nD0pOisUS3fFVXChXzHnUFj5Uijjz5gcT3JQ/dukNDigSmJGAh
1ms3/qm6shRR6aZQBoeiCqNLuFJEwVPNMrAx3RESIJEgX7lRz6z1yyDEl+Po
/FuCLlMDYhkozF3GtOiWoP1E961eVQZp1r575rRIEHW8W8rg66qYOzo1EkTB
v71lsLBv3+VRJRI0gi6A0MC5uWBUjgRJiGmk7EoZHNgyKmZCqgQRwy4xYZXB
q+wVQqMECaJe97wMptcuEa+PkCAKXoWXweigvQnHwiToIUX3EN8nnbLI/7UE
nU3XJ1pSGbybN+lUgb8E7eaTBaEMpj5ROqL8WIIoukJQBl/c/Udv9pQgCr70
lwE+nuf68oYE0fxKOUjdn736e1GC+km5YHg5oN9Tz20/JUHVFN9SDpePxfCT
jkoQRQcYlkNwp6/ZrIMSRPMv5XCv13Rp2G4J8iTLy4ZyuFRh0jljuwTRfEw5
fPiybnWchQTtuEEOWOWwdvW4XearJYjmZ8ohPdprQtdyCdIl6dPb5XB/dqi/
10IJovmaclC4cT4LjCTox3UyYMpBd9i8sD9TJYjmb8rBKnTyikhdCaLH2XIw
OPTO4+JYCaL5nHLYVGLiYT5CgtzI7Wsqh7+995frq0oQze+Uw+5Li8IV5CVo
Mwk3mBXg7jq04A9Tgmi+pwIKz/0N7RCK0ThiGoweWwHbklqhrU+MaP6nAprm
izy6usSok0N24AqQC7H1FraIEc0HVYCm9/5dQ+vEKJIcx7ZXwNx9dg0zy8WI
5ocqILu+VGd7gRhd5ZAvrIB18pv0b2WK0UGKL6qA5R3O35OTxWg9VaArwIc3
5DwvQYxo/qgCRsS05lhEitF/HLKDVMCm73/bXr8XI5pPqgAxf3U2K1iMWq6R
Fb8CHmr8PX/wpRjR/FIFnP69UFzqJ0YfyHGiuwJmPN+0dv0jMaL5pgooUPpy
NNdTjM5fIweMSuiMSj641U2MbCn+qRIu24xbILgiRqZkuEyqhPpHB1uvnROj
aRQfVQnPG7Y66bmIkTpF6FRC/tuUyiJHMfpL8VOV8GvpzUnuB8WojkUmcCXk
hr21MrEVI5qvqoQRxQZnla3EKOQqCYgq4Yh0jWvtFjGi+atKGF4482KUuRid
ZJEZXAlS7nSHJ2ZiRPNZleAc8Hq96woxouiluErwNhox9fRiMaL5rUrQuyvh
ucwVI6p9VFSCjimv6ayBGNF8VyXsSapLdp8iRuVXThARXQk2bzeFvdAVI5r/
qgKG1azApHFiRAxPRARWQamyfXDXf2JE82FVMCuFlzJumBgdvUIecBV8eMPr
36ksRjQ/VgUr1vmveiEnRhQ9Yl4F04aJIntZYkTzZVXgl31orYlEhKj0OFwF
h4uWKQT1ixDNn1XB9e0/+of+FKFCEk7eqoLKs781rneJEM2nVcECi4rDzDYR
IqvpjbdV4LN4mfRGgwjR/FoV+C+uyBteLUKHGOQXVkGd3d7WsFIRovm2Khg+
5vMq8wIRosb7xioojAn5/TdLhGj+rQr2zTcYCEsTIQb1Uw2mqzZuckgUIZqP
qya+b5SiYbwIZZPtckw1VEpC9VhRIkTzc9UQaDUrtOqjCNH6ZzXkj+j1+/pO
hC5QfF01/J4+RRbyVoTsLlUsPrOtGjZKllUGvBQhM4q/q4YromeGAf4iRI2n
LtUgvzJKKdhHhGg+rxoypqgci3sgQsKL9vHOD6qBW7/AtsxThGh+rxocrlW0
it1FKI0sBx+qoX2nN2fqdRGi+b5q+OI5LXHvZRGi4HNuNaQyD2i/PSdCNP9X
DY+WqE7vOylCu6RkwlXDvfMKHabHRYjmA6vhrIWZVdAREZpEAZga8Bv4cmvo
IRGi+cEayLbbec51rwj9kpADYQ3ITI2NmLtFiOYLa6Dbyi3u5k4RwuRyV9aA
KNZixMitIkTzhzXwtDht3aeNInSbhAd7asA3YOI+y/UiRPOJNTA7+4MdZ7UI
baUG+hrgG0eaxxuL0GKKX6yBtS1uMy4uEyFtYvfqn9ZA88tb8qsXixDNN9aA
VE2nedx8Eeoh5d/YGjDSzUyVGYkQzT/WwO3Zv78IZopQLEm3ldXAlcvTo2um
ihDNR9YA846kpGqSCF2nBoYa+G3QP6xZR4RofrIW1o6LOfdnvAhZkN1SrRY2
z2tTVR8jQnMpvrIW7LsmV83/T4RGk/LQzFpweDq3wX64CNH8ZS281krXfzNU
hNpFpGGglpjnHsd1KokQzWfWQr6Ri//CISL0maSLHGoh+4Re6SOeCD2h+M1a
WJ1z9bCQJULU8brVgsxg94FDMiHaS/GdtXAyyj+nUSREFBx6Uwsx88a92T8g
RDT/WQsFvdn9v34JkQYFKInfBz3M8PghRDQfWgsj9x/UNugRIrKbmzTUwpiW
JfJ1HUJE86O1YPhQ7bp3mxCFkXSHtBaM0hqe7mgWIpovrYOJju+3TmoQotNn
X09dMboOjgRejmfUChHNn9bB6kCrwqZKIVpJlvv5dTBVuiWgoEyIaD61DjTO
O0/LLBYiVYpArINhH7Mu5xQIEc2v1sGxAscXVblCRAyDRILUQfAe58e/soSI
5lvrYJxa3/6RGUL09gwJOOrARZOjaZImRDT/WgfpjKTIy8lCRKKNqPd1MHeJ
6cpULEQ0H1sHW558zhj2VYiWkOGcUwfdSlrrj8YJEc3P1sHtE+HlxdFCNISE
fx3E+y+dcTKOFCKar60DiUPA6MTPQmRPxUs93Pq0tNnkI7F+CqDUA4o/lVsR
LkQU2lKrh2FFexpPvhMiqv1o1kObrqbeuBAhovnvehhx92tg4Vsh0qcGwnq4
Hr7Xxuu1cDC+6mGvyoQ9OwOFSIUiJOthzPPhH2a+EA7GWz0M0V23aehzIfpN
oLkTq+rhiV+FheSpcDD+6iEtLuvTL18hqqT0zHr4pDvzQr+PEFHjklU9bHmk
Gs31FiKqfNoR31N6wn7cI+FgfNbDybG7/FY+EKI3fiRAqAe1/dkWLl7CwXit
h8eJCQ8/3hWiO+Q4cqUe1vF0HP56CNElKn7r4Xk/q3rtHeI8RpEDWT0svbig
J/TWv3iuh5C62CANd+J8SHn+WT04m9iredz8F9/1MEdtsqHKDSGi0j+sHmb0
lSj7u/6L93oY67z0/ZxrQjSBCph64BSu0Ky+8i/+60Ey9rWlx2UhkifhdFY9
VMvPdFh96V8+1ENy0UNr9YtC1LuDbND1kDDad277eSFqpPKjHgTXO8XfzgkR
RU+118NEmBMRcfZfvtTD257RB8LPCFEsGb79xPpGLPrv8+l/+VMPcx/rFyaf
EqIAivBsgOp1J3zqTwoRRf8oNcB51svj8sQzBQeHNUBi3aQDS1z+5VcDqOje
On/JWYhI9uPlhAZYK5kak33iX741QDfr5ISJxDNFrxg2gI5NSuLt4//yrwEu
fDzgKzkmRHOpBtkAIy+Hfj537F8+NkDV9Hx1HvE8Zgd5Ig3AjFRMfOr0Lz8b
IDnEMxGIZwrOWDfAjwNnRvUeJeKNytcG2JzbWhxCPJPdxeoI8fytpe/40X/5
2wArhecumhDPFD1wvgHQ5sCzk47+y+cGKPJc2zOceP5C0u+3GsAjd3udytF/
+d0Ad/RDNmkQz7R+3gCzP/It9IlnavwOIPbHd06NKfFMteOgBrAa1SNxPvov
/xsgz7Y2Oox4JtnWEVEN0PTupXrf0X/1oAHGNeerGxPrW0OOt6kNcCLr+9dA
p3/1oQHiTS5oqhD7Q+v1DRCb0D7l5rF/9YJ4LvMaUCD2e0QFScA0APt9wXX/
4//qRwMom/WULyTOhyoHPxtA/6pOfyvx3EvVkwbQ3R7Y8ow4X/LrChiNsIx5
O9iOOP8Sko6VawT+se8ms4n4oP0BjeDpWZ6qTsQTrRc1QuSQhZNkxHM4SW+P
bYSFHK5zPxF/LwZIAaER2plDw8VEfD4k6c5pjZC5ZmqVMhHP1Phj1Ah3Xo9g
TCfinVruwkbw2H9da8cFITpMBWAjPMYaKx8Q+WFDESDEn1fbc7iCyB9aj2qE
WaXtz6YS+WZMjhfbG6GqWKf+zlUhmkcJvo0gD+eNhER+TqEI50a4G2IS4Hxd
iGj9qhHKMvL0xER+D6UOpBHuL12fd89NiDgUgdEI53K7fA2JevGH8j80Qujv
VM+G20IkoPSuRrDltoT7E/Wmmix/DxuhRrZCtp+oR3kkHebXCKoLcq8tJupV
EgmPAxthnrf1Ui2intH6WCMYyeN5akS9C9pKEhCN0Kf1zkmVqId+ZLrFNMLW
83mdo54IEe23aISO0MQwIz8houBneiPMj1WM3eEvROTpLstrhLHe+sM8iXq8
n0A/L0obQYN3GeUS9Xo7eby1jeD+4gAa/UqIaP2tEQbcJ444/UaIgPInNQJv
9c+M+iAhMqQEikaIeNxbaRkqRLS/oxF0PAzWVYYJEa3XNcG3d7ETHD4IkQJJ
lwxpgkv43B55oj9JSfg0tAm0bm+Wj4gg+pcGSQA0wW8n9bGORH+j9b0mmDbD
5aUR0f9KLbtmxOk1QbGB7hM5oj9mkHTEjCZ4vzaB00H0T9pP0gT73FPbyon+
+p7SA5vAfd2XlSVE/31ZSgpyTfApoWdMHdGfab9fE/iOT3f5ky1EbhpUgoD+
vEvrR+ULEa0fNsGMXghZVyRERyxJQNgEsT2Gtz1KhWg3RZg2wde2nX2VFUK0
ifKvNBHx+6V5do0Q0XojsR4N3T3P6oVoPjWAN4Fn42X7YQRemUoFTBNs/Xib
5UPgmXEaJIPYBFXmfybrdwoRrU82wfRN1i3pBB7iUoRnEwRtNJ/l/FOIBsjt
e90EOttXakz/I0S0X6YJ/hS/uvv7rxDRemYTHI5PCciUCFE+Sf/GNcF9Rtvq
MKYIJVN2hiaICF50158rQpGUvNkEPuZNjn7yIkTrn01wNLG14w2BD6n2Vk6s
bzpwMIEfKXq1vgmiHhbFtRL4kvbnNMEx1dNqozRFiNZLiffZ9cjtGitCJHs8
5U8TtJ5oef5OW4SocippgqK8v2XyeiJE0ZecZlBRi/zoPEWEqHFGsRkql3lN
654hQrQ+1Az6T7+vOUHgaZLtkBvVDEq2ekp8Am/TelEzWPNdjgUReJyiB/Wb
4Zs7/8zW5SJE60fNcLTy74RhJiL04xdJGDZDhOaW47VrRIjWk5oh8bfS3sgN
IkSFi0kzXJ2u+NdviwhR9Nv6Zqg7Nsbg7g4RouCVZTMcUmUp3rMRIdp/1Azo
zn73Z8R8Quu9zXB4QUtQLDG/UJ93uBnUN/Lsmx1FyI2kt040g//JJdmjnEWI
1qOa4VjTz9zdZ0SI1oeboSf8+LHPF0VoN6VPNcPMJdJP6q4iRMlF95phT0/i
/SvEPEbrVc3QH1KmIiHmNap9PCd+P9xM/8ZDEaL1q2aAQIXa0b4iNO7XYSKi
m6HKiz0t8bkI0XpWM/ie4ww/8VqEaP25GTY45Dw0DBUhWt9qBkupUqjsgwh1
niAPuBm2mttaVkaKEK13NcOf2VseJRHzK61XN0P7jt37o5OIeKP0r2YwG+hI
j/tGxBuZHoJmqC9fHZ2dK0K0HtYMxgYpszuLRYjWt5uhS+PWkhFVIkTrY80w
+VZC/gZiHr9K0gu8FlBXcezwJuZ1Wi9rgcIeX/eubhGi9fAWkNMwfLf+lwhR
8GVMC/wSKm34KhQhiq7XaQF8Unh8IVOMaD2tBZaafFRL44sRJZ/PaoF3h6um
WiuLEa2vtcDlXFXEHi5G/1EFtQWqHpenRY4SI1pvawHdpcHLTmmLEa23t4CZ
c/tUY30xovW3FnBe0Xl9/EwxaiHtvDYtULDyj5n8XDGi9bgW2BYw96RssRjR
+nwLpC2r47ONxYgaP11agOsgFKmvFSNK7j7fApYX7pgbbhIjWq9rgW8v3WS7
dogRree3wPqRhXLee8SI1u9aYFXwgoM1B8XoPAmffVvgiYa7poGTGNF6Xgt4
PXEcff+UGNH6fws8d7xrz7gkRlT4fWiBsreXmedviBFFl0a1gFgpvYbjKUa0
3tcCiVllIt9HYkTJ02ktYDxLc9sSfzGi9b8WGH+xpafnlRipU4QR8b3zrsS/
eydGtB7YAu2SiQmnvogR7S9ogcDdzG7zeDGi9cEWqBk51XR2ihjVHSMJ+hbY
x/yUqZctRrRe2AJu03yc9IrFiPYjtEL3+rTZRtViRLUj+Vb4tEtXY32zGIWQ
dnnVVuh466rk0iVGtJ7YClumhY4I/iVGtH+hFdSczGd2iMWI1hdbQfPT6E3z
uBJ0kix/01rBPyXs3AMlCaL1xla4luz1WjRcgmi/Qyv0VJlmO42VIEqeWtEK
aRGrOn9OlCCKrlrTCvnnf0iuzJAgWo9sBb0pL2Vj5kmQHkWQE88PXnWmLZUg
Wp9sBcv+uQnnzSRIiRL0W+HOZM+jsFGCaL2ylcDf2RLlnRJE+ylaIThE0a7T
ToJo/bIVVI/v9C0+LEEVJBy60Qp+htHPMl0kKJvSM1vht+EIh5yLEkT7L1oh
7vluYfVNCaL1zVZYNsrJ5O89CXrlRBImrfDFUWOdtq8E0Xonsd/FI3jbAiWI
9mu0QqjVtCO+7yToAlUQWuHsWs4FQYQEOX0nCepWmHMMZhojCbKj9NBWQGdd
roR9kyDa39EKzo8NHbQLJYiWB1pBsaW/LbBKghZSdEErhH9Y+NOgRYJovbQV
huQdcs3ukSAtKkFaIX5hk8+JAQmi9dNWmKEp09djSRGfAhytcOK2vGGbghTR
emob5Nsah34eLkW0f6QN8hI67t4ZJ0W0vtoGM2dPqjymL0VFZDj/1wZDM7Rd
7WZJEe3fbIMW99839yyWItpv0gaTN36qczCRIlp/bYOjN/Zcv2ohRc+I7Fgz
tw2wm+j4651SROuxbVD2zfVl8T4pov0pbfByepOSqpMUnaL02Tb4flgYvvWs
FNmTdvvNbXDy19tLoa5StIvSa9tge3HCGYW7UkT7WYj3ecp5n3oiRbR+2wYL
HU0KegOlaDYF8NvAP3y+tnO4FOlRem4baI30vMaJkSLa/9IGxtDbE5AsRZTc
6dYG6bksa7NcKaLoz7ttEPTMLlNSLkVUOfVug+TswGlfm6SI9su0QfirDVdu
9UgRha5et8HOnt6vtn+lKJuUE8OI/TRl1K/iyBCtB7fBzfV/a+aoyBDtryHe
N2X1J0NNGXpF6cNtkHPcxnKBrgxRcDezDUx9fZPXzZQh2g/bBuZm2/sOL5Qh
2o/TBlzNvlrvVTJE68dt0N8VdSnXQobsesiBug2GPerLVd0lQ7Se3AYd4ztS
rQ/KEO3faQM0q2pX9Il/+nIb2Lkx7o25JEPU53Hb4dcZzy2et2RIiwJE7eB/
4/PbIY9liPb7tMOtwCeX7r+QIUpuGtUOz5fvK9UNkyFq/J3QDnjZnNcp0TLU
TenR7ZAWpdfimCJDtD+oHTjnzO/q5P/Tp9vhbvXXpy1VMkTf32gHnQWuvE9t
//TqdlBlB6W698kQ7Sdqhy2rZhQdlv3Tr9vh1Filh2FcBqbKlXU7uGl9tg5R
YGBaz26H96q8tHdDGYP+o3Z4Gnc57csIBqb17XZQb/WzShrDwLuOkIJQO0yf
nOdaMoGBab27Ha6k313Yo88Y9Cu1wzyxxQXFmQxM69/E94x3WzVzDgNPohbc
DnAo8MH2RQxM0S8BxN+/UX2P23LGoL+pHV6uXBUab8rAtD7eDmErgx3/rGdg
Cr5EtoOTZtDb2VsYmNbL28HjQtjGszsZg36odsjv0T6csoeBaf28HTYInb6r
H2RgTNLpxe0wVldWddCRgWk9vR1+qBhNSXZmDPqn2sHmgkul9jkGpvX1dmjO
0Wm9eYWBKXn6RzvEcMJW/7zJwLTe3g77Jx3l2HoyBv1WAng0Okel7CED0/q7
AEo19A9Z+DHwVnKcURFA6M4WxYIXDEzr8QLI9rXt3xLEGPRnCeCNC0u3PpyB
aX1eANOtdO4fjWBgbWoAFkCs0uSFnHgGpuCzkQBMOcdHP0tiDPq5BKD60cpw
cQYD0/q9AMY/MzvTkMfAPWT4rRbAoRs+3bdKGZjW8wXQuz7o9vwaxqD/SwDX
i8rNu5sYmNb3BXA6xH3Omw4GjiXpjQMC+BmouWjvDwam9X4BdPA7rfQGGIN+
MQFs3LDzUa+UgWn9XwA50VkN8VwmpuTB6wLITHq65K4iE9N+AAG4Pp0RtF/9
n79MAO/sWzRXaDIx7Q8g9mvR+Ac6WkxsQRFOAkjZtVxJYRIT034BASgGh1//
M/2fH00AT69/G2idzcS0f0AAeoG/bKsXMTFFd2IB9K3wxqUrmJgqf+kCuLBR
Q7l09T//mgD6R5ebVFowMe0vEIB2+Qr7pm1M3G5PfqAA8iHx2A8bJqb9BgLo
+i92B+fAP78b8fc3e2uNdmRi2n8gAFF8atI8Fyb+QsJTkQAq3N4v2HGeiWk/
Qgf8tU+6fvkaE/uSdI58B/AeHQ4IvcXEtD+hAy49HHOzyouJL1EEbwcsajGe
o/qEiWm/QgfM2781xCyAifeR16f0OsBxc2rdzbdMTPsXOqBOn1OUGc7Ea8jX
zemAJRHul9UimZj2M3TA9w05zdYJTGxAtt+VHfAzyET8PoWJaX9DB2iLjydz
s5mYGlc3dYCZNHPO7iImpuwEOzrgJTNnI6pkDt5H7ICJjf3qExqZmPY/dMDA
lOyTtwVM3CggB9YOGCWffWrgOxPTfogO6F1+St1+gIm/kXL9pQ6wzLFZVS9j
Ytof0QHnxWLFnXwWDifLi2cHOLU22VUqszDtl+iA0z5+JtYaLPyQhOP+HZCU
9uFL6xgWpv0THeBq+untCV0WPkPSV+86wFrbYAx3GgvTfooO6FHHQ/2MWIP3
pzqgeEnfldmLWJj2V3SAua6tffEKFjam7rt1QOffV+mn1rAw7bfogASB5eNx
m1h4CjXQdMCx5mFFWTtYmPZfdEAi6+LZ87YsrErBjQ6Y/nGWu4E9C7OpDewA
e/sKUccxFv5Djue/if0qGpYXdIaFaX9GB7CXeMrsr7BwNUlnczqhNbzX3cCd
hfMov0YnVDa22IvvsXASKZeqd8KbxHHPs3xYOILyb3TCoufrJzwPYOEg8jqX
VickzZj462QQC/tRfo5OuOFupbzpAwt7UAW6E4YvCHGcFc3CtL+jEx4tyRw6
ErMwNX5AJ2jOOvuL8Y2F91F+j04Y0nVGvSePhSm6bn0nZI2941BXxsK0/6MT
lnxy+Vtcx8KU3GfVCTw7aUxuGwvTfpBOSHX4Hpzdy8I6lADYCQ6nRqbl9rMw
7Q/phP2XVymUyFh4CBkuZzthsd3ak8SEhCk57UonvJeTsXtU2JiCV+6dwGLP
+cgYyca0f6QTXtzMOjtiPBtTdIR3J2w++3SX4SQ2pv0kncB/6mZpMZONKfr+
DbFfr4/bOs9jY9pf0gmuPnDRbykbvzhADpjE79PK3qSZsjHtN+mE12Ldit8b
2Pgmaf9I6YQd/JFq+tvZmPafdMKsu8/W797DxlT7KOwEF/mw236H2NiGAgid
YF45P63yGBtT41ZDJ9QbLxGNOcvGtD+lE1ZdjdTbd5WNKXryeyf4hr8w/XCL
jWm/Sie0hEt2yO6zB+/rdcJzvfKdG/3Yg/eDukASY2QaHMjGHKphdkHnkrFj
OO/YmKLDhnfB9c8vy2y/sDGVHqO7wHFNkXNqPBvT/pYuqKlJ/jEllY0pODml
C1j7bq95nMPGtN+lC4zHrLzEKWVjin5Z0AUzW4bcOlnLHrx/1AVWKYxDXa1s
7EfKFaZdUK9j+t/+Xjam/TBdYH2R79PUz8ZXKMNBF3xFBxv3MjiD95W6IMrA
57dAjoP3Uz9dMORqau7xoRxM0eNHuiBu4wQH2X8cTLVLly7wU2xPv6vNGbzf
RHzf47WNE6ZwsCEFULtgu5xHVNwsDqb9NF0gl9q+cusiDh5JDfxdcO7yy5t/
VnIG70N1QWCS7PyTdRwsJeXjF13AeWWmvdSSg6lxJqgLTi7Ldu6w5mCSLRn/
oQv03pUe8znAGbw/1QW9u+M0VjtxMFUOvnbB8DH5u2WnOZj243SBW+iRddFX
OPg9ZTfvgl+Tv1c43+IM3rfqgnl/ItmzH3DwIyrhuuA/Z51vA34cTPt1uuCS
+jMd/IqDz5HyTCdxfsc8NG6HcQbvZxH7c87ab3skB1Nui79dYHbz8ocpiIMp
eoPZDW+279/E/MbB1HLluqE+9fqVynzO4H2ubhgr2DovqoKDp1KCRTd8m7/d
xbuRg2m/Tze07pafc66Tg9XIcXpiN/RN6Txl+4szeP+rG9YWuM5bJ+HgAZJ+
NuqGlhAbl4U8Lqba0aJuSHCUmzpNhYtrqPuh3fB2QHmH9kju4H2xbsh14kk0
tbg4mbof3A1PNl5XGzGZi2m/UDdkgK6PxiwuDqYGhm64onft9n+LuIP3y4j3
vV/QMc6Yi+9S96m7YVnOwEf99VxM+4m6YdIv6/o5W7nYhaTXLnbDp5QRJ0x2
czHtLyLWG5N3YOchLqbkKI9uYMnPiz9+nIspePqwG/rD2Y4e57h4KWnneNoN
dgs6zoa6cgfvr3VDcN3r+mwPLp5IHm9IN9jG9D398ZiLaT9SN3x+/jDsvwAu
VqQKYDfMiFirahzMHbzv1g3m4sakE5+4+CdJH3zrhqW/tJJfx3Ex9bq8bjjo
WKZclcLFFN1e1g0O2sWB6rn/7sd1A/941yXzMi5OIO0ILd1QcaA/wLOei2k/
E3FeP/M4BQIuDiSv0/7qBq73pmCNvn/36bpB8Njujo2Yi93Jcs/ugdUqzaGh
XB6m/U49sPRqPFekzMNHKYNPD2g4lXmvG8nDtP+pB343ae8O1OLhzVSC9EBr
y10r8WQeNqH8UD1Qd1Xt9jYjHl5Aym8zekB940tB1GIepv1RPcApn39S04SH
x1MDXA8kFZdOv7yBh2m/VA+cWHt2qGA7D/MoQqwHnMwmjd5ix8O0f6oHLKPb
1qYc5uEuEv7t7AGFuOQXc07ycC3lp+qBwlMZI99d4uECki6x74GiPPkPOu68
wfuAPeC8z2dfwH0ejiLlhTM9EDvvztxxT3mY9lv1wAwX2YQXr3nYn7qP3AOT
5qjoT3zPG7w/2AN/q6pWhkfz8DWqIfUAO8XNZX4SD9N+rB64dGpRTHoWDx+i
AH4PzLs9Xnl7CQ9bUf4sYj9C9xzvruXh9ZSBvAd2PpnR7NrOw8sov1YP7J+Y
sGfcTx42ogjoHrAwWiqIF/GwHlWgie8J/3F6F5ePNSlBrwes7iqpMFX4mPZz
9UDx5NzgtyP5mLIH1fcAHnvJxEKbP3ifkdjf2t2tkil83EKmb28PHE2OdQ2b
zce036sHJlwvH78b+JRbqk/SA+aj5GKGm/ExZb/h9sJ+H981uRv5mKKHFHvh
6cumUncrPqb9YL3gHrpgu+l+PqbklFG9sMD6b768E3/wvmQvWHSfX5R7ho8p
+8Fk4vcrdX0fXeNj2i/WC8Z5m9ttPPjYlvy8eb1QU31Md5o3f/B+ZS+MfNxs
LgngY1PKYNILU+pG7s8P4WPaT9YLe9kX9r/5wsfU+GvZC26eV80vfeUP3sfs
hYcf/cft/MbHFF28rxfKzxiXzC/kY9pv1gtGPX2Oo6r5mEKTJ3rhC3dip6yF
P3h/sxc8rHaatvXycV09OXD1grKDxvWCv3xM+9F6oTqm+vlXthymypVXL6Rv
nuMdriSHKTnPpxe6l4cfejFCDlPwPqAX1E0Kh3tryWHar9YLS0SGvnenyGGK
DgvvBYN0u9+3ZssN3g/thRkJQl13kMMnSfkooRd+J9ybfMtMDtN+tl44pZ7I
9NwkN3j/nVh/4eSQh7vkBu+TEs+fHbWfHZAb/PcUesHw6cxDIcfkMO1364Uk
kcaFmHNymIIvgl5AGllWWdflBu+f9sKD8gFe/V05TI37A73QUbX+bP8TOUz7
4b7D+60XI4a+ksP/A0IU75E=
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -15.584557895909839`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox["\"Log[Q]\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-15.584557895909839`, -1.6521147465363442`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 3; l = 0.45\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.868471831302126*^9, 3.8684719182313232`*^9, {3.8684719505695066`*^9, 
   3.868471988967702*^9}, 3.868472045138152*^9, {3.868472136418583*^9, 
   3.868472178876369*^9}, {3.868472223561854*^9, 3.868472237423519*^9}, {
   3.8684723017581997`*^9, 3.868472324640143*^9}, {3.8684724463532963`*^9, 
   3.868472464629196*^9}, 3.868472549293133*^9, {3.868472908534378*^9, 
   3.868473004191575*^9}, {3.868473058971116*^9, 3.868473099353362*^9}, 
   3.868473130805458*^9, {3.868473177903257*^9, 3.868473220094585*^9}, 
   3.8684754462390633`*^9, 3.8684756242138023`*^9, 3.868475801339366*^9, 
   3.8684769942651052`*^9, 3.8684771598325243`*^9, 3.868539340982184*^9, 
   3.8685468614605494`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"6fb24009-96e6-49f3-aced-66da2d95af0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getplot", "[", 
  RowBox[{"0.45", ",", "12", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.8685468598946857`*^9, 3.868546860704646*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"eb08879f-ce75-4580-b1af-e6dc133e4228"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxlXHdcje8bbqeppUmKjGxZidxkR5RRJLJHRnzJzN5bRkYopEGUtCjdT3vv
vc+sTqdOOxXld973Pf/9+senz+E9z7jHdV/X9TLd6b5uj4yUlNQmOSkp6s/7
LZF+v1PDFlwZdSk4yXkaiT7Ym73iuCHYNb2YqH9uHKn+F1Xz02ECzDQwd0HD
sUTEO/2pMWIGOK/IOSC1egwRrdSt71xoBSO6ndpH/TAjp8oqHl3cuxCiOrSW
jFluRn7fDppyPWQx9MxqfNwrGE1OzT+VfadjGeisLRmc6DOa9IqWuj2ytAV7
i3V76x1Hk9PvdIZ4X7CDqKFhbZ8NR5O/we2Fdjvt4WfJ4oWZvFH/9/uT1P0j
Ntpth9kFZoceXjMl42M2OVw9sB9mr3C42R9pQmo3+CeW2xyFLyU7jR1Hm5Bg
u9fVrfYnwHGb+wKbXSOJx7KnPQqup+HBa2fBy2BjsgDuaRgf9oQhB5b+KlA1
JvLDbZ69sr4E3yd9eT/n+gjipr9gVMCSK2D667FasdoIkqtjFfpt1TWIMg3Y
a/NhOJmlOXv+r3U3YIORWpfu4uHklZpFRvrmW8CzEyneEhqRf0pTHIu334Hw
Kd4KVj5GZLfCBG7dvntwsULup7GDEcmUGXtUeOQB6Inmt7mqGpHn/x5d+GP1
CDSrXsk4ZBuSzAH1pZcXeEFF24uE3Y8MycCfeyqKNo/h9Ylcm7GbDMnUfuXC
e0ufgI389nczRhuSXb23XmitfAptxvZ6Vu0G5Jl4ty9WP4NZKu+VOxMMSFrX
tTHG9t4QOXRGpukzA9LfIdP8Yf1zMN+/O8vLzYBMbr8Ubu70AurXhSwfZmNA
XFsHT4c6v4Rh/+6PumZkQB63eMKsba/AR6lFIbZHn6QI++Vjd/jAjCCL0FdF
+qRXcDp74Z7XkLaweY1iuD6Z0NjzOHX/G/g4sky30UufbKk/sXn1obfwdH9f
ztjj+uQBr2Nkobsv3HbyPxe6UZ/sOGbZ+XmuH1g8HTfy6Fx9cvboqdIjsX4w
RCr0v03G+uSJe9SP6dbvYJbfqujNcvrky5Hu113x76BU59GtvUI9knp45qXo
he9BePNM1H9FeqTu0PFdZxPfw0Daa7PjcXqk92D4MuslH+BJCPmyNUCPaB9s
N5dK/QCfFGermHvpkUlu09SSlvvDIj8XzPbUI8sOuLddz/AH+4QamUUH9Ijr
/q9FK1Z9hGej50ZccNQjp/a1RKnkfISSvQ4rLy7RI157J73KXRMA7r/CE+fP
0COf9hw875UfABqHN/t9G6VHknd/2r5hXSCsrkstK9fSIzW7BIv1igPh6s15
WV9k9cjvnePHVW4Mgi9jOhZN6tYlQ3fuU35TFgTFsxfssG/QJeN3BLS4bg6G
qpTjAbqVusRmOz9/VFUwrHp6hX0uR5dscTWL4Lt8gqs/pk87n6BLPLbteh5U
+wn87gn79KJ0yYOt788e3P4ZzORUm1d+1iVBLuytUzifYXn4xx6Nd7okYYvJ
ovZdIbBg+feVB5/rkipn6oEhEKT0ZZ3TA13Stfmt4ql9X2D2kHM/i67rEpXN
NU1zBV/giUz8rrrzumTMpuG5f92+wlVNtwNnTuqSBU5bvmHzV9hmGDrinbsu
2eT46umVI6Gg2jdRyfGALjm2seLU0rZQMBrn1vR8ly5ZOuHeZLm5YfDlpF/k
3m26pDB4oi//TBgctIx7mrhZl7iaZ2mk/QyDS4Kwhs8bdYkwyO1K0J8wMFoz
dOnodbrk9Hjlrtvzv8FDP/5Z87W6RD4oWHwD32C2nfAhrtYlj8etLFsdL/79
yZ/keltdYhzYuGLKv28Qt5rr7bdSl3wae+vn0IXhsHjkTSJaoUvmBIybJE4J
uH96v3WR+PfkMWlvChPCQb/z0Wp78d+3/7h3aITMd+ga03J8v/h5tWYKl58t
/g51Z0yvGYu/76D/x46T175D7RH+a481uuT36KW7N6V8h6XFndOPOeiSax94
JXMVImCC0E9jmHg/mqOvLTdaHgHKcyfs3SPe79v3o3/8vRkBppPLUqnzmDAq
aUJtegTcDJSfbbxbl0S/2/kalSJhh57NVC83XbLEVEb9nW0kRB5/FJZyTJfk
+b27eOVuJHj/1lyWeEaXuFDXmx0Jhefm6T24oksEvqydS9WioOB3Rfe0e7rk
5MhLxWPXRMGBTVPcv3vrEhnfkcuGPIyC3RNO1xm/1yUPjTFakBcFV7U23Tr/
VZcMf7tNfCPR0Bd061NlrC4JHjH4KsQhGpZp3/xgk6lLZr15o/rgcTQoWNQP
TarQJYnDrS+4F0XDkInTO92adMlaqjzrxMAfx1P1tn/F8WbkucNiYwxctahb
4zFUj+zzMSrS9o4Bs96uN4Oj9UiXYeyS7tIYmNtT8WZgrh65/Mo5qlTvB0S/
U82+66BH1Az7x8Vs+gE+LTapKW565NVL6ucHtMoW5mRd1yPTX07Qf1b8Azqc
pdOU/fRI+otY70dDf0LC3nY9WXF92P5i9bB7tj9h6jz5tLIKcT4+r3ly8/pP
MC5ReRLWp0cePD+idZX8hGKv5sKfRvpkDF2wf4JUZfLdCQv1SZz4aWdnx8KP
15Ny5+3TJxu8TR94HIsFgVbAsZni+tf0LFz1WEgsfIs+tGZvvD4RB8vdQw2x
8Njh9GiLVn0iXpzS/lFx8Kt4ykEVMwMS+nTPrV1b4+D3usWXz281IMup9vUi
DnaWTw+1eG1AasWrcy6KA5/qRUMGWQbE44m+nKP6Lxho3nNXMMmQqD4JvuKw
8hfUyyzvt71sSD48tpK2u/YL1qep+XLrDMm8x1kXV+Av6FI6+11rlREp9HIZ
XNz/C1Q1d60wTzUiB7yogh8PJ7XGPxjcOJxIeYnb09F4MLFa8l1ZZgSht/s5
HrzVesbGlY4gUx759U6vjwenfx/qxwiNSerD6acmmyJcMLFzMpprQlweJnaP
d0F46an10krcv7serD9h9hzhu+uPZd+rxpI7dENAOGAomv4ryZRopv2Mua9A
YOyaJkuD5SakZpnsaRUzAtc8eSMPlxqToNRVc24vIiBrZdRY8WYEOUH3dwKr
b7+wlf40nEBqdeQ1TwKjWs6+s2MbEZVlYzxkXhGYcFSraf5sI1KaQjUMAl6d
f/uy/QzJ+6VRnQPF4s89QtIqjAzJkZTB8HMdBDgyv3u5HwzI3KXL/+sbmgDr
T7yMPDLbgMinUBtMAOl5rjn+Bfokf0l5W5dtAqxzv/5k1Al98jrZJOy//Qkg
sMvsLhquT/YtoRpKAvSaaW+tzdQjM5K/TTnyIQH2hm6M9zqvR/4t7m8RkgRI
b0yZu22mHslMsvlyoDYBAjQyIrNFusSbCpc/CWD45aTnmRBdsiOpaOIeg0Tw
FLrP1zisSyYtHi7kzE6Ew3KX5VZO0yW9iVTDSYSiO9Gd/O5hJJl63LFEcD33
7PC3X8PII+o6HibC+7mXwjxvDiNbbBY0VoQkQqPb4ijj9cPI2MQbgU6ZiVCt
N97uuMkw0rEob29JQyLUHUp2cW7VIfEJemPXyycBa3/76mjUIbcXUQ0pCUzK
Qm8e9dIhGxOC/NcsTALhi/Ma7rt1CF1+tiZBvjVr0ltLHdJM5o62PZcEyXZV
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
GtxO61M8SDSaZyKlU4O0XPSIB6YV/Xtu91cjo1fx4JWB1ZTR7Gqk24cvD2bY
rHHOSatGRr/iQXBWcdbNr9U4suuQOKJ5cOBd+O51z6qR0bN4MOaKtuJkz2pk
9GcezNxx4Jnermpk9C0ePMk42KFpW43C49QF84C1SE96+PRqZPQu8fl/C/Gf
pV+NjF7NA4u0MLLtXxXS9AeHB3e3Cy2f11chnR4CHhR07G2vzalCRg/jQUeX
e+6syCpk9G0eBNg+jfB5XYWMPsaDuLD3tzSuVeEVil5Q4MN/Ez5NfXqwChm9
jA/TjvY9GLu+Chk9nA8jXY3vpVlVIQ1fRvDB2I2vempUFdJ0vRkf7qls/j1T
uQoZPY0PXpYJ06U7KpGWz2fwwazk/fuqikpk9DU+bDfHackJlWhAF1Q+NDtp
J/0MrkRGb+PDlpKyhehViYzezocY1kWvgjOVyOhvfJg5EPO6fUcl8ik7rysf
3h9ysx1pW4mMHseHzZ8jrjhbVCKjz/Ohpblt8gfDSqTHTw8+ZL0Mm9knU4m0
3O3JB6fcuIsuwgpk9Do+eFcO680uqkBGz+eDSlLHDdu4CmT0Oz6QRDKsxL8C
PSn4/IoP/TmjHhy6X4GMnscHa932Co2TFcjo/3zQemjJTdhWgXT4hfGh+7jV
04vLK5CmS6P5YJJ3sGzltApk9D4+uEp7PDcxqEBank7lQ4btdJSVqUBG/+PD
1Q1f53Y2laM2TRjxYWfsxA5RUTkyeiAf7vsYFvfElSPjL+CD7IgRWcoB5cjo
g3wwkFZImvCwHOuOUQQ9H8qnlQc6ni5HRi8Uf//q1D0PdpQj40eoh0ErC0GB
bTnS7UipHo7HhRibzizHT5RdXqMeqvq7Os6NKEdGT6yHNyN613EUypHxL9SD
bU3+xA1tZcjoi/UwQT/NraCiDE9S5W9yPVTsWzuwOakMGb2xHj5GKxe0hJQh
43eoh5KqlKJ73mVIy1OLxX/f/Ezn7EtlSNNVq+rBSHOFcfOBMmT0yHpoiLhk
E7K+DMfRBHk9KN70WXPKugwZfbIeFnKtptuNK0M1WtCvh7ufJ1RM1ixDRq+s
B+C7zjL4U4qMn6IeOhx7Zw7llyKjX9bDtHFWaUPzSrGCgkM36kHd80mV4Y9S
zKb1zHrYYfRqx7QPpcj4L+qhUUVlpf39UmT0zXowm5N5+eypUvQ/ShEm9SCt
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
tUFQ8bZTEaO48f8DCAV2nA==
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -17.63438355162071}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox[
          "\"Log[\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(asym\\)]\\)]\"", 
           TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-17.63438355162071, -9.124549006015524*^-6}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 12; l = 0.45\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.01], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
ZJA+XeuiVlh+jFfb4yCD2yn0E1XZChPvnHUdcJVBJ/p4G1vh+lKhsO8eMkR/
a4XyO65XWIdkEBh/UiscPetuKXtGBqcxAkUrpC1nPza+IkP8Ha0QZmucvfC2
DNHr2mD93vwH2x7LoAhNlwi3QcDntpn+L2RwnIZPUm3AmbX3wquPMkhPw38V
28Bq4pGgli8yRN9rA8M0toNspQxWru03fW/QBvP36Octa5XBLzQdYdoGMqbf
/10clCF+kjZYqBswmPNHBhMYPbANIFrwlriALD6opAW5NliuceP3ehlZ4vdr
g8XfVsvHasjiJXkmQWCex8mBURNZoh+2gcXFeadWW8jinrU0IGyDl+pVeS8W
yOImhjBtg5TZvmUyjrK4ivGvtMEmtaOhPhtkid7YBm+rheU6d8riLGYAb4Pb
7DMr1h6WxYlMwLTB2t1GtnlnZVFDnmYQ22CCwLrfC4JliT7ZBp9rN+3MuCOL
XIbwbIOgjqhQ21hZ/EU/vsdtcEDk2JnCJFnil2mDx2OLjV0+yRI9sw2mGRy9
1l8gi8U0/fu+DX4t8Uo+WyuLGYydgXrelRF31bpk8Q0jb7aBwIZD1h+/yRL9
sw3Cd+yM3swnh0x7q26DpJdDecJicsjQq81t8MD18su3SnLEn9MGkVefO+/W
lyN6aRsMJrZmak+XQ5o9NvlBPV/FJ0ONIIdMOR1rg3GJwJb7dnLI0JecdviD
0iHbnOSQGWdE22GFUZ7olO1yRB9qB6fRBUv+7ZdDmu0QVGmH0zekl5WdkiN6
UTuEdedIxwfKIUMPGrUD/5F/kZdvyxH9qB3cJjn82B0th0MjNGHYDns2rpNZ
9UqO6Ent4J/86tdclEMmXBa1wzFN/hjTAjlk6Df7dlh0cUhdr1YOGXi1th1e
+ats1uiSI/6jdqhZZuKlPiJH9N52sNHKtdWeII/M8jzb4Zndwz5jcXm8RNNb
B9pB5Y/7BgsVeaJHtUOq0fu7Sw3liT7cDvOinJ5sniGPmxh9qh1mNQxdOGkj
j4xcdLUddFgW0++tkCd6VTsEFLckZLjKI9M+7rfD1DmPxgZ2yhP9qh34fluq
qR2RR40RTyqi28HuhbuE43l5ome1w94J5eWXr8kT/bkdrpYv9cq+J0/0rXbQ
97xQLxQvj30H6ANuh2BrW03Hd/JE72qHbz+Xzo74LE/06nbgrV1rMlgmjwz9
0doOJxaZjMxvkUcmPXrawePZlZB7g/JED2uHtv02kuOj8kTfboe/XhLbtggp
EH2sHSZseX8zT14Bz9L0An8HjHWKRc7SVSB6WQckbSu6GD9VgejhHbBG/Iud
LiggA1/UOuBMdiYv0k4BGbpetwMEzQL3aTsrED2tAyID+ktjdyggI59P74C6
m4myZocUiL7WATGvHs3MPKuASkxB7YDZmSGWTlcViN7WARKmjrrfIhSI3t4B
/zIf8a49VSD6Wwe8wY33Z7xTwA7azutG/XvycrPGzwpEj6P2c3NeQkC5AtHn
OyD/Cr/U3FYFZMbPQx1wXNXb+TtPARm5+0QHsIeXBL4YUyB6XQeE9m+P2S+i
SPT8DohQDI23UFIk+l0HvNgbc5dtoIgnaPgc3gHTr+w+WmamSPQ86t+vvZwX
a6NI9P8O6Cmw+3HGQRGZ8EvsgJqbwuGbNioiQ5cmd8BV0w8TF3gqEr2vA/ZV
TE2Y6KOIjDz9uQMMYudoK19SJPof9fxj4i6IhiqiDEMYdcCk+GUN7EeKRA/s
ACX3IX2+l4rEX9ABzfN2bZ2AikQf7ICwRedCBQoVsWkfTdB3QIWUZKp0vSLR
Czugf7C+TrtXkfgROmGZ0duvM38pItOOhDqhO9d7zJFfCZ/QdnnJTvC/UMLa
J6tE9MROCEt5OiFEW4n4Fzph67ecPx+nKBF9sRPWtP4Y7JurhIfp8jepE3Zf
mNCkvlyJ6I2dMG9rUt5aFyXid+iEjWdqX9/YqYSMPDW/Ey7qWt6rOKKEDF21
rBOu8mL8VC8oET2yEwJq2z09biqhAUOQd8KV1Per3z1QIvpkJ7zIHrGSeKGE
Yoyg3wn3b68z2pWmRPTKThCa9FQht0CJ+Ck6oaP4tZBpvRLRLzvhnvBcvtu9
SlhDw6ELnTD8h/+vwG8lzGf0zE6Y2VgxdlxAmfgvOsHN0ov/u5wy0Tc7QfPm
VfkDusr4aC9NmFDrlWGb/pimTPTOTjgZ5+fga61M/BrU91dUHxdxUMaTTEHo
hNaElBcRG5Vx71eaoO4Evri+YbM9yujO6KGdcHyh0byS48rE39EJRslTwvf7
KxN9tBOmr0mdoHRbGecwdEEneNy+ciQzRpnopZ2g8nX934NvlFGLSZBO8Nxe
e9U4S5nop51Qeid3RkeZMgowgKMTVPe09D1qVSZ6ahe8K6x4tXNImfhHuuBE
xoag6XwqRF/tgnWuk0+wJFSwjA5npS4IezV6slJNhfg3u0C5/+jNhIkqxG/S
Bb8nrccrc1SI/toFoQ+XsvYtVcF7VHYsm9kF/47yuTg5qRA9tguGqgzzbD1U
iD+lC+Q6962adUQFjzD6bBfczLw0MuWCCu6i7faru2BugFLCpBAV3MDotV3w
a2XROdNHKsTP0kXNj6sPmL9SIfptF7Q3OPjapKvgDAbgd0Gn557Hq0pU0IDR
c7vA/rFDz85mFeJ/6YKKJZFL/XgqyMidl7qAX2hC7uNxFWToz+AukDwh75En
popMOb3VBYLNZ/V+qKoSv0wX+MzoZulPVEUGXT3ugmCfTj6XOaqYT8uJz7qg
tF1VM2SpKtGDu8AlyGhzuZMq8dd0waMDcZmKO1XxEaMPd4HtAYtlW46qIgN3
c7sg0m7f98SLqsQP2wXc+wMZnFuqxI/TBSofFiZviFYl+nEX1LlIFb9/rYru
g/RA3QW+gZ3iGlmqRE/uAvZW54MXy1WJf6cLbpXxTfjepkr05S44+sTz9Y5v
qsgsj9sNSddNrzex1FCLAUTd0CdZe8tVWo34fbqh89zo50YtNWTkJpVu8NfR
1tw+VQ2Z8VenGzIn1D0cnqeGA4we3Q0WQi9XnndQI/6gbrAcmzpJZZMa0ae7
oeBY+/RkbzXy/kY3qHxz3LH+lBrRq7tB/M2EnPEgNeIn6oZfncfWPrmnRvTr
bvh5FmRcnqshU642dsMBt8pxyVQ1omd3wxqjT0r5BWrEf9QNc3zObA1sUCP6
djdI3r3V5Dighhv20IJQN+Rnng1QHVMjenc3+LI/efSLqhO/Uje0Whcd+aSq
TvTvbjhtbfTuzkR1NGQ23A3jEUsmHbdUR4Z+ieyGVQVx5W526sTf1A3RGukJ
S1zViT7eDbnXhdIsPNWRgS9vqO9f/sGadEKd6OXdcOzN2HH9QHXih+qGLfXX
jfXuqhP9vBtmXjeUMIpXR6Tp9PJu+OcwxXjaB3Wip3dDmrfyiXn56sQ/1Q1N
umu5q+vVib7eDVZ+jp89+9WRkaeHumHSxWNp/n/Vid5OrYdv9tAzUQ3it+qh
6uGYS6WqBtHfe2BYdTIfZ5IGrqPHGYkeCK6e3mhupUH0+B44NffwD6/lGsSf
1QO+IS5L4jdoEH2+Bx4KL6ka3KOB2swA3ANzix9EmvtqIAOfzXrg/ZO8x+eC
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
FZxNVkvW7DbE/wPINA3j
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, -15.530665638047543`}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          FormBox["\"Log[Q]\"", TraditionalForm], None}, {
          FormBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(H\\)]\\)\"", 
           TraditionalForm], None}}, FrameTicks -> {{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {
         Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
         Directive[Bold, Medium], 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-15.530665638047543`, -2.3407837517005508`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, 
         Charting`ScaledTicks[{Log, Exp}]}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Mu] = 12; l = 0.45\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[Bold, Medium], 
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "Medium"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{3.868546870543748*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c596e2d5-d0ad-42d2-8bbb-14a3f06c126a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reproducing Hector:", "Section",
 CellChangeTimes->{{3.868486770341717*^9, 
  3.868486775997376*^9}},ExpressionUUID->"fb3bdc9e-ac0c-461c-9f02-\
07383067a81d"],

Cell[CellGroupData[{

Cell["Reproducing Hector\[CloseCurlyQuote]s Plot:", "Subsection",
 CellChangeTimes->{{3.868458589251995*^9, 
  3.868458596428363*^9}},ExpressionUUID->"e376957a-baca-47e9-b90a-\
ba1d878647aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Fig", " ", "12", " ", "of", "  ", 
   "\"\<https://arxiv.org/pdf/2202.01329.pdf\>\""}], ",", " ", "Conversions", 
  ",", " ", 
  RowBox[{
   SubscriptBox["\[Phi]", "J"], " ", "=", " ", 
   FractionBox[
    SubscriptBox["\[Phi]", "me"], 
    SqrtBox["2"]]}], ",", " ", 
  RowBox[{
   SubscriptBox["l", "J"], " ", "=", " ", 
   RowBox[{"2", "*", 
    RowBox[{
     SubscriptBox["l", "me"], "."}]}]}]}]], "Text",
 CellChangeTimes->{{3.868459485391026*^9, 
  3.868459536904601*^9}},ExpressionUUID->"5b9fa454-7c79-4aac-bea8-\
855621f77bcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ls", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      FractionBox["0.7", "4"]], ",", 
     SqrtBox[
      FractionBox["1.", "4"]], ",", " ", 
     SqrtBox[
      RowBox[{"1.56", "/", "4"}]], ",", " ", 
     SqrtBox[
      RowBox[{"2.78", "/", "4"}]], ",", 
     SqrtBox[
      FractionBox["4.58", "4"]]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868458599832283*^9, 3.868458648809812*^9}, {
  3.868459231352145*^9, 3.868459232967993*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"a14ecfa6-dbc2-48a4-b721-d92b6474e11b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cs", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0", ",", "1", ",", "0.5"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.1", ",", "0.5", ",", "0"}], "]"}], ",", "Yellow"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.868459371165625*^9, 3.8684594574006166`*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"e2db8b1c-b8c8-477f-82d9-d479b7aa6d7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0.5`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666668, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.1`", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.868459413894184*^9, 3.868459457808124*^9}},
 CellLabel->
  "Out[315]=",ExpressionUUID->"c6a409b6-fd51-443e-bf8e-b6235a96726e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getplot", "[", 
      RowBox[{
       RowBox[{"ls", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", "3", ",", 
       RowBox[{"cs", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "ls", "]"}]}], "}"}]}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.868458730240631*^9, 3.868458737142919*^9}, {
  3.868458963671714*^9, 3.868459006013857*^9}, {3.868459461755887*^9, 
  3.8684594636571817`*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"d3faa938-c3a8-4ace-b0a8-bfcd33d7e70e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.002606105651797`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 299, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594888879843`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"9aededac-81d2-4e09-b4cb-caac6d66ff89"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 300, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488894153*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"6f740314-f026-4ccb-9224-31f6d13fc2d7"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 301, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488897122*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"a7bcac76-4613-4c77-affb-4254de478f7d"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 302, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488900008*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"7d697f94-2b54-4e29-a5b8-1b8bfaed66c0"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 303, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488902882*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"ac9d3c4f-01f9-4233-b0b7-c81f3e050617"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.0064448053314559`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 304, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488915477*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"e5a5399d-ff80-48f3-9552-1e5e4f06db23"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"10000000000\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 316, 305, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488918764*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"cbd4e68a-2c52-46c9-a7d3-9457ca66997d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 316, 306, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889218273`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"0ef5ed84-4364-40df-9e57-64e70d2c22ab"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"10000000000\\\", \\\"}\\\"}]\\) and/or the interpolation grid is \
insufficient to compute the value.\"", 2, 316, 307, 31104774657216351015, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488924988*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"f0dc8725-b583-4e2c-a1e2-6ed60e690b76"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dprec\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 316, 308, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.868459488933343*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"f912eb3e-a8f4-49c7-bd3e-85f8931d690b"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"r\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.011308554894513`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 316, 309, 
   31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889547586`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"234fdf50-e3a4-437b-9bb8-3c78fc16c4ca"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"ndsz\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 316, 310, 31104774657216351015, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8684590315380993`*^9, 3.8684590937137136`*^9, 
  3.868459259191285*^9, 3.8684594889588003`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"6c3ae0cc-248e-4ed0-8c22-21b5ff5b07f1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1: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

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0.5]], 
         PointBox[CompressedData["
1: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
eyMu5qL/A2Yd460=
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1: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
FBj/afHJpncBheW029TPUiBIYU170qMFxFGifZuJaRi6O3XHSk4vIK+K2AwN
rmH4ef0Gb8mKBfS/4+dCw5Cjmm8fRZ1H5/87Ti41DNB7zmtn5jzq+ZanWKE0
DK63zCbeu80jY4rk/plVw+Chn/96eus8qmZcdVTVGIZqE7PKOaZ5tHOuPcJi
6zA46I/eLKyeQzlMWwqCdYfBS/ij4ebwObSaO6638NAwIHfLlvOWcyhFeI59
1GgYaisPNB9WmUPiMhZr5S2HYZ2o+vausVl0TznfWP/0MExV/VAWL5xFTGpS
13wdhmHD1fDSn4GzyEPTMyXr8jA8e6Js72E8i0Z1vlb0XR8Gx5zkuBjFWXRq
75ZRkYBh2KiXSTGiz6B2vTiRvfeGQeTSDp5nRTPoqNncliuRw/B5XKHx/t0Z
9PGkhc3zxGHwpTSqcljOoC12+YHtT4Zhc5GxqMCaGZR5SSqDK2MYRj7/ykpd
mEYqVz2btuYMw7IQP63ST9MowffrnEPxMJjx9tJsk6eR4J0tiknlw6Ah7Lkp
yHkaBYbF7fvy+W97GKtvrd89jRbj5i7+bvlb/ib3M6bi08g11SJiQ88wtNxN
d5oZ/omG0vLzbQeHIV1Kw1Ck5CeyypbqDacPw5qisppn4T9RU6En+8fpYfAJ
wGmZdj/RwY9f1X7+Gob4seD6Ndt/opJPW4xXcFBBzahntZTIT6TZEudpLkCF
h38g1314CqV1zz0MkqCCN3K6uRNNIYVBi4p8BSoYStWnusVMoSh6Po26kgrK
y2Z2iVyaQjwzUiKyG6hwwXFZuNT+KXTzt+cWPW0qvC8pb7ylMIWmOTqsvYEK
PVqS+mazk+ii4NbAzANUoKQ/t7rTMIn6JONf9RpQ4XY/w1oufRIdU5pvFLKg
Qob7Iha8NYk+rzo+p2tLhfo/v+dsrSfRbo0CBTd7KognsAQJbJ1E+Vul9z11
oQLz8rs/JcQm0frd1y62elKhyXx3iydjAj053BHO4UcFBae3HzZ+mkDSJlvz
tYOpECJKs93zYgKFnoj/Zh9OheaEA9ZpAROI/ew8W0I8FaLWKlw6YzuBrjse
V/uUSoU7A356Ljsm0Lh7gdFSGhUOPWcuqZOZQHbe0p7rsqlwJtzhrvfcOOoK
vPbQupAKzxn3b3u1jSOjBx3loWVU4PZjvVuVM46qYrbScC0V9nL/crONHEc7
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

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.1, 0.5, 0]], 
         PointBox[CompressedData["
1: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
3P3Y/60Kp1Cd1KN3qPon9v8ArwEZPg==
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         PointBox[CompressedData["
1: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
aqmV5P9dNZPEJ6stDwbZWMn/B05RE8g=
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -18.855071987360812`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {-18.855071987360812`, -0.07107079726800697}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.41833\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.5\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.6245\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 0.833667\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.06666666666666668, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.1`", ",", "0.5`", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Mu] = 3; l = 1.07005\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8684587463798923`*^9, 3.868458953787648*^9, 
  3.868459036313692*^9, 3.8684590984826803`*^9, 3.8684592639462*^9, 
  3.8684594936911592`*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"46fe81f1-cd2a-4acc-9f0d-b6dd0a3a93b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 6}, {Automatic, 1}},
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1ed750f8-8387-4fbd-a855-436e54659d1f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 178, 3, 67, "Section",ExpressionUUID->"f7e013f5-5357-48e7-8900-4e5a90e67106"],
Cell[761, 27, 16591, 425, 205, "Input",ExpressionUUID->"a395ccca-f8f0-445c-ac46-355ac1dddfb3"],
Cell[CellGroupData[{
Cell[17377, 456, 2435, 65, 146, "Input",ExpressionUUID->"e7510afa-3d16-4c5b-a9e9-59fb18070b70"],
Cell[19815, 523, 2333, 69, 60, "Output",ExpressionUUID->"ce8b9941-94fc-40c8-9c92-6f0e32fcc83b"]
}, Open  ]],
Cell[22163, 595, 9718, 247, 215, "Input",ExpressionUUID->"7cf68800-7ce5-4c2a-a805-224e6a01c188"],
Cell[CellGroupData[{
Cell[31906, 846, 1449, 39, 94, "Input",ExpressionUUID->"02daa90c-d868-4ce6-8e31-829bb3d48938"],
Cell[33358, 887, 5214, 149, 83, "Output",ExpressionUUID->"0dd20b31-df32-4345-bc6d-0d9736c9f41a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38609, 1041, 5930, 155, 125, "Input",ExpressionUUID->"93ae0edd-f3c4-4ac0-bf5e-73a15380295c"],
Cell[44542, 1198, 158, 2, 34, "Output",ExpressionUUID->"9502303e-d56d-46bd-be89-2ab353a6918b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44737, 1205, 328, 7, 30, "Input",ExpressionUUID->"a992b241-7539-4023-a154-adb7e0f3ad5a"],
Cell[45068, 1214, 2030, 59, 58, "Output",ExpressionUUID->"6f767bc9-294d-461c-8a81-610955c52b7b"]
}, Open  ]],
Cell[47113, 1276, 2501, 68, 106, "Input",ExpressionUUID->"2fa3ccc6-f36f-4de3-9f55-56744c1ec546"],
Cell[CellGroupData[{
Cell[49639, 1348, 174, 3, 54, "Subsection",ExpressionUUID->"621ed0a5-d6da-4160-8df8-42baaa6d697a"],
Cell[CellGroupData[{
Cell[49838, 1355, 4690, 125, 209, "Input",ExpressionUUID->"6f7a1333-e554-487c-9ab4-031bd1b18a5c"],
Cell[54531, 1482, 9272, 232, 158, "Output",ExpressionUUID->"06199f02-b60a-49b9-8b46-08e47f817017"]
}, Open  ]],
Cell[63818, 1717, 12798, 319, 247, "Input",ExpressionUUID->"e7e5e68b-3358-46f5-bb67-09546f5d9fc6"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76665, 2042, 220, 4, 67, "Section",ExpressionUUID->"085a3ebb-c2b2-4bde-8b77-d029d80f42e0"],
Cell[76888, 2048, 12898, 318, 297, "Input",ExpressionUUID->"f00e1950-161e-487e-9646-2ffea09af278"],
Cell[CellGroupData[{
Cell[89811, 2370, 269, 6, 50, "Input",ExpressionUUID->"5a2b2207-083e-41ff-8c6d-5103c5902323"],
Cell[90083, 2378, 216, 3, 34, "Output",ExpressionUUID->"6cf61a87-e9ca-4d0d-b20d-4549b6f66286"]
}, Open  ]],
Cell[90314, 2384, 13554, 309, 485, "Input",ExpressionUUID->"dd578f29-3a51-4286-8ede-e1efe45fb5f3"],
Cell[103871, 2695, 3568, 93, 247, "Input",ExpressionUUID->"e3935f36-e7ec-4d79-b4c9-c04465e117a6"],
Cell[CellGroupData[{
Cell[107464, 2792, 1802, 42, 115, "Input",ExpressionUUID->"6bbb3307-967d-465e-9a4f-dfbfc8da6501"],
Cell[109269, 2836, 2563, 37, 77, "Output",ExpressionUUID->"ae9337b4-9393-4e7e-8576-07705a7bfdc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111869, 2878, 248, 5, 30, "Input",ExpressionUUID->"d0a53c62-5e31-4455-b070-bbe4f98d9bca"],
Cell[112120, 2885, 1214, 20, 56, "Output",ExpressionUUID->"8ab3f48f-4dc5-4c32-9c38-6ee6023bba88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113371, 2910, 292, 6, 30, "Input",ExpressionUUID->"0485d8b6-6abb-49b1-86ec-605ddefe5f9a"],
Cell[113666, 2918, 479, 9, 37, "Output",ExpressionUUID->"883ad910-1c74-4526-a877-163f86ec2f3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114182, 2932, 181, 3, 30, "Input",ExpressionUUID->"5e7a60fe-f0d3-4e42-9486-c7a6be1722fe"],
Cell[114366, 2937, 11596, 298, 142, "Output",ExpressionUUID->"50fb284c-242a-4ee2-bdab-1e1f3603b10e"]
}, Open  ]],
Cell[125977, 3238, 259, 5, 30, "Input",ExpressionUUID->"4170aa89-6aec-49f1-8e60-a512399dc4c8"],
Cell[126239, 3245, 612, 16, 52, "Input",ExpressionUUID->"3886ef77-fa9b-411f-ba02-b2068514bd19"],
Cell[CellGroupData[{
Cell[126876, 3265, 415, 8, 30, "Input",ExpressionUUID->"a73e7036-59ec-4512-a40c-450d6e0c823b"],
Cell[127294, 3275, 492, 6, 34, "Output",ExpressionUUID->"56a834e1-14f9-4383-af4f-1d5b67260726"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127835, 3287, 162, 3, 67, "Section",ExpressionUUID->"cdb01500-2fc1-4960-92a2-58f7c71ebcdc"],
Cell[128000, 3292, 14257, 341, 342, "Input",ExpressionUUID->"c13bbe28-e01b-450e-a83d-bbad15337666"],
Cell[142260, 3635, 4811, 126, 191, "Input",ExpressionUUID->"0a2f1910-35ab-4f9b-a382-69713691b401"],
Cell[147074, 3763, 1686, 46, 154, "Input",ExpressionUUID->"cfaad6b5-17ec-456f-a9b8-9d984a75714a"],
Cell[148763, 3811, 18150, 392, 487, "Input",ExpressionUUID->"c730bd40-f5d0-4c72-9346-5e8780fd30de"],
Cell[166916, 4205, 5207, 120, 315, "Input",ExpressionUUID->"c8718020-190e-48f8-bfac-714f1a0ff555"],
Cell[172126, 4327, 27401, 592, 558, "Input",ExpressionUUID->"96fc18bc-ff94-4a93-9f57-1420a7cbb04a"],
Cell[199530, 4921, 7965, 195, 291, "Input",ExpressionUUID->"8e11d182-24a6-4f33-bc7e-603d7ba806d6"],
Cell[207498, 5118, 2399, 57, 84, "Input",ExpressionUUID->"9f03cc6d-6fc5-4b36-b1f1-1c225dfdb39c"],
Cell[209900, 5177, 1878, 48, 67, "Input",ExpressionUUID->"8ae142c3-4553-4cbb-9e6f-60a824483a8c"],
Cell[211781, 5227, 1567, 32, 33, "Input",ExpressionUUID->"d16c994f-02a9-42f2-a812-a6a1346c24e3"],
Cell[213351, 5261, 1234, 29, 33, "Input",ExpressionUUID->"d8ab13ea-dfc3-4528-bc91-ee9f95e3f3e5"],
Cell[214588, 5292, 880, 24, 33, "Input",ExpressionUUID->"30eff812-87e4-4318-b1d8-7d8412bd8e28"],
Cell[215471, 5318, 948, 16, 33, "Input",ExpressionUUID->"ee9bd2a2-a221-4093-aa5b-01ad875f9e52"],
Cell[216422, 5336, 10579, 257, 366, "Input",ExpressionUUID->"01a482d5-c4be-4be0-a101-233ff1342842"],
Cell[227004, 5595, 977, 26, 33, "Input",ExpressionUUID->"e099cdb1-ed0b-440e-929f-ac791b19d19e"],
Cell[227984, 5623, 972, 26, 33, "Input",ExpressionUUID->"4374c7e8-90e8-465b-9bdc-b12837c733b2"],
Cell[228959, 5651, 4408, 109, 233, "Input",ExpressionUUID->"7b27c68b-0685-44c1-b44a-e3581600a055"],
Cell[233370, 5762, 4895, 123, 167, "Input",ExpressionUUID->"fd7181ac-8cf9-4ebd-873c-3a25c79624c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238302, 5890, 153, 3, 67, "Section",ExpressionUUID->"1ab3aed8-541b-4b2a-8203-e869cd679d55"],
Cell[238458, 5895, 348, 8, 30, "Input",ExpressionUUID->"a419569c-ba2f-4305-9c71-2ae1b385fe23"],
Cell[CellGroupData[{
Cell[238831, 5907, 176, 2, 30, "Input",ExpressionUUID->"864c118e-864b-4867-8896-960f336962bc"],
Cell[239010, 5911, 236, 4, 34, "Output",ExpressionUUID->"c3e28e49-6fab-483d-8cb6-3bd30dee1d2d"]
}, Open  ]],
Cell[239261, 5918, 4124, 101, 276, "Input",ExpressionUUID->"da0f5696-7f83-40c1-9078-6d1ee9873cda"],
Cell[CellGroupData[{
Cell[243410, 6023, 457, 8, 30, "Input",ExpressionUUID->"879d5d8f-484b-4121-8f7f-27fd966491b2"],
Cell[243870, 6033, 99609, 1775, 264, "Output",ExpressionUUID->"6f4b740c-d4f7-4e6d-8892-b72b45dce725"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343516, 7813, 550, 9, 30, "Input",ExpressionUUID->"429a9a55-e062-4647-97c1-a4d404fd5539"],
Cell[344069, 7824, 99285, 1768, 797, "Output",ExpressionUUID->"9da944be-f118-405c-a361-473023247ec3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443391, 9597, 390, 8, 30, "Input",ExpressionUUID->"bab5f79f-049a-49fc-9992-ff528c768f14"],
Cell[443784, 9607, 61229, 1108, 503, "Output",ExpressionUUID->"204c7455-780a-466d-a3b0-c134ccd01987"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505050, 10720, 636, 11, 30, "Input",ExpressionUUID->"258cd5cd-625e-443a-9c0b-62a27e4003e9"],
Cell[505689, 10733, 61160, 1106, 503, "Output",ExpressionUUID->"3085030f-fae9-4271-81d9-add568005dac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566886, 11844, 483, 8, 30, "Input",ExpressionUUID->"5c0709c7-28e3-41a3-ae70-b3c223da4836"],
Cell[567372, 11854, 61074, 1104, 503, "Output",ExpressionUUID->"4f780700-d124-4bd9-bf29-cc06d0f8f63e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[628483, 12963, 814, 12, 30, "Input",ExpressionUUID->"dcc56565-3ff4-4b86-96d7-b9e70ab2baea"],
Cell[629300, 12977, 61942, 1117, 503, "Output",ExpressionUUID->"6fb24009-96e6-49f3-aced-66da2d95af0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[691279, 14099, 246, 4, 30, "Input",ExpressionUUID->"eb08879f-ce75-4580-b1af-e6dc133e4228"],
Cell[691528, 14105, 60983, 1102, 503, "Output",ExpressionUUID->"c596e2d5-d0ad-42d2-8bbb-14a3f06c126a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[752560, 15213, 164, 3, 67, "Section",ExpressionUUID->"fb3bdc9e-ac0c-461c-9f02-07383067a81d"],
Cell[CellGroupData[{
Cell[752749, 15220, 191, 3, 54, "Subsection",ExpressionUUID->"e376957a-baca-47e9-b90a-ba1d878647aa"],
Cell[752943, 15225, 573, 18, 81, "Text",ExpressionUUID->"5b9fa454-7c79-4aac-bea8-855621f77bcb"],
Cell[753519, 15245, 581, 18, 56, "Input",ExpressionUUID->"a14ecfa6-dbc2-48a4-b721-d92b6474e11b"],
Cell[CellGroupData[{
Cell[754125, 15267, 595, 15, 52, "Input",ExpressionUUID->"e2db8b1c-b8c8-477f-82d9-d479b7aa6d7d"],
Cell[754723, 15284, 8330, 226, 34, "Output",ExpressionUUID->"c6a409b6-fd51-443e-bf8e-b6235a96726e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[763090, 15515, 697, 19, 30, "Input",ExpressionUUID->"d3faa938-c3a8-4ace-b0a8-bfcd33d7e70e"],
Cell[763790, 15536, 535, 12, 28, "Message",ExpressionUUID->"9aededac-81d2-4e09-b4cb-caac6d66ff89"],
Cell[764328, 15550, 552, 11, 46, "Message",ExpressionUUID->"6f740314-f026-4ccb-9224-31f6d13fc2d7"],
Cell[764883, 15563, 551, 12, 46, "Message",ExpressionUUID->"a7bcac76-4613-4c77-affb-4254de478f7d"],
Cell[765437, 15577, 552, 11, 46, "Message",ExpressionUUID->"7d697f94-2b54-4e29-a5b8-1b8bfaed66c0"],
Cell[765992, 15590, 551, 12, 46, "Message",ExpressionUUID->"ac9d3c4f-01f9-4233-b0b7-c81f3e050617"],
Cell[766546, 15604, 534, 12, 28, "Message",ExpressionUUID->"e5a5399d-ff80-48f3-9552-1e5e4f06db23"],
Cell[767083, 15618, 552, 11, 46, "Message",ExpressionUUID->"cbd4e68a-2c52-46c9-a7d3-9457ca66997d"],
Cell[767638, 15631, 545, 11, 28, "Message",ExpressionUUID->"0ef5ed84-4364-40df-9e57-64e70d2c22ab"],
Cell[768186, 15644, 551, 12, 46, "Message",ExpressionUUID->"f0dc8725-b583-4e2c-a1e2-6ed60e690b76"],
Cell[768740, 15658, 543, 11, 28, "Message",ExpressionUUID->"f912eb3e-a8f4-49c7-bd3e-85f8931d690b"],
Cell[769286, 15671, 535, 12, 28, "Message",ExpressionUUID->"234fdf50-e3a4-437b-9bb8-3c78fc16c4ca"],
Cell[769824, 15685, 530, 11, 28, "Message",ExpressionUUID->"6c3ae0cc-248e-4ed0-8c22-21b5ff5b07f1"],
Cell[770357, 15698, 113187, 2010, 239, "Output",ExpressionUUID->"46fe81f1-cd2a-4acc-9f0d-b6dd0a3a93b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

